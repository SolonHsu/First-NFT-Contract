{
	"id": "c88595a5fd09bb11d30ef226dd6230a3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"test.sol": {
				"content": "pragma solidity ^0.4.2;\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    if (a == 0) {\n      return 0;\n    }\n    uint256 c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n  }\n\n  /**\n  * @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n}\n\ncontract paperstone {\n\nusing SafeMath for uint256;\n\nuint money=0;\nuint constant miner=0.1 ether;\nuint round=0;\naddress better;\nuint computer;\nconstructor()public payable{}\n\n\nmapping(uint => address)public player;\nmapping(uint => uint)public item;\nmapping(uint => string)public result;\n\nmodifier betcheck(){\n    if(money!=0){\n        require(player[round]==msg.sender);    \n    }\n    _;\n}\n\n\nfunction bet() public payable betcheck{\n    require(msg.value==miner);\n    money = money + miner;\n    player[round]==msg.sender;\n\n}\n\n\n\nfunction play(uint choose)public betcheck{\n    require(money>=0);\n    item[round]==choose;\n    computer=block.timestamp %3+1;\n    if(choose==computer)\n        {\n            result[round]=\"DRAW\";\n            msg.sender.transfer(money);\n        }\n    else if(choose<computer||(computer==1&&choose==2)){\n        result[round]=\"LOSE\";\n    }\n    else{\n        result[round]=\"WIN\";\n        msg.sender.transfer(money*2);\n    }\n    round++;\n    \n}\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"test.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"test.sol\":24:855  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0xb\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":252:259   */\n  dup1\n    /* \"--CODEGEN--\":246:260   */\n  mload\n    /* \"--CODEGEN--\":243:244   */\n  0x0\n    /* \"--CODEGEN--\":238:261   */\n  byte\n    /* \"--CODEGEN--\":232:236   */\n  0x73\n    /* \"--CODEGEN--\":229:262   */\n  eq\n    /* \"--CODEGEN--\":270:271   */\n  0x0\n    /* \"--CODEGEN--\":265:285   */\n  dup2\n  eq\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":222:285   */\n  jump(tag_1)\n    /* \"--CODEGEN--\":265:285   */\ntag_2:\n    /* \"--CODEGEN--\":274:283   */\n  invalid\n    /* \"--CODEGEN--\":222:285   */\ntag_1:\n  pop\n    /* \"--CODEGEN--\":298:307   */\n  address\n    /* \"--CODEGEN--\":295:296   */\n  0x0\n    /* \"--CODEGEN--\":288:308   */\n  mstore\n    /* \"--CODEGEN--\":328:332   */\n  0x73\n    /* \"--CODEGEN--\":319:326   */\n  dup2\n    /* \"--CODEGEN--\":311:333   */\n  mstore8\n    /* \"--CODEGEN--\":352:359   */\n  dup3\n    /* \"--CODEGEN--\":343:350   */\n  dup2\n    /* \"--CODEGEN--\":336:360   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"test.sol\":24:855  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a723058200699a689734b3faf56615574cbb4de8de7f52fd513cff3f9bece17bfb72a921a0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f30073000000000000000000000000000000000000000030146080604052600080fd00a165627a7a723058200699a689734b3faf56615574cbb4de8de7f52fd513cff3f9bece17bfb72a921a0029",
							"opcodes": "PUSH1 0x4C PUSH1 0x2C PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x0 DUP2 EQ PUSH1 0x1C JUMPI PUSH1 0x1E JUMP JUMPDEST INVALID JUMPDEST POP ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN STOP PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 MOD SWAP10 0xa6 DUP10 PUSH20 0x4B3FAF56615574CBB4DE8DE7F52FD513CFF3F9BE 0xce OR 0xbf 0xb7 0x2a SWAP3 BYTE STOP 0x29 ",
							"sourceMap": "24:831:0:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fd00a165627a7a723058200699a689734b3faf56615574cbb4de8de7f52fd513cff3f9bece17bfb72a921a0029",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 MOD SWAP10 0xa6 DUP10 PUSH20 0x4B3FAF56615574CBB4DE8DE7F52FD513CFF3F9BE 0xce OR 0xbf 0xb7 0x2a SWAP3 BYTE STOP 0x29 ",
							"sourceMap": "24:831:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "15200",
								"executionCost": "116",
								"totalCost": "15316"
							},
							"internal": {
								"div(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 24,
									"end": 855,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24,
									"end": 855,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 252,
									"end": 259,
									"name": "DUP1"
								},
								{
									"begin": 246,
									"end": 260,
									"name": "MLOAD"
								},
								{
									"begin": 243,
									"end": 244,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 238,
									"end": 261,
									"name": "BYTE"
								},
								{
									"begin": 232,
									"end": 236,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 229,
									"end": 262,
									"name": "EQ"
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "DUP2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "EQ"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPI"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMP"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 274,
									"end": 283,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "POP"
								},
								{
									"begin": 298,
									"end": 307,
									"name": "ADDRESS"
								},
								{
									"begin": 295,
									"end": 296,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 288,
									"end": 308,
									"name": "MSTORE"
								},
								{
									"begin": 328,
									"end": 332,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 319,
									"end": 326,
									"name": "DUP2"
								},
								{
									"begin": 311,
									"end": 333,
									"name": "MSTORE8"
								},
								{
									"begin": 352,
									"end": 359,
									"name": "DUP3"
								},
								{
									"begin": 343,
									"end": 350,
									"name": "DUP2"
								},
								{
									"begin": 336,
									"end": 360,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058200699a689734b3faf56615574cbb4de8de7f52fd513cff3f9bece17bfb72a921a0029",
									".code": [
										{
											"begin": 24,
											"end": 855,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 24,
											"end": 855,
											"name": "ADDRESS"
										},
										{
											"begin": 24,
											"end": 855,
											"name": "EQ"
										},
										{
											"begin": 24,
											"end": 855,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 24,
											"end": 855,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24,
											"end": 855,
											"name": "MSTORE"
										},
										{
											"begin": 24,
											"end": 855,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24,
											"end": 855,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 855,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"test.sol\":\"SafeMath\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"test.sol\":{\"keccak256\":\"0xf3ed67a767d49ef15bf6a07957a92bdd766ed4f63680ac398a23a8c9478ba0eb\",\"urls\":[\"bzzr://f0e87b09488c7102b62c7c7cf2c668d439b5a74f2fa40b9e415723a6d7e970b1\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"paperstone": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "bet",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"name": "result",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "choose",
									"type": "uint256"
								}
							],
							"name": "play",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"name": "item",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"name": "player",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"test.sol\":857:1824  contract paperstone {... */\n  mstore(0x40, 0x80)\n    /* \"test.sol\":920:921  0 */\n  0x0\n    /* \"test.sol\":909:921  uint money=0 */\n  dup1\n  sstore\n    /* \"test.sol\":965:966  0 */\n  0x0\n    /* \"test.sol\":954:966  uint round=0 */\n  0x1\n  sstore\n    /* \"test.sol\":857:1824  contract paperstone {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"test.sol\":857:1824  contract paperstone {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x11610c25\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x3c594059\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6898f82b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x898e6219\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x9e0551c6\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"test.sol\":1247:1378  function bet() public payable betcheck{... */\n    tag_2:\n      tag_7\n      jump(tag_8)\n    tag_7:\n      stop\n        /* \"test.sol\":1104:1140  mapping(uint => string)public result */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_9:\n        /* \"test.sol\":1104:1140  mapping(uint => string)public result */\n      pop\n      tag_10\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_11)\n    tag_10:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_12:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_12)\n    tag_13:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"test.sol\":1104:1140  mapping(uint => string)public result */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_15\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_15:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"test.sol\":1382:1821  function play(uint choose)public betcheck{... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_16:\n        /* \"test.sol\":1382:1821  function play(uint choose)public betcheck{... */\n      pop\n      tag_17\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_18)\n    tag_17:\n      stop\n        /* \"test.sol\":1070:1102  mapping(uint => uint)public item */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_19:\n        /* \"test.sol\":1070:1102  mapping(uint => uint)public item */\n      pop\n      tag_20\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_21)\n    tag_20:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"test.sol\":1031:1068  mapping(uint => address)public player */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_22:\n        /* \"test.sol\":1031:1068  mapping(uint => address)public player */\n      pop\n      tag_23\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_24)\n    tag_23:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"test.sol\":1247:1378  function bet() public payable betcheck{... */\n    tag_8:\n        /* \"test.sol\":1178:1179  0 */\n      0x0\n        /* \"test.sol\":1171:1176  money */\n      dup1\n      sload\n        /* \"test.sol\":1171:1179  money!=0 */\n      eq\n      iszero\n        /* \"test.sol\":1168:1235  if(money!=0){... */\n      iszero\n      tag_26\n      jumpi\n        /* \"test.sol\":1213:1223  msg.sender */\n      caller\n        /* \"test.sol\":1198:1223  player[round]==msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test.sol\":1198:1204  player */\n      0x4\n        /* \"test.sol\":1198:1211  player[round] */\n      0x0\n        /* \"test.sol\":1205:1210  round */\n      sload(0x1)\n        /* \"test.sol\":1198:1211  player[round] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test.sol\":1198:1223  player[round]==msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"test.sol\":1190:1224  require(player[round]==msg.sender) */\n      iszero\n      iszero\n      tag_27\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_27:\n        /* \"test.sol\":1168:1235  if(money!=0){... */\n    tag_26:\n        /* \"test.sol\":943:952  0.1 ether */\n      0x16345785d8a0000\n        /* \"test.sol\":1299:1308  msg.value */\n      callvalue\n        /* \"test.sol\":1299:1315  msg.value==miner */\n      eq\n        /* \"test.sol\":1291:1316  require(msg.value==miner) */\n      iszero\n      iszero\n      tag_29\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_29:\n        /* \"test.sol\":943:952  0.1 ether */\n      0x16345785d8a0000\n        /* \"test.sol\":1330:1335  money */\n      sload(0x0)\n        /* \"test.sol\":1330:1343  money + miner */\n      add\n        /* \"test.sol\":1322:1327  money */\n      0x0\n        /* \"test.sol\":1322:1343  money = money + miner */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"test.sol\":1364:1374  msg.sender */\n      caller\n        /* \"test.sol\":1349:1374  player[round]==msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test.sol\":1349:1355  player */\n      0x4\n        /* \"test.sol\":1349:1362  player[round] */\n      0x0\n        /* \"test.sol\":1356:1361  round */\n      sload(0x1)\n        /* \"test.sol\":1349:1362  player[round] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      pop\n      pop\n        /* \"test.sol\":1349:1374  player[round]==msg.sender */\n      pop\n        /* \"test.sol\":1247:1378  function bet() public payable betcheck{... */\n      jump\t// out\n        /* \"test.sol\":1104:1140  mapping(uint => string)public result */\n    tag_11:\n      mstore(0x20, 0x6)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      iszero\n      tag_30\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_31\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_30)\n    tag_31:\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_32:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x1\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_32\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_30:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"test.sol\":1382:1821  function play(uint choose)public betcheck{... */\n    tag_18:\n        /* \"test.sol\":1178:1179  0 */\n      0x0\n        /* \"test.sol\":1171:1176  money */\n      dup1\n      sload\n        /* \"test.sol\":1171:1179  money!=0 */\n      eq\n      iszero\n        /* \"test.sol\":1168:1235  if(money!=0){... */\n      iszero\n      tag_34\n      jumpi\n        /* \"test.sol\":1213:1223  msg.sender */\n      caller\n        /* \"test.sol\":1198:1223  player[round]==msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test.sol\":1198:1204  player */\n      0x4\n        /* \"test.sol\":1198:1211  player[round] */\n      0x0\n        /* \"test.sol\":1205:1210  round */\n      sload(0x1)\n        /* \"test.sol\":1198:1211  player[round] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test.sol\":1198:1223  player[round]==msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"test.sol\":1190:1224  require(player[round]==msg.sender) */\n      iszero\n      iszero\n      tag_35\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_35:\n        /* \"test.sol\":1168:1235  if(money!=0){... */\n    tag_34:\n        /* \"test.sol\":1444:1445  0 */\n      0x0\n        /* \"test.sol\":1437:1442  money */\n      dup1\n      sload\n        /* \"test.sol\":1437:1445  money>=0 */\n      lt\n      iszero\n        /* \"test.sol\":1429:1446  require(money>=0) */\n      iszero\n      iszero\n      tag_37\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_37:\n        /* \"test.sol\":1465:1471  choose */\n      dup1\n        /* \"test.sol\":1452:1456  item */\n      0x5\n        /* \"test.sol\":1452:1463  item[round] */\n      0x0\n        /* \"test.sol\":1457:1462  round */\n      sload(0x1)\n        /* \"test.sol\":1452:1463  item[round] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      pop\n        /* \"test.sol\":1452:1471  item[round]==choose */\n      pop\n        /* \"test.sol\":1505:1506  1 */\n      0x1\n        /* \"test.sol\":1503:1504  3 */\n      0x3\n        /* \"test.sol\":1486:1501  block.timestamp */\n      timestamp\n        /* \"test.sol\":1486:1504  block.timestamp %3 */\n      dup2\n      iszero\n      iszero\n      tag_38\n      jumpi\n      invalid\n    tag_38:\n      mod\n        /* \"test.sol\":1486:1506  block.timestamp %3+1 */\n      add\n        /* \"test.sol\":1477:1485  computer */\n      0x3\n        /* \"test.sol\":1477:1506  computer=block.timestamp %3+1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"test.sol\":1523:1531  computer */\n      sload(0x3)\n        /* \"test.sol\":1515:1521  choose */\n      dup2\n        /* \"test.sol\":1515:1531  choose==computer */\n      eq\n        /* \"test.sol\":1512:1801  if(choose==computer)... */\n      iszero\n      tag_39\n      jumpi\n        /* \"test.sol\":1555:1575  result[round]=\"DRAW\" */\n      0x40\n      dup1\n      mload\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      0x4\n      dup2\n      mstore\n      0x20\n      add\n      0x4452415700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"test.sol\":1555:1561  result */\n      0x6\n        /* \"test.sol\":1555:1568  result[round] */\n      0x0\n        /* \"test.sol\":1562:1567  round */\n      sload(0x1)\n        /* \"test.sol\":1555:1568  result[round] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"test.sol\":1555:1575  result[round]=\"DRAW\" */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_40\n      swap3\n      swap2\n      swap1\n      jump\t// in(tag_41)\n    tag_40:\n      pop\n        /* \"test.sol\":1589:1599  msg.sender */\n      caller\n        /* \"test.sol\":1589:1608  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test.sol\":1589:1615  msg.sender.transfer(money) */\n      0x8fc\n        /* \"test.sol\":1609:1614  money */\n      sload(0x0)\n        /* \"test.sol\":1589:1615  msg.sender.transfer(money) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_42:\n        /* \"test.sol\":1589:1615  msg.sender.transfer(money) */\n      pop\n        /* \"test.sol\":1512:1801  if(choose==computer)... */\n      jump(tag_43)\n    tag_39:\n        /* \"test.sol\":1646:1654  computer */\n      sload(0x3)\n        /* \"test.sol\":1639:1645  choose */\n      dup2\n        /* \"test.sol\":1639:1654  choose<computer */\n      lt\n        /* \"test.sol\":1639:1680  choose<computer||(computer==1&&choose==2) */\n      dup1\n      tag_44\n      jumpi\n      pop\n        /* \"test.sol\":1667:1668  1 */\n      0x1\n        /* \"test.sol\":1657:1665  computer */\n      sload(0x3)\n        /* \"test.sol\":1657:1668  computer==1 */\n      eq\n        /* \"test.sol\":1657:1679  computer==1&&choose==2 */\n      dup1\n      iszero\n      tag_45\n      jumpi\n      pop\n        /* \"test.sol\":1678:1679  2 */\n      0x2\n        /* \"test.sol\":1670:1676  choose */\n      dup2\n        /* \"test.sol\":1670:1679  choose==2 */\n      eq\n        /* \"test.sol\":1657:1679  computer==1&&choose==2 */\n    tag_45:\n        /* \"test.sol\":1639:1680  choose<computer||(computer==1&&choose==2) */\n    tag_44:\n        /* \"test.sol\":1636:1801  if(choose<computer||(computer==1&&choose==2)){... */\n      iszero\n      tag_46\n      jumpi\n        /* \"test.sol\":1691:1711  result[round]=\"LOSE\" */\n      0x40\n      dup1\n      mload\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      0x4\n      dup2\n      mstore\n      0x20\n      add\n      0x4c4f534500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"test.sol\":1691:1697  result */\n      0x6\n        /* \"test.sol\":1691:1704  result[round] */\n      0x0\n        /* \"test.sol\":1698:1703  round */\n      sload(0x1)\n        /* \"test.sol\":1691:1704  result[round] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"test.sol\":1691:1711  result[round]=\"LOSE\" */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_47\n      swap3\n      swap2\n      swap1\n      jump\t// in(tag_41)\n    tag_47:\n      pop\n        /* \"test.sol\":1636:1801  if(choose<computer||(computer==1&&choose==2)){... */\n      jump(tag_48)\n    tag_46:\n        /* \"test.sol\":1737:1756  result[round]=\"WIN\" */\n      0x40\n      dup1\n      mload\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      0x3\n      dup2\n      mstore\n      0x20\n      add\n      0x57494e0000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"test.sol\":1737:1743  result */\n      0x6\n        /* \"test.sol\":1737:1750  result[round] */\n      0x0\n        /* \"test.sol\":1744:1749  round */\n      sload(0x1)\n        /* \"test.sol\":1737:1750  result[round] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"test.sol\":1737:1756  result[round]=\"WIN\" */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_49\n      swap3\n      swap2\n      swap1\n      jump\t// in(tag_41)\n    tag_49:\n      pop\n        /* \"test.sol\":1766:1776  msg.sender */\n      caller\n        /* \"test.sol\":1766:1785  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test.sol\":1766:1794  msg.sender.transfer(money*2) */\n      0x8fc\n        /* \"test.sol\":1792:1793  2 */\n      0x2\n        /* \"test.sol\":1786:1791  money */\n      sload(0x0)\n        /* \"test.sol\":1786:1793  money*2 */\n      mul\n        /* \"test.sol\":1766:1794  msg.sender.transfer(money*2) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_50\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_50:\n        /* \"test.sol\":1766:1794  msg.sender.transfer(money*2) */\n      pop\n        /* \"test.sol\":1636:1801  if(choose<computer||(computer==1&&choose==2)){... */\n    tag_48:\n        /* \"test.sol\":1512:1801  if(choose==computer)... */\n    tag_43:\n        /* \"test.sol\":1806:1811  round */\n      0x1\n      0x0\n        /* \"test.sol\":1806:1813  round++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x1\n      add\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"test.sol\":1382:1821  function play(uint choose)public betcheck{... */\n      pop\n      jump\t// out\n        /* \"test.sol\":1070:1102  mapping(uint => uint)public item */\n    tag_21:\n      mstore(0x20, 0x5)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"test.sol\":1031:1068  mapping(uint => address)public player */\n    tag_24:\n      mstore(0x20, 0x4)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"test.sol\":857:1824  contract paperstone {... */\n    tag_41:\n      dup3\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      0x1f\n      lt\n      tag_52\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_51)\n    tag_52:\n      dup3\n      dup1\n      add\n      0x1\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_51\n      jumpi\n      swap2\n      dup3\n      add\n    tag_53:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_54\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x1\n      add\n      swap1\n      jump(tag_53)\n    tag_54:\n    tag_51:\n      pop\n      swap1\n      pop\n      tag_55\n      swap2\n      swap1\n      jump\t// in(tag_56)\n    tag_55:\n      pop\n      swap1\n      jump\t// out\n    tag_56:\n      tag_57\n      swap2\n      swap1\n    tag_58:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_59\n      jumpi\n      0x0\n      dup2\n      0x0\n      swap1\n      sstore\n      pop\n      0x1\n      add\n      jump(tag_58)\n    tag_59:\n      pop\n      swap1\n      jump\n    tag_57:\n      swap1\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058208bf676d990d03277070c1befc066f13ea9f4db211c961b4ff2ee9ffbd87683870029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526000805560006001556107628061001c6000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806311610c25146100725780633c5940591461007c5780636898f82b14610122578063898e62191461014f5780639e0551c614610190575b600080fd5b61007a6101fd565b005b34801561008857600080fd5b506100a7600480360381019080803590602001909291905050506102dc565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100e75780820151818401526020810190506100cc565b50505050905090810190601f1680156101145780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561012e57600080fd5b5061014d6004803603810190808035906020019092919050505061038c565b005b34801561015b57600080fd5b5061017a60048036038101908080359060200190929190505050610646565b6040518082815260200191505060405180910390f35b34801561019c57600080fd5b506101bb6004803603810190808035906020019092919050505061065e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008054141515610278573373ffffffffffffffffffffffffffffffffffffffff1660046000600154815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561027757600080fd5b5b67016345785d8a00003414151561028e57600080fd5b67016345785d8a0000600054016000819055503373ffffffffffffffffffffffffffffffffffffffff1660046000600154815260200190815260200160002060009054906101000a90505050565b60066020528060005260406000206000915090508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103845780601f1061035957610100808354040283529160200191610384565b820191906000526020600020905b81548152906001019060200180831161036757829003601f168201915b505050505081565b60008054141515610407573373ffffffffffffffffffffffffffffffffffffffff1660046000600154815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561040657600080fd5b5b600080541015151561041857600080fd5b806005600060015481526020019081526020016000205050600160034281151561043e57fe5b06016003819055506003548114156104fd576040805190810160405280600481526020017f445241570000000000000000000000000000000000000000000000000000000081525060066000600154815260200190815260200160002090805190602001906104ae929190610691565b503373ffffffffffffffffffffffffffffffffffffffff166108fc6000549081150290604051600060405180830381858888f193505050501580156104f7573d6000803e3d6000fd5b50610631565b60035481108061051b5750600160035414801561051a5750600281145b5b15610584576040805190810160405280600481526020017f4c4f534500000000000000000000000000000000000000000000000000000000815250600660006001548152602001908152602001600020908051906020019061057e929190610691565b50610630565b6040805190810160405280600381526020017f57494e000000000000000000000000000000000000000000000000000000000081525060066000600154815260200190815260200160002090805190602001906105e2929190610691565b503373ffffffffffffffffffffffffffffffffffffffff166108fc6002600054029081150290604051600060405180830381858888f1935050505015801561062e573d6000803e3d6000fd5b505b5b60016000815480929190600101919050555050565b60056020528060005260406000206000915090505481565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106106d257805160ff1916838001178555610700565b82800160010185558215610700579182015b828111156106ff5782518255916020019190600101906106e4565b5b50905061070d9190610711565b5090565b61073391905b8082111561072f576000816000905550600101610717565b5090565b905600a165627a7a723058208bf676d990d03277070c1befc066f13ea9f4db211c961b4ff2ee9ffbd87683870029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SSTORE PUSH1 0x0 PUSH1 0x1 SSTORE PUSH2 0x762 DUP1 PUSH2 0x1C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6D JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x11610C25 EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0x3C594059 EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0x6898F82B EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x898E6219 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x9E0551C6 EQ PUSH2 0x190 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0x1FD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xCC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x114 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x38C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x65E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD EQ ISZERO ISZERO PUSH2 0x278 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST PUSH8 0x16345785D8A0000 CALLVALUE EQ ISZERO ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0x16345785D8A0000 PUSH1 0x0 SLOAD ADD PUSH1 0x0 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x384 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x359 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x384 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x367 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD EQ ISZERO ISZERO PUSH2 0x407 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x406 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 DUP1 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x418 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 POP POP PUSH1 0x1 PUSH1 0x3 TIMESTAMP DUP2 ISZERO ISZERO PUSH2 0x43E JUMPI INVALID JUMPDEST MOD ADD PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD DUP2 EQ ISZERO PUSH2 0x4FD JUMPI PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4452415700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x4AE SWAP3 SWAP2 SWAP1 PUSH2 0x691 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x0 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x631 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT DUP1 PUSH2 0x51B JUMPI POP PUSH1 0x1 PUSH1 0x3 SLOAD EQ DUP1 ISZERO PUSH2 0x51A JUMPI POP PUSH1 0x2 DUP2 EQ JUMPDEST JUMPDEST ISZERO PUSH2 0x584 JUMPI PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C4F534500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x57E SWAP3 SWAP2 SWAP1 PUSH2 0x691 JUMP JUMPDEST POP PUSH2 0x630 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x57494E0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x5E2 SWAP3 SWAP2 SWAP1 PUSH2 0x691 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x2 PUSH1 0x0 SLOAD MUL SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x62E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x6D2 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x700 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x700 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x6FF JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x6E4 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x70D SWAP2 SWAP1 PUSH2 0x711 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x733 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x72F JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x717 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 DUP12 0xf6 PUSH23 0xD990D03277070C1BEFC066F13EA9F4DB211C961B4FF2EE SWAP16 CREATE2 0xd8 PUSH23 0x8387002900000000000000000000000000000000000000 ",
							"sourceMap": "857:967:0:-;;;920:1;909:12;;965:1;954:12;;857:967;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806311610c25146100725780633c5940591461007c5780636898f82b14610122578063898e62191461014f5780639e0551c614610190575b600080fd5b61007a6101fd565b005b34801561008857600080fd5b506100a7600480360381019080803590602001909291905050506102dc565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100e75780820151818401526020810190506100cc565b50505050905090810190601f1680156101145780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561012e57600080fd5b5061014d6004803603810190808035906020019092919050505061038c565b005b34801561015b57600080fd5b5061017a60048036038101908080359060200190929190505050610646565b6040518082815260200191505060405180910390f35b34801561019c57600080fd5b506101bb6004803603810190808035906020019092919050505061065e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008054141515610278573373ffffffffffffffffffffffffffffffffffffffff1660046000600154815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561027757600080fd5b5b67016345785d8a00003414151561028e57600080fd5b67016345785d8a0000600054016000819055503373ffffffffffffffffffffffffffffffffffffffff1660046000600154815260200190815260200160002060009054906101000a90505050565b60066020528060005260406000206000915090508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103845780601f1061035957610100808354040283529160200191610384565b820191906000526020600020905b81548152906001019060200180831161036757829003601f168201915b505050505081565b60008054141515610407573373ffffffffffffffffffffffffffffffffffffffff1660046000600154815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561040657600080fd5b5b600080541015151561041857600080fd5b806005600060015481526020019081526020016000205050600160034281151561043e57fe5b06016003819055506003548114156104fd576040805190810160405280600481526020017f445241570000000000000000000000000000000000000000000000000000000081525060066000600154815260200190815260200160002090805190602001906104ae929190610691565b503373ffffffffffffffffffffffffffffffffffffffff166108fc6000549081150290604051600060405180830381858888f193505050501580156104f7573d6000803e3d6000fd5b50610631565b60035481108061051b5750600160035414801561051a5750600281145b5b15610584576040805190810160405280600481526020017f4c4f534500000000000000000000000000000000000000000000000000000000815250600660006001548152602001908152602001600020908051906020019061057e929190610691565b50610630565b6040805190810160405280600381526020017f57494e000000000000000000000000000000000000000000000000000000000081525060066000600154815260200190815260200160002090805190602001906105e2929190610691565b503373ffffffffffffffffffffffffffffffffffffffff166108fc6002600054029081150290604051600060405180830381858888f1935050505015801561062e573d6000803e3d6000fd5b505b5b60016000815480929190600101919050555050565b60056020528060005260406000206000915090505481565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106106d257805160ff1916838001178555610700565b82800160010185558215610700579182015b828111156106ff5782518255916020019190600101906106e4565b5b50905061070d9190610711565b5090565b61073391905b8082111561072f576000816000905550600101610717565b5090565b905600a165627a7a723058208bf676d990d03277070c1befc066f13ea9f4db211c961b4ff2ee9ffbd87683870029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6D JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x11610C25 EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0x3C594059 EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0x6898F82B EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x898E6219 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x9E0551C6 EQ PUSH2 0x190 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0x1FD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xCC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x114 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x38C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x65E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD EQ ISZERO ISZERO PUSH2 0x278 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST PUSH8 0x16345785D8A0000 CALLVALUE EQ ISZERO ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0x16345785D8A0000 PUSH1 0x0 SLOAD ADD PUSH1 0x0 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x384 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x359 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x384 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x367 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD EQ ISZERO ISZERO PUSH2 0x407 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x406 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 DUP1 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x418 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 POP POP PUSH1 0x1 PUSH1 0x3 TIMESTAMP DUP2 ISZERO ISZERO PUSH2 0x43E JUMPI INVALID JUMPDEST MOD ADD PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD DUP2 EQ ISZERO PUSH2 0x4FD JUMPI PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4452415700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x4AE SWAP3 SWAP2 SWAP1 PUSH2 0x691 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x0 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x631 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT DUP1 PUSH2 0x51B JUMPI POP PUSH1 0x1 PUSH1 0x3 SLOAD EQ DUP1 ISZERO PUSH2 0x51A JUMPI POP PUSH1 0x2 DUP2 EQ JUMPDEST JUMPDEST ISZERO PUSH2 0x584 JUMPI PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C4F534500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x57E SWAP3 SWAP2 SWAP1 PUSH2 0x691 JUMP JUMPDEST POP PUSH2 0x630 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x57494E0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x5E2 SWAP3 SWAP2 SWAP1 PUSH2 0x691 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x2 PUSH1 0x0 SLOAD MUL SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x62E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x6D2 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x700 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x700 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x6FF JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x6E4 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x70D SWAP2 SWAP1 PUSH2 0x711 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x733 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x72F JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x717 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 DUP12 0xf6 PUSH23 0xD990D03277070C1BEFC066F13EA9F4DB211C961B4FF2EE SWAP16 CREATE2 0xd8 PUSH23 0x8387002900000000000000000000000000000000000000 ",
							"sourceMap": "857:967:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1247:131;;;;;;1104:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1104:36:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1104:36:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1382:439;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1382:439:0;;;;;;;;;;;;;;;;;;;;;;;;;;1070:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1070:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1031:37;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1031:37:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1247:131;1178:1;1171:5;;:8;;1168:67;;;1213:10;1198:25;;:6;:13;1205:5;;1198:13;;;;;;;;;;;;;;;;;;;;;:25;;;1190:34;;;;;;;;1168:67;943:9;1299;:16;1291:25;;;;;;;;943:9;1330:5;;:13;1322:5;:21;;;;1364:10;1349:25;;:6;:13;1356:5;;1349:13;;;;;;;;;;;;;;;;;;;;:25;1247:131::o;1104:36::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1382:439::-;1178:1;1171:5;;:8;;1168:67;;;1213:10;1198:25;;:6;:13;1205:5;;1198:13;;;;;;;;;;;;;;;;;;;;;:25;;;1190:34;;;;;;;;1168:67;1444:1;1437:5;;:8;;1429:17;;;;;;;;1465:6;1452:4;:11;1457:5;;1452:11;;;;;;;;;;;;:19;1505:1;1503;1486:15;:18;;;;;;;;:20;1477:8;:29;;;;1523:8;;1515:6;:16;1512:289;;;1555:20;;;;;;;;;;;;;;;;;;:6;:13;1562:5;;1555:13;;;;;;;;;;;:20;;;;;;;;;;;;:::i;:::-;;1589:10;:19;;:26;1609:5;;1589:26;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1589:26:0;1512:289;;;1646:8;;1639:6;:15;:41;;;;1667:1;1657:8;;:11;:22;;;;;1678:1;1670:6;:9;1657:22;1639:41;1636:165;;;1691:20;;;;;;;;;;;;;;;;;;:6;:13;1698:5;;1691:13;;;;;;;;;;;:20;;;;;;;;;;;;:::i;:::-;;1636:165;;;1737:19;;;;;;;;;;;;;;;;;;:6;:13;1744:5;;1737:13;;;;;;;;;;;:19;;;;;;;;;;;;:::i;:::-;;1766:10;:19;;:28;1792:1;1786:5;;:7;1766:28;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1766:28:0;1636:165;1512:289;1806:5;;:7;;;;;;;;;;;;;1382:439;:::o;1070:32::-;;;;;;;;;;;;;;;;;:::o;1031:37::-;;;;;;;;;;;;;;;;;;;;;;:::o;857:967::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "378000",
								"executionCost": "10406",
								"totalCost": "388406"
							},
							"external": {
								"bet()": "21660",
								"item(uint256)": "592",
								"play(uint256)": "infinite",
								"player(uint256)": "651",
								"result(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 857,
									"end": 1824,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 857,
									"end": 1824,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 857,
									"end": 1824,
									"name": "MSTORE"
								},
								{
									"begin": 920,
									"end": 921,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 909,
									"end": 921,
									"name": "DUP1"
								},
								{
									"begin": 909,
									"end": 921,
									"name": "SSTORE"
								},
								{
									"begin": 965,
									"end": 966,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 954,
									"end": 966,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 954,
									"end": 966,
									"name": "SSTORE"
								},
								{
									"begin": 857,
									"end": 1824,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 857,
									"end": 1824,
									"name": "DUP1"
								},
								{
									"begin": 857,
									"end": 1824,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 857,
									"end": 1824,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 857,
									"end": 1824,
									"name": "CODECOPY"
								},
								{
									"begin": 857,
									"end": 1824,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 857,
									"end": 1824,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058208bf676d990d03277070c1befc066f13ea9f4db211c961b4ff2ee9ffbd87683870029",
									".code": [
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "MSTORE"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "LT"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "JUMPI"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "SWAP1"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "DIV"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "AND"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "DUP1"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH",
											"value": "11610C25"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "EQ"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "JUMPI"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "DUP1"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH",
											"value": "3C594059"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "EQ"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "JUMPI"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "DUP1"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH",
											"value": "6898F82B"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "EQ"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "JUMPI"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "DUP1"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH",
											"value": "898E6219"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "EQ"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "JUMPI"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "DUP1"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH",
											"value": "9E0551C6"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "EQ"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "JUMPI"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "JUMPDEST"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "DUP1"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "REVERT"
										},
										{
											"begin": 1247,
											"end": 1378,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1247,
											"end": 1378,
											"name": "JUMPDEST"
										},
										{
											"begin": 1247,
											"end": 1378,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1247,
											"end": 1378,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1247,
											"end": 1378,
											"name": "JUMP"
										},
										{
											"begin": 1247,
											"end": 1378,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1247,
											"end": 1378,
											"name": "JUMPDEST"
										},
										{
											"begin": 1247,
											"end": 1378,
											"name": "STOP"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "JUMPDEST"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "POP"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SUB"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP2"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "ADD"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SWAP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SWAP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "ADD"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SWAP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SWAP3"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SWAP2"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SWAP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "POP"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "POP"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "POP"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "JUMP"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "JUMPDEST"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "MLOAD"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "ADD"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP3"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP2"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SUB"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP3"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "MSTORE"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP4"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP2"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP2"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "MLOAD"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP2"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "MSTORE"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "ADD"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SWAP2"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "POP"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "MLOAD"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SWAP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "ADD"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SWAP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP4"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "POP"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "POP"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "POP"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SWAP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "POP"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SWAP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP2"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "ADD"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SWAP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "AND"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "ISZERO"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "JUMPI"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP3"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SUB"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "MLOAD"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP4"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SUB"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "EXP"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SUB"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "NOT"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "AND"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP2"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "MSTORE"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "ADD"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SWAP2"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "POP"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "JUMPDEST"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "POP"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SWAP3"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "POP"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "POP"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "POP"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "MLOAD"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SWAP2"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SUB"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SWAP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "RETURN"
										},
										{
											"begin": 1382,
											"end": 1821,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1382,
											"end": 1821,
											"name": "JUMPDEST"
										},
										{
											"begin": 1382,
											"end": 1821,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1382,
											"end": 1821,
											"name": "POP"
										},
										{
											"begin": 1382,
											"end": 1821,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1382,
											"end": 1821,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1382,
											"end": 1821,
											"name": "DUP1"
										},
										{
											"begin": 1382,
											"end": 1821,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1382,
											"end": 1821,
											"name": "SUB"
										},
										{
											"begin": 1382,
											"end": 1821,
											"name": "DUP2"
										},
										{
											"begin": 1382,
											"end": 1821,
											"name": "ADD"
										},
										{
											"begin": 1382,
											"end": 1821,
											"name": "SWAP1"
										},
										{
											"begin": 1382,
											"end": 1821,
											"name": "DUP1"
										},
										{
											"begin": 1382,
											"end": 1821,
											"name": "DUP1"
										},
										{
											"begin": 1382,
											"end": 1821,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1382,
											"end": 1821,
											"name": "SWAP1"
										},
										{
											"begin": 1382,
											"end": 1821,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1382,
											"end": 1821,
											"name": "ADD"
										},
										{
											"begin": 1382,
											"end": 1821,
											"name": "SWAP1"
										},
										{
											"begin": 1382,
											"end": 1821,
											"name": "SWAP3"
										},
										{
											"begin": 1382,
											"end": 1821,
											"name": "SWAP2"
										},
										{
											"begin": 1382,
											"end": 1821,
											"name": "SWAP1"
										},
										{
											"begin": 1382,
											"end": 1821,
											"name": "POP"
										},
										{
											"begin": 1382,
											"end": 1821,
											"name": "POP"
										},
										{
											"begin": 1382,
											"end": 1821,
											"name": "POP"
										},
										{
											"begin": 1382,
											"end": 1821,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 1382,
											"end": 1821,
											"name": "JUMP"
										},
										{
											"begin": 1382,
											"end": 1821,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1382,
											"end": 1821,
											"name": "JUMPDEST"
										},
										{
											"begin": 1382,
											"end": 1821,
											"name": "STOP"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "JUMPDEST"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "POP"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "DUP1"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "SUB"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "DUP2"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "ADD"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "SWAP1"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "DUP1"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "DUP1"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "SWAP1"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "ADD"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "SWAP1"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "SWAP3"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "SWAP2"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "SWAP1"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "POP"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "POP"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "POP"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "JUMP"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "JUMPDEST"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "MLOAD"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "DUP1"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "DUP3"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "DUP2"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "MSTORE"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "ADD"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "SWAP2"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "POP"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "POP"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "MLOAD"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "DUP1"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "SWAP2"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "SUB"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "SWAP1"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "RETURN"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "JUMPDEST"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "POP"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "DUP1"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "SUB"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "DUP2"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "ADD"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "SWAP1"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "DUP1"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "DUP1"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "SWAP1"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "ADD"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "SWAP1"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "SWAP3"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "SWAP2"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "SWAP1"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "POP"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "POP"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "POP"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "JUMP"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "JUMPDEST"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "MLOAD"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "DUP1"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "DUP3"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "AND"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "AND"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "DUP2"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "MSTORE"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "ADD"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "SWAP2"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "POP"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "POP"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "MLOAD"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "DUP1"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "SWAP2"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "SUB"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "SWAP1"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "RETURN"
										},
										{
											"begin": 1247,
											"end": 1378,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1247,
											"end": 1378,
											"name": "JUMPDEST"
										},
										{
											"begin": 1178,
											"end": 1179,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1176,
											"name": "DUP1"
										},
										{
											"begin": 1171,
											"end": 1176,
											"name": "SLOAD"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "EQ"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "ISZERO"
										},
										{
											"begin": 1168,
											"end": 1235,
											"name": "ISZERO"
										},
										{
											"begin": 1168,
											"end": 1235,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 1168,
											"end": 1235,
											"name": "JUMPI"
										},
										{
											"begin": 1213,
											"end": 1223,
											"name": "CALLER"
										},
										{
											"begin": 1198,
											"end": 1223,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1198,
											"end": 1223,
											"name": "AND"
										},
										{
											"begin": 1198,
											"end": 1204,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1210,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1205,
											"end": 1210,
											"name": "SLOAD"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "DUP2"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "MSTORE"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "ADD"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "DUP2"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "MSTORE"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "ADD"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "KECCAK256"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "SLOAD"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "EXP"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "DIV"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "AND"
										},
										{
											"begin": 1198,
											"end": 1223,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1198,
											"end": 1223,
											"name": "AND"
										},
										{
											"begin": 1198,
											"end": 1223,
											"name": "EQ"
										},
										{
											"begin": 1190,
											"end": 1224,
											"name": "ISZERO"
										},
										{
											"begin": 1190,
											"end": 1224,
											"name": "ISZERO"
										},
										{
											"begin": 1190,
											"end": 1224,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1190,
											"end": 1224,
											"name": "JUMPI"
										},
										{
											"begin": 1190,
											"end": 1224,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1224,
											"name": "DUP1"
										},
										{
											"begin": 1190,
											"end": 1224,
											"name": "REVERT"
										},
										{
											"begin": 1190,
											"end": 1224,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 1190,
											"end": 1224,
											"name": "JUMPDEST"
										},
										{
											"begin": 1168,
											"end": 1235,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 1168,
											"end": 1235,
											"name": "JUMPDEST"
										},
										{
											"begin": 943,
											"end": 952,
											"name": "PUSH",
											"value": "16345785D8A0000"
										},
										{
											"begin": 1299,
											"end": 1308,
											"name": "CALLVALUE"
										},
										{
											"begin": 1299,
											"end": 1315,
											"name": "EQ"
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "ISZERO"
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "ISZERO"
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "JUMPI"
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "DUP1"
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "REVERT"
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "JUMPDEST"
										},
										{
											"begin": 943,
											"end": 952,
											"name": "PUSH",
											"value": "16345785D8A0000"
										},
										{
											"begin": 1330,
											"end": 1335,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1330,
											"end": 1335,
											"name": "SLOAD"
										},
										{
											"begin": 1330,
											"end": 1343,
											"name": "ADD"
										},
										{
											"begin": 1322,
											"end": 1327,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1343,
											"name": "DUP2"
										},
										{
											"begin": 1322,
											"end": 1343,
											"name": "SWAP1"
										},
										{
											"begin": 1322,
											"end": 1343,
											"name": "SSTORE"
										},
										{
											"begin": 1322,
											"end": 1343,
											"name": "POP"
										},
										{
											"begin": 1364,
											"end": 1374,
											"name": "CALLER"
										},
										{
											"begin": 1349,
											"end": 1374,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1349,
											"end": 1374,
											"name": "AND"
										},
										{
											"begin": 1349,
											"end": 1355,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1349,
											"end": 1362,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1356,
											"end": 1361,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1356,
											"end": 1361,
											"name": "SLOAD"
										},
										{
											"begin": 1349,
											"end": 1362,
											"name": "DUP2"
										},
										{
											"begin": 1349,
											"end": 1362,
											"name": "MSTORE"
										},
										{
											"begin": 1349,
											"end": 1362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1349,
											"end": 1362,
											"name": "ADD"
										},
										{
											"begin": 1349,
											"end": 1362,
											"name": "SWAP1"
										},
										{
											"begin": 1349,
											"end": 1362,
											"name": "DUP2"
										},
										{
											"begin": 1349,
											"end": 1362,
											"name": "MSTORE"
										},
										{
											"begin": 1349,
											"end": 1362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1349,
											"end": 1362,
											"name": "ADD"
										},
										{
											"begin": 1349,
											"end": 1362,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1349,
											"end": 1362,
											"name": "KECCAK256"
										},
										{
											"begin": 1349,
											"end": 1362,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1349,
											"end": 1362,
											"name": "SWAP1"
										},
										{
											"begin": 1349,
											"end": 1362,
											"name": "SLOAD"
										},
										{
											"begin": 1349,
											"end": 1362,
											"name": "SWAP1"
										},
										{
											"begin": 1349,
											"end": 1362,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1349,
											"end": 1362,
											"name": "EXP"
										},
										{
											"begin": 1349,
											"end": 1362,
											"name": "SWAP1"
										},
										{
											"begin": 1349,
											"end": 1362,
											"name": "POP"
										},
										{
											"begin": 1349,
											"end": 1362,
											"name": "POP"
										},
										{
											"begin": 1349,
											"end": 1374,
											"name": "POP"
										},
										{
											"begin": 1247,
											"end": 1378,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "JUMPDEST"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "MSTORE"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "MSTORE"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "KECCAK256"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SWAP2"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "POP"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SWAP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "POP"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SLOAD"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP2"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "AND"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "ISZERO"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "MUL"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SUB"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "AND"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SWAP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DIV"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "ADD"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SWAP2"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DIV"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "MUL"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "ADD"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "MLOAD"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SWAP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP2"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "ADD"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "MSTORE"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SWAP3"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SWAP2"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SWAP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP2"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP2"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "MSTORE"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "ADD"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP3"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SLOAD"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP2"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "AND"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "ISZERO"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "MUL"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SUB"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "AND"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SWAP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DIV"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "ISZERO"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "JUMPI"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "LT"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "JUMPI"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP4"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SLOAD"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DIV"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "MUL"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP4"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "MSTORE"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SWAP2"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "ADD"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SWAP2"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "JUMP"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "JUMPDEST"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP3"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "ADD"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SWAP2"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SWAP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "MSTORE"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "KECCAK256"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SWAP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "JUMPDEST"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP2"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SLOAD"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP2"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "MSTORE"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SWAP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "ADD"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SWAP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "ADD"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP4"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "GT"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "JUMPI"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP3"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SWAP1"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SUB"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "AND"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP3"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "ADD"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "SWAP2"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "JUMPDEST"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "POP"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "POP"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "POP"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "POP"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "POP"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "DUP2"
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1382,
											"end": 1821,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 1382,
											"end": 1821,
											"name": "JUMPDEST"
										},
										{
											"begin": 1178,
											"end": 1179,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1176,
											"name": "DUP1"
										},
										{
											"begin": 1171,
											"end": 1176,
											"name": "SLOAD"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "EQ"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "ISZERO"
										},
										{
											"begin": 1168,
											"end": 1235,
											"name": "ISZERO"
										},
										{
											"begin": 1168,
											"end": 1235,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 1168,
											"end": 1235,
											"name": "JUMPI"
										},
										{
											"begin": 1213,
											"end": 1223,
											"name": "CALLER"
										},
										{
											"begin": 1198,
											"end": 1223,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1198,
											"end": 1223,
											"name": "AND"
										},
										{
											"begin": 1198,
											"end": 1204,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1210,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1205,
											"end": 1210,
											"name": "SLOAD"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "DUP2"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "MSTORE"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "ADD"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "DUP2"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "MSTORE"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "ADD"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "KECCAK256"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "SLOAD"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "EXP"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "DIV"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "AND"
										},
										{
											"begin": 1198,
											"end": 1223,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1198,
											"end": 1223,
											"name": "AND"
										},
										{
											"begin": 1198,
											"end": 1223,
											"name": "EQ"
										},
										{
											"begin": 1190,
											"end": 1224,
											"name": "ISZERO"
										},
										{
											"begin": 1190,
											"end": 1224,
											"name": "ISZERO"
										},
										{
											"begin": 1190,
											"end": 1224,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 1190,
											"end": 1224,
											"name": "JUMPI"
										},
										{
											"begin": 1190,
											"end": 1224,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1224,
											"name": "DUP1"
										},
										{
											"begin": 1190,
											"end": 1224,
											"name": "REVERT"
										},
										{
											"begin": 1190,
											"end": 1224,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 1190,
											"end": 1224,
											"name": "JUMPDEST"
										},
										{
											"begin": 1168,
											"end": 1235,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 1168,
											"end": 1235,
											"name": "JUMPDEST"
										},
										{
											"begin": 1444,
											"end": 1445,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1437,
											"end": 1442,
											"name": "DUP1"
										},
										{
											"begin": 1437,
											"end": 1442,
											"name": "SLOAD"
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "LT"
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "ISZERO"
										},
										{
											"begin": 1429,
											"end": 1446,
											"name": "ISZERO"
										},
										{
											"begin": 1429,
											"end": 1446,
											"name": "ISZERO"
										},
										{
											"begin": 1429,
											"end": 1446,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 1429,
											"end": 1446,
											"name": "JUMPI"
										},
										{
											"begin": 1429,
											"end": 1446,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1446,
											"name": "DUP1"
										},
										{
											"begin": 1429,
											"end": 1446,
											"name": "REVERT"
										},
										{
											"begin": 1429,
											"end": 1446,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 1429,
											"end": 1446,
											"name": "JUMPDEST"
										},
										{
											"begin": 1465,
											"end": 1471,
											"name": "DUP1"
										},
										{
											"begin": 1452,
											"end": 1456,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1452,
											"end": 1463,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1462,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1457,
											"end": 1462,
											"name": "SLOAD"
										},
										{
											"begin": 1452,
											"end": 1463,
											"name": "DUP2"
										},
										{
											"begin": 1452,
											"end": 1463,
											"name": "MSTORE"
										},
										{
											"begin": 1452,
											"end": 1463,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1452,
											"end": 1463,
											"name": "ADD"
										},
										{
											"begin": 1452,
											"end": 1463,
											"name": "SWAP1"
										},
										{
											"begin": 1452,
											"end": 1463,
											"name": "DUP2"
										},
										{
											"begin": 1452,
											"end": 1463,
											"name": "MSTORE"
										},
										{
											"begin": 1452,
											"end": 1463,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1452,
											"end": 1463,
											"name": "ADD"
										},
										{
											"begin": 1452,
											"end": 1463,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1463,
											"name": "KECCAK256"
										},
										{
											"begin": 1452,
											"end": 1463,
											"name": "POP"
										},
										{
											"begin": 1452,
											"end": 1471,
											"name": "POP"
										},
										{
											"begin": 1505,
											"end": 1506,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1503,
											"end": 1504,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1486,
											"end": 1501,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1486,
											"end": 1504,
											"name": "DUP2"
										},
										{
											"begin": 1486,
											"end": 1504,
											"name": "ISZERO"
										},
										{
											"begin": 1486,
											"end": 1504,
											"name": "ISZERO"
										},
										{
											"begin": 1486,
											"end": 1504,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 1486,
											"end": 1504,
											"name": "JUMPI"
										},
										{
											"begin": 1486,
											"end": 1504,
											"name": "INVALID"
										},
										{
											"begin": 1486,
											"end": 1504,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 1486,
											"end": 1504,
											"name": "JUMPDEST"
										},
										{
											"begin": 1486,
											"end": 1504,
											"name": "MOD"
										},
										{
											"begin": 1486,
											"end": 1506,
											"name": "ADD"
										},
										{
											"begin": 1477,
											"end": 1485,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1477,
											"end": 1506,
											"name": "DUP2"
										},
										{
											"begin": 1477,
											"end": 1506,
											"name": "SWAP1"
										},
										{
											"begin": 1477,
											"end": 1506,
											"name": "SSTORE"
										},
										{
											"begin": 1477,
											"end": 1506,
											"name": "POP"
										},
										{
											"begin": 1523,
											"end": 1531,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1523,
											"end": 1531,
											"name": "SLOAD"
										},
										{
											"begin": 1515,
											"end": 1521,
											"name": "DUP2"
										},
										{
											"begin": 1515,
											"end": 1531,
											"name": "EQ"
										},
										{
											"begin": 1512,
											"end": 1801,
											"name": "ISZERO"
										},
										{
											"begin": 1512,
											"end": 1801,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 1512,
											"end": 1801,
											"name": "JUMPI"
										},
										{
											"begin": 1555,
											"end": 1575,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1555,
											"end": 1575,
											"name": "DUP1"
										},
										{
											"begin": 1555,
											"end": 1575,
											"name": "MLOAD"
										},
										{
											"begin": 1555,
											"end": 1575,
											"name": "SWAP1"
										},
										{
											"begin": 1555,
											"end": 1575,
											"name": "DUP2"
										},
										{
											"begin": 1555,
											"end": 1575,
											"name": "ADD"
										},
										{
											"begin": 1555,
											"end": 1575,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1555,
											"end": 1575,
											"name": "MSTORE"
										},
										{
											"begin": 1555,
											"end": 1575,
											"name": "DUP1"
										},
										{
											"begin": 1555,
											"end": 1575,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1555,
											"end": 1575,
											"name": "DUP2"
										},
										{
											"begin": 1555,
											"end": 1575,
											"name": "MSTORE"
										},
										{
											"begin": 1555,
											"end": 1575,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1555,
											"end": 1575,
											"name": "ADD"
										},
										{
											"begin": 1555,
											"end": 1575,
											"name": "PUSH",
											"value": "4452415700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1555,
											"end": 1575,
											"name": "DUP2"
										},
										{
											"begin": 1555,
											"end": 1575,
											"name": "MSTORE"
										},
										{
											"begin": 1555,
											"end": 1575,
											"name": "POP"
										},
										{
											"begin": 1555,
											"end": 1561,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1555,
											"end": 1568,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1562,
											"end": 1567,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1562,
											"end": 1567,
											"name": "SLOAD"
										},
										{
											"begin": 1555,
											"end": 1568,
											"name": "DUP2"
										},
										{
											"begin": 1555,
											"end": 1568,
											"name": "MSTORE"
										},
										{
											"begin": 1555,
											"end": 1568,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1555,
											"end": 1568,
											"name": "ADD"
										},
										{
											"begin": 1555,
											"end": 1568,
											"name": "SWAP1"
										},
										{
											"begin": 1555,
											"end": 1568,
											"name": "DUP2"
										},
										{
											"begin": 1555,
											"end": 1568,
											"name": "MSTORE"
										},
										{
											"begin": 1555,
											"end": 1568,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1555,
											"end": 1568,
											"name": "ADD"
										},
										{
											"begin": 1555,
											"end": 1568,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1555,
											"end": 1568,
											"name": "KECCAK256"
										},
										{
											"begin": 1555,
											"end": 1575,
											"name": "SWAP1"
										},
										{
											"begin": 1555,
											"end": 1575,
											"name": "DUP1"
										},
										{
											"begin": 1555,
											"end": 1575,
											"name": "MLOAD"
										},
										{
											"begin": 1555,
											"end": 1575,
											"name": "SWAP1"
										},
										{
											"begin": 1555,
											"end": 1575,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1555,
											"end": 1575,
											"name": "ADD"
										},
										{
											"begin": 1555,
											"end": 1575,
											"name": "SWAP1"
										},
										{
											"begin": 1555,
											"end": 1575,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 1555,
											"end": 1575,
											"name": "SWAP3"
										},
										{
											"begin": 1555,
											"end": 1575,
											"name": "SWAP2"
										},
										{
											"begin": 1555,
											"end": 1575,
											"name": "SWAP1"
										},
										{
											"begin": 1555,
											"end": 1575,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 1555,
											"end": 1575,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1555,
											"end": 1575,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 1555,
											"end": 1575,
											"name": "JUMPDEST"
										},
										{
											"begin": 1555,
											"end": 1575,
											"name": "POP"
										},
										{
											"begin": 1589,
											"end": 1599,
											"name": "CALLER"
										},
										{
											"begin": 1589,
											"end": 1608,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1589,
											"end": 1608,
											"name": "AND"
										},
										{
											"begin": 1589,
											"end": 1615,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 1609,
											"end": 1614,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1609,
											"end": 1614,
											"name": "SLOAD"
										},
										{
											"begin": 1589,
											"end": 1615,
											"name": "SWAP1"
										},
										{
											"begin": 1589,
											"end": 1615,
											"name": "DUP2"
										},
										{
											"begin": 1589,
											"end": 1615,
											"name": "ISZERO"
										},
										{
											"begin": 1589,
											"end": 1615,
											"name": "MUL"
										},
										{
											"begin": 1589,
											"end": 1615,
											"name": "SWAP1"
										},
										{
											"begin": 1589,
											"end": 1615,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1589,
											"end": 1615,
											"name": "MLOAD"
										},
										{
											"begin": 1589,
											"end": 1615,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1589,
											"end": 1615,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1589,
											"end": 1615,
											"name": "MLOAD"
										},
										{
											"begin": 1589,
											"end": 1615,
											"name": "DUP1"
										},
										{
											"begin": 1589,
											"end": 1615,
											"name": "DUP4"
										},
										{
											"begin": 1589,
											"end": 1615,
											"name": "SUB"
										},
										{
											"begin": 1589,
											"end": 1615,
											"name": "DUP2"
										},
										{
											"begin": 1589,
											"end": 1615,
											"name": "DUP6"
										},
										{
											"begin": 1589,
											"end": 1615,
											"name": "DUP9"
										},
										{
											"begin": 1589,
											"end": 1615,
											"name": "DUP9"
										},
										{
											"begin": 1589,
											"end": 1615,
											"name": "CALL"
										},
										{
											"begin": 1589,
											"end": 1615,
											"name": "SWAP4"
										},
										{
											"begin": 1589,
											"end": 1615,
											"name": "POP"
										},
										{
											"begin": 1589,
											"end": 1615,
											"name": "POP"
										},
										{
											"begin": 1589,
											"end": 1615,
											"name": "POP"
										},
										{
											"begin": 1589,
											"end": 1615,
											"name": "POP"
										},
										{
											"begin": 1589,
											"end": 1615,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1589,
											"end": 1615,
											"name": "POP"
										},
										{
											"begin": 1512,
											"end": 1801,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 1512,
											"end": 1801,
											"name": "JUMP"
										},
										{
											"begin": 1512,
											"end": 1801,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 1512,
											"end": 1801,
											"name": "JUMPDEST"
										},
										{
											"begin": 1646,
											"end": 1654,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1646,
											"end": 1654,
											"name": "SLOAD"
										},
										{
											"begin": 1639,
											"end": 1645,
											"name": "DUP2"
										},
										{
											"begin": 1639,
											"end": 1654,
											"name": "LT"
										},
										{
											"begin": 1639,
											"end": 1680,
											"name": "DUP1"
										},
										{
											"begin": 1639,
											"end": 1680,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 1639,
											"end": 1680,
											"name": "JUMPI"
										},
										{
											"begin": 1639,
											"end": 1680,
											"name": "POP"
										},
										{
											"begin": 1667,
											"end": 1668,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1657,
											"end": 1665,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1657,
											"end": 1665,
											"name": "SLOAD"
										},
										{
											"begin": 1657,
											"end": 1668,
											"name": "EQ"
										},
										{
											"begin": 1657,
											"end": 1679,
											"name": "DUP1"
										},
										{
											"begin": 1657,
											"end": 1679,
											"name": "ISZERO"
										},
										{
											"begin": 1657,
											"end": 1679,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 1657,
											"end": 1679,
											"name": "JUMPI"
										},
										{
											"begin": 1657,
											"end": 1679,
											"name": "POP"
										},
										{
											"begin": 1678,
											"end": 1679,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1670,
											"end": 1676,
											"name": "DUP2"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "EQ"
										},
										{
											"begin": 1657,
											"end": 1679,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 1657,
											"end": 1679,
											"name": "JUMPDEST"
										},
										{
											"begin": 1639,
											"end": 1680,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 1639,
											"end": 1680,
											"name": "JUMPDEST"
										},
										{
											"begin": 1636,
											"end": 1801,
											"name": "ISZERO"
										},
										{
											"begin": 1636,
											"end": 1801,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 1636,
											"end": 1801,
											"name": "JUMPI"
										},
										{
											"begin": 1691,
											"end": 1711,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1691,
											"end": 1711,
											"name": "DUP1"
										},
										{
											"begin": 1691,
											"end": 1711,
											"name": "MLOAD"
										},
										{
											"begin": 1691,
											"end": 1711,
											"name": "SWAP1"
										},
										{
											"begin": 1691,
											"end": 1711,
											"name": "DUP2"
										},
										{
											"begin": 1691,
											"end": 1711,
											"name": "ADD"
										},
										{
											"begin": 1691,
											"end": 1711,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1691,
											"end": 1711,
											"name": "MSTORE"
										},
										{
											"begin": 1691,
											"end": 1711,
											"name": "DUP1"
										},
										{
											"begin": 1691,
											"end": 1711,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1691,
											"end": 1711,
											"name": "DUP2"
										},
										{
											"begin": 1691,
											"end": 1711,
											"name": "MSTORE"
										},
										{
											"begin": 1691,
											"end": 1711,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1691,
											"end": 1711,
											"name": "ADD"
										},
										{
											"begin": 1691,
											"end": 1711,
											"name": "PUSH",
											"value": "4C4F534500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1691,
											"end": 1711,
											"name": "DUP2"
										},
										{
											"begin": 1691,
											"end": 1711,
											"name": "MSTORE"
										},
										{
											"begin": 1691,
											"end": 1711,
											"name": "POP"
										},
										{
											"begin": 1691,
											"end": 1697,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1691,
											"end": 1704,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1698,
											"end": 1703,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1698,
											"end": 1703,
											"name": "SLOAD"
										},
										{
											"begin": 1691,
											"end": 1704,
											"name": "DUP2"
										},
										{
											"begin": 1691,
											"end": 1704,
											"name": "MSTORE"
										},
										{
											"begin": 1691,
											"end": 1704,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1691,
											"end": 1704,
											"name": "ADD"
										},
										{
											"begin": 1691,
											"end": 1704,
											"name": "SWAP1"
										},
										{
											"begin": 1691,
											"end": 1704,
											"name": "DUP2"
										},
										{
											"begin": 1691,
											"end": 1704,
											"name": "MSTORE"
										},
										{
											"begin": 1691,
											"end": 1704,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1691,
											"end": 1704,
											"name": "ADD"
										},
										{
											"begin": 1691,
											"end": 1704,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1691,
											"end": 1704,
											"name": "KECCAK256"
										},
										{
											"begin": 1691,
											"end": 1711,
											"name": "SWAP1"
										},
										{
											"begin": 1691,
											"end": 1711,
											"name": "DUP1"
										},
										{
											"begin": 1691,
											"end": 1711,
											"name": "MLOAD"
										},
										{
											"begin": 1691,
											"end": 1711,
											"name": "SWAP1"
										},
										{
											"begin": 1691,
											"end": 1711,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1691,
											"end": 1711,
											"name": "ADD"
										},
										{
											"begin": 1691,
											"end": 1711,
											"name": "SWAP1"
										},
										{
											"begin": 1691,
											"end": 1711,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 1691,
											"end": 1711,
											"name": "SWAP3"
										},
										{
											"begin": 1691,
											"end": 1711,
											"name": "SWAP2"
										},
										{
											"begin": 1691,
											"end": 1711,
											"name": "SWAP1"
										},
										{
											"begin": 1691,
											"end": 1711,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 1691,
											"end": 1711,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1691,
											"end": 1711,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 1691,
											"end": 1711,
											"name": "JUMPDEST"
										},
										{
											"begin": 1691,
											"end": 1711,
											"name": "POP"
										},
										{
											"begin": 1636,
											"end": 1801,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 1636,
											"end": 1801,
											"name": "JUMP"
										},
										{
											"begin": 1636,
											"end": 1801,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 1636,
											"end": 1801,
											"name": "JUMPDEST"
										},
										{
											"begin": 1737,
											"end": 1756,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1737,
											"end": 1756,
											"name": "DUP1"
										},
										{
											"begin": 1737,
											"end": 1756,
											"name": "MLOAD"
										},
										{
											"begin": 1737,
											"end": 1756,
											"name": "SWAP1"
										},
										{
											"begin": 1737,
											"end": 1756,
											"name": "DUP2"
										},
										{
											"begin": 1737,
											"end": 1756,
											"name": "ADD"
										},
										{
											"begin": 1737,
											"end": 1756,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1737,
											"end": 1756,
											"name": "MSTORE"
										},
										{
											"begin": 1737,
											"end": 1756,
											"name": "DUP1"
										},
										{
											"begin": 1737,
											"end": 1756,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1737,
											"end": 1756,
											"name": "DUP2"
										},
										{
											"begin": 1737,
											"end": 1756,
											"name": "MSTORE"
										},
										{
											"begin": 1737,
											"end": 1756,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1737,
											"end": 1756,
											"name": "ADD"
										},
										{
											"begin": 1737,
											"end": 1756,
											"name": "PUSH",
											"value": "57494E0000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1737,
											"end": 1756,
											"name": "DUP2"
										},
										{
											"begin": 1737,
											"end": 1756,
											"name": "MSTORE"
										},
										{
											"begin": 1737,
											"end": 1756,
											"name": "POP"
										},
										{
											"begin": 1737,
											"end": 1743,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1737,
											"end": 1750,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1744,
											"end": 1749,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1744,
											"end": 1749,
											"name": "SLOAD"
										},
										{
											"begin": 1737,
											"end": 1750,
											"name": "DUP2"
										},
										{
											"begin": 1737,
											"end": 1750,
											"name": "MSTORE"
										},
										{
											"begin": 1737,
											"end": 1750,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1737,
											"end": 1750,
											"name": "ADD"
										},
										{
											"begin": 1737,
											"end": 1750,
											"name": "SWAP1"
										},
										{
											"begin": 1737,
											"end": 1750,
											"name": "DUP2"
										},
										{
											"begin": 1737,
											"end": 1750,
											"name": "MSTORE"
										},
										{
											"begin": 1737,
											"end": 1750,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1737,
											"end": 1750,
											"name": "ADD"
										},
										{
											"begin": 1737,
											"end": 1750,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1737,
											"end": 1750,
											"name": "KECCAK256"
										},
										{
											"begin": 1737,
											"end": 1756,
											"name": "SWAP1"
										},
										{
											"begin": 1737,
											"end": 1756,
											"name": "DUP1"
										},
										{
											"begin": 1737,
											"end": 1756,
											"name": "MLOAD"
										},
										{
											"begin": 1737,
											"end": 1756,
											"name": "SWAP1"
										},
										{
											"begin": 1737,
											"end": 1756,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1737,
											"end": 1756,
											"name": "ADD"
										},
										{
											"begin": 1737,
											"end": 1756,
											"name": "SWAP1"
										},
										{
											"begin": 1737,
											"end": 1756,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 1737,
											"end": 1756,
											"name": "SWAP3"
										},
										{
											"begin": 1737,
											"end": 1756,
											"name": "SWAP2"
										},
										{
											"begin": 1737,
											"end": 1756,
											"name": "SWAP1"
										},
										{
											"begin": 1737,
											"end": 1756,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 1737,
											"end": 1756,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1737,
											"end": 1756,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 1737,
											"end": 1756,
											"name": "JUMPDEST"
										},
										{
											"begin": 1737,
											"end": 1756,
											"name": "POP"
										},
										{
											"begin": 1766,
											"end": 1776,
											"name": "CALLER"
										},
										{
											"begin": 1766,
											"end": 1785,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1766,
											"end": 1785,
											"name": "AND"
										},
										{
											"begin": 1766,
											"end": 1794,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 1792,
											"end": 1793,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1786,
											"end": 1791,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1791,
											"name": "SLOAD"
										},
										{
											"begin": 1786,
											"end": 1793,
											"name": "MUL"
										},
										{
											"begin": 1766,
											"end": 1794,
											"name": "SWAP1"
										},
										{
											"begin": 1766,
											"end": 1794,
											"name": "DUP2"
										},
										{
											"begin": 1766,
											"end": 1794,
											"name": "ISZERO"
										},
										{
											"begin": 1766,
											"end": 1794,
											"name": "MUL"
										},
										{
											"begin": 1766,
											"end": 1794,
											"name": "SWAP1"
										},
										{
											"begin": 1766,
											"end": 1794,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1766,
											"end": 1794,
											"name": "MLOAD"
										},
										{
											"begin": 1766,
											"end": 1794,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1794,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1766,
											"end": 1794,
											"name": "MLOAD"
										},
										{
											"begin": 1766,
											"end": 1794,
											"name": "DUP1"
										},
										{
											"begin": 1766,
											"end": 1794,
											"name": "DUP4"
										},
										{
											"begin": 1766,
											"end": 1794,
											"name": "SUB"
										},
										{
											"begin": 1766,
											"end": 1794,
											"name": "DUP2"
										},
										{
											"begin": 1766,
											"end": 1794,
											"name": "DUP6"
										},
										{
											"begin": 1766,
											"end": 1794,
											"name": "DUP9"
										},
										{
											"begin": 1766,
											"end": 1794,
											"name": "DUP9"
										},
										{
											"begin": 1766,
											"end": 1794,
											"name": "CALL"
										},
										{
											"begin": 1766,
											"end": 1794,
											"name": "SWAP4"
										},
										{
											"begin": 1766,
											"end": 1794,
											"name": "POP"
										},
										{
											"begin": 1766,
											"end": 1794,
											"name": "POP"
										},
										{
											"begin": 1766,
											"end": 1794,
											"name": "POP"
										},
										{
											"begin": 1766,
											"end": 1794,
											"name": "POP"
										},
										{
											"begin": 1766,
											"end": 1794,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1766,
											"end": 1794,
											"name": "POP"
										},
										{
											"begin": 1636,
											"end": 1801,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 1636,
											"end": 1801,
											"name": "JUMPDEST"
										},
										{
											"begin": 1512,
											"end": 1801,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 1512,
											"end": 1801,
											"name": "JUMPDEST"
										},
										{
											"begin": 1806,
											"end": 1811,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1806,
											"end": 1811,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1806,
											"end": 1813,
											"name": "DUP2"
										},
										{
											"begin": 1806,
											"end": 1813,
											"name": "SLOAD"
										},
										{
											"begin": 1806,
											"end": 1813,
											"name": "DUP1"
										},
										{
											"begin": 1806,
											"end": 1813,
											"name": "SWAP3"
										},
										{
											"begin": 1806,
											"end": 1813,
											"name": "SWAP2"
										},
										{
											"begin": 1806,
											"end": 1813,
											"name": "SWAP1"
										},
										{
											"begin": 1806,
											"end": 1813,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1806,
											"end": 1813,
											"name": "ADD"
										},
										{
											"begin": 1806,
											"end": 1813,
											"name": "SWAP2"
										},
										{
											"begin": 1806,
											"end": 1813,
											"name": "SWAP1"
										},
										{
											"begin": 1806,
											"end": 1813,
											"name": "POP"
										},
										{
											"begin": 1806,
											"end": 1813,
											"name": "SSTORE"
										},
										{
											"begin": 1806,
											"end": 1813,
											"name": "POP"
										},
										{
											"begin": 1382,
											"end": 1821,
											"name": "POP"
										},
										{
											"begin": 1382,
											"end": 1821,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "JUMPDEST"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "MSTORE"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "DUP1"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "MSTORE"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "KECCAK256"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "SWAP2"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "POP"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "SWAP1"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "POP"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "SLOAD"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "DUP2"
										},
										{
											"begin": 1070,
											"end": 1102,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "JUMPDEST"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "MSTORE"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "DUP1"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "MSTORE"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "KECCAK256"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "SWAP2"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "POP"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "SLOAD"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "SWAP1"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "EXP"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "SWAP1"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "DIV"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "AND"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "DUP2"
										},
										{
											"begin": 1031,
											"end": 1068,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "JUMPDEST"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "DUP3"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "DUP1"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "SLOAD"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "DUP2"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "AND"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "ISZERO"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "MUL"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "SUB"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "AND"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "SWAP1"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "DIV"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "SWAP1"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "MSTORE"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "KECCAK256"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "SWAP1"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "ADD"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "SWAP1"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "DIV"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "DUP2"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "ADD"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "SWAP3"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "DUP3"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "LT"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "JUMPI"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "DUP1"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "MLOAD"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "NOT"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "AND"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "DUP4"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "DUP1"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "ADD"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "OR"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "DUP6"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "SSTORE"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "JUMP"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "JUMPDEST"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "DUP3"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "DUP1"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "ADD"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "ADD"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "DUP6"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "SSTORE"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "DUP3"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "ISZERO"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "JUMPI"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "SWAP2"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "DUP3"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "ADD"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "JUMPDEST"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "DUP3"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "DUP2"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "GT"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "ISZERO"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "JUMPI"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "DUP3"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "MLOAD"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "DUP3"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "SSTORE"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "SWAP2"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "ADD"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "SWAP2"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "SWAP1"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "ADD"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "SWAP1"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "JUMP"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "JUMPDEST"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "JUMPDEST"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "POP"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "SWAP1"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "POP"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "SWAP2"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "SWAP1"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "JUMPDEST"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "POP"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "SWAP1"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "JUMPDEST"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "SWAP2"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "SWAP1"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "JUMPDEST"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "DUP1"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "DUP3"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "GT"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "ISZERO"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "JUMPI"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "DUP2"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "SWAP1"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "SSTORE"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "POP"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "ADD"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "JUMP"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "JUMPDEST"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "POP"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "SWAP1"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "JUMP"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "JUMPDEST"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "SWAP1"
										},
										{
											"begin": 857,
											"end": 1824,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"bet()": "11610c25",
							"item(uint256)": "898e6219",
							"play(uint256)": "6898f82b",
							"player(uint256)": "9e0551c6",
							"result(uint256)": "3c594059"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"bet\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"result\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"choose\",\"type\":\"uint256\"}],\"name\":\"play\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"item\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"player\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"test.sol\":\"paperstone\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"test.sol\":{\"keccak256\":\"0xf3ed67a767d49ef15bf6a07957a92bdd766ed4f63680ac398a23a8c9478ba0eb\",\"urls\":[\"bzzr://f0e87b09488c7102b62c7c7cf2c668d439b5a74f2fa40b9e415723a6d7e970b1\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"test.sol": {
				"ast": {
					"absolutePath": "test.sol",
					"exportedSymbols": {
						"SafeMath": [
							73
						],
						"paperstone": [
							238
						]
					},
					"id": 239,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 73,
							"linearizedBaseContracts": [
								73
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "177:106:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 10,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "187:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "192:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "187:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 16,
												"nodeType": "IfStatement",
												"src": "183:35:0",
												"trueBody": {
													"id": 15,
													"nodeType": "Block",
													"src": "195:23:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 13,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "210:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 9,
															"id": 14,
															"nodeType": "Return",
															"src": "203:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 34,
														"src": "223:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 17,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "223:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 22,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 19,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "235:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 20,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "239:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "235:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "223:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 24,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "253:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 25,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "257:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "253:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 27,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "262:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "253:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 23,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "246:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "246:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "246:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 31,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "277:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 9,
												"id": 32,
												"nodeType": "Return",
												"src": "270:8:0"
											}
										]
									},
									"documentation": "@dev Multiplies two numbers, throws on overflow.",
									"id": 34,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "123:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "123:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "134:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "134:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "122:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "168:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "167:9:0"
									},
									"scope": 73,
									"src": "110:173:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "432:198:0",
										"statements": [
											{
												"assignments": [
													44
												],
												"declarations": [
													{
														"constant": false,
														"id": 44,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 52,
														"src": "512:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 43,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "512:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 48,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 45,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "524:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 46,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "528:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "524:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "512:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 49,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 44,
													"src": "624:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 42,
												"id": 50,
												"nodeType": "Return",
												"src": "617:8:0"
											}
										]
									},
									"documentation": "@dev Integer division of two numbers, truncating the quotient.",
									"id": 52,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "378:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "389:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "389:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "377:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "423:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "422:9:0"
									},
									"scope": 73,
									"src": "365:265:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "810:43:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 62,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "823:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 63,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 54,
																"src": "828:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "823:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 61,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "816:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "816:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "816:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 67,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "843:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 68,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "847:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "843:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 60,
												"id": 70,
												"nodeType": "Return",
												"src": "836:12:0"
											}
										]
									},
									"documentation": "@dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).",
									"id": 72,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "756:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "756:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "767:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "767:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "755:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "801:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "801:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "800:9:0"
									},
									"scope": 73,
									"src": "743:110:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 239,
							"src": "24:831:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 238,
							"linearizedBaseContracts": [
								238
							],
							"name": "paperstone",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 76,
									"libraryName": {
										"contractScope": null,
										"id": 74,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 73,
										"src": "886:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$73",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "880:27:0",
									"typeName": {
										"id": 75,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "899:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 79,
									"name": "money",
									"nodeType": "VariableDeclaration",
									"scope": 238,
									"src": "909:12:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 77,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "909:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 78,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "920:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 82,
									"name": "miner",
									"nodeType": "VariableDeclaration",
									"scope": 238,
									"src": "923:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 80,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "923:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "302e31",
										"id": 81,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "943:9:0",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000_by_1",
											"typeString": "int_const 100000000000000000"
										},
										"value": "0.1"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 85,
									"name": "round",
									"nodeType": "VariableDeclaration",
									"scope": 238,
									"src": "954:12:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 83,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "954:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 84,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "965:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 87,
									"name": "better",
									"nodeType": "VariableDeclaration",
									"scope": 238,
									"src": "968:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 86,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "968:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 89,
									"name": "computer",
									"nodeType": "VariableDeclaration",
									"scope": 238,
									"src": "984:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 88,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "984:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "1026:2:0",
										"statements": []
									},
									"documentation": null,
									"id": 93,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1010:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1026:0:0"
									},
									"scope": 238,
									"src": "999:29:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 97,
									"name": "player",
									"nodeType": "VariableDeclaration",
									"scope": 238,
									"src": "1031:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 96,
										"keyType": {
											"id": 94,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1039:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1031:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 95,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1047:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 101,
									"name": "item",
									"nodeType": "VariableDeclaration",
									"scope": 238,
									"src": "1070:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 100,
										"keyType": {
											"id": 98,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1078:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1070:21:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 99,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1086:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 105,
									"name": "result",
									"nodeType": "VariableDeclaration",
									"scope": 238,
									"src": "1104:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 104,
										"keyType": {
											"id": 102,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1112:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1104:23:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueType": {
											"id": 103,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "1120:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "1162:82:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 107,
														"name": "money",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "1171:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 108,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1178:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1171:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 120,
												"nodeType": "IfStatement",
												"src": "1168:67:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "1180:55:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 111,
																				"name": "player",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 97,
																				"src": "1198:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																					"typeString": "mapping(uint256 => address)"
																				}
																			},
																			"id": 113,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 112,
																				"name": "round",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 85,
																				"src": "1205:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1198:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 114,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 253,
																				"src": "1213:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "1213:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "1198:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 110,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		256,
																		257
																	],
																	"referencedDeclaration": 256,
																	"src": "1190:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1190:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "ExpressionStatement",
															"src": "1190:34:0"
														}
													]
												}
											},
											{
												"id": 121,
												"nodeType": "PlaceholderStatement",
												"src": "1240:1:0"
											}
										]
									},
									"documentation": null,
									"id": 123,
									"name": "betcheck",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1160:2:0"
									},
									"src": "1143:101:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "1285:93:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 129,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 253,
																	"src": "1299:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1299:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 131,
																"name": "miner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 82,
																"src": "1310:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1299:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															256,
															257
														],
														"referencedDeclaration": 256,
														"src": "1291:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1291:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "1291:25:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 135,
														"name": "money",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "1322:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 136,
															"name": "money",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "1330:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"id": 137,
															"name": "miner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "1338:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1330:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1322:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "1322:21:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 141,
															"name": "player",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "1349:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 143,
														"indexExpression": {
															"argumentTypes": null,
															"id": 142,
															"name": "round",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "1356:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1349:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 144,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "1364:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1364:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1349:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "1349:25:0"
											}
										]
									},
									"documentation": null,
									"id": 149,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 126,
											"modifierName": {
												"argumentTypes": null,
												"id": 125,
												"name": "betcheck",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 123,
												"src": "1277:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1277:8:0"
										}
									],
									"name": "bet",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1285:0:0"
									},
									"scope": 238,
									"src": "1247:131:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "1423:398:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 157,
																"name": "money",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "1437:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1444:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1437:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 156,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															256,
															257
														],
														"referencedDeclaration": 256,
														"src": "1429:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1429:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "1429:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 162,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "1452:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 164,
														"indexExpression": {
															"argumentTypes": null,
															"id": 163,
															"name": "round",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "1457:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1452:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 165,
														"name": "choose",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "1465:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1452:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 167,
												"nodeType": "ExpressionStatement",
												"src": "1452:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 168,
														"name": "computer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "1477:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 169,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 243,
																	"src": "1486:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1486:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "33",
																"id": 171,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1503:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "1486:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1505:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1486:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1477:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 176,
												"nodeType": "ExpressionStatement",
												"src": "1477:29:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 177,
														"name": "choose",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "1515:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 178,
														"name": "computer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "1523:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1515:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 206,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 195,
																"name": "choose",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 151,
																"src": "1639:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 196,
																"name": "computer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 89,
																"src": "1646:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1639:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 198,
																			"name": "computer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 89,
																			"src": "1657:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1667:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1657:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 201,
																			"name": "choose",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 151,
																			"src": "1670:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "32",
																			"id": 202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1678:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "1670:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "1657:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 205,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1656:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1639:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 230,
														"nodeType": "Block",
														"src": "1727:74:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 214,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 105,
																			"src": "1737:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																				"typeString": "mapping(uint256 => string storage ref)"
																			}
																		},
																		"id": 216,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 215,
																			"name": "round",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 85,
																			"src": "1744:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "1737:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "57494e",
																		"id": 217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1751:5:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_bc9cc0dcd13d7dcc2f3a6540f43bd56de29365e6ca0d2c052fd686409207ba25",
																			"typeString": "literal_string \"WIN\""
																		},
																		"value": "WIN"
																	},
																	"src": "1737:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"id": 219,
																"nodeType": "ExpressionStatement",
																"src": "1737:19:0"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 227,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 225,
																				"name": "money",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 79,
																				"src": "1786:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "32",
																				"id": 226,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1792:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "1786:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 220,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 253,
																				"src": "1766:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 223,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "1766:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1766:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																			"typeString": "function (uint256)"
																		}
																	},
																	"id": 228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1766:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 229,
																"nodeType": "ExpressionStatement",
																"src": "1766:28:0"
															}
														]
													},
													"id": 231,
													"nodeType": "IfStatement",
													"src": "1636:165:0",
													"trueBody": {
														"id": 213,
														"nodeType": "Block",
														"src": "1681:37:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 207,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 105,
																			"src": "1691:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																				"typeString": "mapping(uint256 => string storage ref)"
																			}
																		},
																		"id": 209,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 208,
																			"name": "round",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 85,
																			"src": "1698:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "1691:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "4c4f5345",
																		"id": 210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:6:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_293325b8f110b3b1e176413d3bdf290dc9ad039a8b197c601138ee58483e1afa",
																			"typeString": "literal_string \"LOSE\""
																		},
																		"value": "LOSE"
																	},
																	"src": "1691:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"id": 212,
																"nodeType": "ExpressionStatement",
																"src": "1691:20:0"
															}
														]
													}
												},
												"id": 232,
												"nodeType": "IfStatement",
												"src": "1512:289:0",
												"trueBody": {
													"id": 194,
													"nodeType": "Block",
													"src": "1541:85:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 180,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 105,
																		"src": "1555:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																			"typeString": "mapping(uint256 => string storage ref)"
																		}
																	},
																	"id": 182,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 181,
																		"name": "round",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 85,
																		"src": "1562:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1555:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "44524157",
																	"id": 183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1569:6:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_1cf54708aaa392dbeba88d1a07e69feaba67586acd469366b89b52bf44132258",
																		"typeString": "literal_string \"DRAW\""
																	},
																	"value": "DRAW"
																},
																"src": "1555:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															},
															"id": 185,
															"nodeType": "ExpressionStatement",
															"src": "1555:20:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 191,
																		"name": "money",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 79,
																		"src": "1609:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 186,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 253,
																			"src": "1589:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1589:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1589:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1589:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 193,
															"nodeType": "ExpressionStatement",
															"src": "1589:26:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1806:7:0",
													"subExpression": {
														"argumentTypes": null,
														"id": 233,
														"name": "round",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "1806:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "1806:7:0"
											}
										]
									},
									"documentation": null,
									"id": 237,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 154,
											"modifierName": {
												"argumentTypes": null,
												"id": 153,
												"name": "betcheck",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 123,
												"src": "1415:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1415:8:0"
										}
									],
									"name": "play",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"name": "choose",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1396:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1396:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1395:13:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1423:0:0"
									},
									"scope": 238,
									"src": "1382:439:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 239,
							"src": "857:967:0"
						}
					],
					"src": "0:1824:0"
				},
				"id": 0
			}
		}
	}
}