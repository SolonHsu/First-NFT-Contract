{
	"id": "9f87d143ce5bfe9fc8ea7dbbb237edfc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"29..sol": {
				"content": "pragma solidity ^0.4.24;\ncontract class28{    \n    address public owner;\n    uint public integer_1;\n\n    constructor() public {\n        owner = msg.sender;\n        integer_1 = 50;\n    }\n    \n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n  \n    modifier checkInt {\n        require(msg.sender == owner);\n        _;\n        require(integer_1 <= 100);\n    }\n  \n    modifier checkMoreThan30(uint y) {\n        require(y > 30);\n        _;\n    }\n\n    //檢查送交易者\n    function Add_check_Sender(uint x)public onlyOwner{\n        integer_1 += x;\n    }\n\n    //檢查送交易者和最後數字\n    function Add_checkSender_And_Num(uint x)public checkInt{\n        integer_1 += x;\n    }\n\n    //檢查參數\n    function Add_check_Num_30(uint x)public checkMoreThan30(x){\n        integer_1 += x;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"29..sol": {
				"class28": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "x",
									"type": "uint256"
								}
							],
							"name": "Add_checkSender_And_Num",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "integer_1",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "x",
									"type": "uint256"
								}
							],
							"name": "Add_check_Num_30",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "x",
									"type": "uint256"
								}
							],
							"name": "Add_check_Sender",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"29..sol\":25:830  contract class28{    ... */\n  mstore(0x40, 0x80)\n    /* \"29..sol\":105:185  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"29..sol\":105:185  constructor() public {... */\n  pop\n    /* \"29..sol\":144:154  msg.sender */\n  caller\n    /* \"29..sol\":136:141  owner */\n  0x0\n  dup1\n    /* \"29..sol\":136:154  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"29..sol\":176:178  50 */\n  0x32\n    /* \"29..sol\":164:173  integer_1 */\n  0x1\n    /* \"29..sol\":164:178  integer_1 = 50 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"29..sol\":25:830  contract class28{    ... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"29..sol\":25:830  contract class28{    ... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x52ec3399\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x5db1ad7b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa1d274b2\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xfbb57583\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"29..sol\":628:714  function Add_checkSender_And_Num(uint x)public checkInt{... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_7:\n        /* \"29..sol\":628:714  function Add_checkSender_And_Num(uint x)public checkInt{... */\n      pop\n      tag_8\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_9)\n    tag_8:\n      stop\n        /* \"29..sol\":77:98  uint public integer_1 */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_10:\n        /* \"29..sol\":77:98  uint public integer_1 */\n      pop\n      tag_11\n      jump(tag_12)\n    tag_11:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"29..sol\":51:71  address public owner */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_13:\n        /* \"29..sol\":51:71  address public owner */\n      pop\n      tag_14\n      jump(tag_15)\n    tag_14:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"29..sol\":739:828  function Add_check_Num_30(uint x)public checkMoreThan30(x){... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_16:\n        /* \"29..sol\":739:828  function Add_check_Num_30(uint x)public checkMoreThan30(x){... */\n      pop\n      tag_17\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_18)\n    tag_17:\n      stop\n        /* \"29..sol\":502:582  function Add_check_Sender(uint x)public onlyOwner{... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_19:\n        /* \"29..sol\":502:582  function Add_check_Sender(uint x)public onlyOwner{... */\n      pop\n      tag_20\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_21)\n    tag_20:\n      stop\n        /* \"29..sol\":628:714  function Add_checkSender_And_Num(uint x)public checkInt{... */\n    tag_9:\n        /* \"29..sol\":328:333  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"29..sol\":314:333  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"29..sol\":314:324  msg.sender */\n      caller\n        /* \"29..sol\":314:333  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"29..sol\":306:334  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_23\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_23:\n        /* \"29..sol\":706:707  x */\n      dup1\n        /* \"29..sol\":693:702  integer_1 */\n      0x1\n      0x0\n        /* \"29..sol\":693:707  integer_1 += x */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"29..sol\":376:379  100 */\n      0x64\n        /* \"29..sol\":363:372  integer_1 */\n      sload(0x1)\n        /* \"29..sol\":363:379  integer_1 <= 100 */\n      gt\n      iszero\n        /* \"29..sol\":355:380  require(integer_1 <= 100) */\n      iszero\n      iszero\n      tag_25\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_25:\n        /* \"29..sol\":628:714  function Add_checkSender_And_Num(uint x)public checkInt{... */\n      pop\n      jump\t// out\n        /* \"29..sol\":77:98  uint public integer_1 */\n    tag_12:\n      sload(0x1)\n      dup2\n      jump\t// out\n        /* \"29..sol\":51:71  address public owner */\n    tag_15:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"29..sol\":739:828  function Add_check_Num_30(uint x)public checkMoreThan30(x){... */\n    tag_18:\n        /* \"29..sol\":795:796  x */\n      dup1\n        /* \"29..sol\":450:452  30 */\n      0x1e\n        /* \"29..sol\":446:447  y */\n      dup2\n        /* \"29..sol\":446:452  y > 30 */\n      gt\n        /* \"29..sol\":438:453  require(y > 30) */\n      iszero\n      iszero\n      tag_27\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_27:\n        /* \"29..sol\":820:821  x */\n      dup2\n        /* \"29..sol\":807:816  integer_1 */\n      0x1\n      0x0\n        /* \"29..sol\":807:821  integer_1 += x */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"29..sol\":739:828  function Add_check_Num_30(uint x)public checkMoreThan30(x){... */\n      pop\n      pop\n      jump\t// out\n        /* \"29..sol\":502:582  function Add_check_Sender(uint x)public onlyOwner{... */\n    tag_21:\n        /* \"29..sol\":246:251  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"29..sol\":232:251  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"29..sol\":232:242  msg.sender */\n      caller\n        /* \"29..sol\":232:251  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"29..sol\":224:252  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_30\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_30:\n        /* \"29..sol\":574:575  x */\n      dup1\n        /* \"29..sol\":561:570  integer_1 */\n      0x1\n      0x0\n        /* \"29..sol\":561:575  integer_1 += x */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"29..sol\":502:582  function Add_check_Sender(uint x)public onlyOwner{... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058203279ac11ec9a092ab2a9e0b75f80ff692d97d27d58e3483857dc46c65962142c0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060326001819055506102e4806100686000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806352ec3399146100725780635db1ad7b1461009f5780638da5cb5b146100ca578063a1d274b214610121578063fbb575831461014e575b600080fd5b34801561007e57600080fd5b5061009d6004803603810190808035906020019092919050505061017b565b005b3480156100ab57600080fd5b506100b46101fb565b6040518082815260200191505060405180910390f35b3480156100d657600080fd5b506100df610201565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561012d57600080fd5b5061014c60048036038101908080359060200190929190505050610226565b005b34801561015a57600080fd5b506101796004803603810190808035906020019092919050505061024a565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101d657600080fd5b806001600082825401925050819055506064600154111515156101f857600080fd5b50565b60015481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80601e8111151561023657600080fd5b816001600082825401925050819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156102a557600080fd5b80600160008282540192505081905550505600a165627a7a723058203279ac11ec9a092ab2a9e0b75f80ff692d97d27d58e3483857dc46c65962142c0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x32 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x2E4 DUP1 PUSH2 0x68 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6D JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x52EC3399 EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0x5DB1AD7B EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0xA1D274B2 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0xFBB57583 EQ PUSH2 0x14E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x17B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB4 PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDF PUSH2 0x201 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x226 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x24A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x64 PUSH1 0x1 SLOAD GT ISZERO ISZERO ISZERO PUSH2 0x1F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x1E DUP2 GT ISZERO ISZERO PUSH2 0x236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 ORIGIN PUSH26 0xAC11EC9A092AB2A9E0B75F80FF692D97D27D58E3483857DC46C6 MSIZE PUSH3 0x142C00 0x29 ",
							"sourceMap": "25:805:0:-;;;105:80;8:9:-1;5:2;;;30:1;27;20:12;5:2;105:80:0;144:10;136:5;;:18;;;;;;;;;;;;;;;;;;176:2;164:9;:14;;;;25:805;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806352ec3399146100725780635db1ad7b1461009f5780638da5cb5b146100ca578063a1d274b214610121578063fbb575831461014e575b600080fd5b34801561007e57600080fd5b5061009d6004803603810190808035906020019092919050505061017b565b005b3480156100ab57600080fd5b506100b46101fb565b6040518082815260200191505060405180910390f35b3480156100d657600080fd5b506100df610201565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561012d57600080fd5b5061014c60048036038101908080359060200190929190505050610226565b005b34801561015a57600080fd5b506101796004803603810190808035906020019092919050505061024a565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101d657600080fd5b806001600082825401925050819055506064600154111515156101f857600080fd5b50565b60015481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80601e8111151561023657600080fd5b816001600082825401925050819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156102a557600080fd5b80600160008282540192505081905550505600a165627a7a723058203279ac11ec9a092ab2a9e0b75f80ff692d97d27d58e3483857dc46c65962142c0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6D JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x52EC3399 EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0x5DB1AD7B EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0xA1D274B2 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0xFBB57583 EQ PUSH2 0x14E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x17B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB4 PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDF PUSH2 0x201 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x226 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x24A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x64 PUSH1 0x1 SLOAD GT ISZERO ISZERO ISZERO PUSH2 0x1F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x1E DUP2 GT ISZERO ISZERO PUSH2 0x236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 ORIGIN PUSH26 0xAC11EC9A092AB2A9E0B75F80FF692D97D27D58E3483857DC46C6 MSIZE PUSH3 0x142C00 0x29 ",
							"sourceMap": "25:805:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:86;;8:9:-1;5:2;;;30:1;27;20:12;5:2;628:86:0;;;;;;;;;;;;;;;;;;;;;;;;;;77:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;77:21:0;;;;;;;;;;;;;;;;;;;;;;;51:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;51:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;739:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;739:89:0;;;;;;;;;;;;;;;;;;;;;;;;;;502:80;;8:9:-1;5:2;;;30:1;27;20:12;5:2;502:80:0;;;;;;;;;;;;;;;;;;;;;;;;;;628:86;328:5;;;;;;;;;;;314:19;;:10;:19;;;306:28;;;;;;;;706:1;693:9;;:14;;;;;;;;;;;376:3;363:9;;:16;;355:25;;;;;;;;628:86;:::o;77:21::-;;;;:::o;51:20::-;;;;;;;;;;;;;:::o;739:89::-;795:1;450:2;446:1;:6;438:15;;;;;;;;820:1;807:9;;:14;;;;;;;;;;;739:89;;:::o;502:80::-;246:5;;;;;;;;;;;232:19;;:10;:19;;;224:28;;;;;;;;574:1;561:9;;:14;;;;;;;;;;;502:80;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "148000",
								"executionCost": "40476",
								"totalCost": "188476"
							},
							"external": {
								"Add_checkSender_And_Num(uint256)": "20932",
								"Add_check_Num_30(uint256)": "20524",
								"Add_check_Sender(uint256)": "20788",
								"integer_1()": "416",
								"owner()": "486"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 830,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 25,
									"end": 830,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 25,
									"end": 830,
									"name": "MSTORE"
								},
								{
									"begin": 105,
									"end": 185,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 105,
									"end": 185,
									"name": "POP"
								},
								{
									"begin": 144,
									"end": 154,
									"name": "CALLER"
								},
								{
									"begin": 136,
									"end": 141,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 136,
									"end": 141,
									"name": "DUP1"
								},
								{
									"begin": 136,
									"end": 154,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 136,
									"end": 154,
									"name": "EXP"
								},
								{
									"begin": 136,
									"end": 154,
									"name": "DUP2"
								},
								{
									"begin": 136,
									"end": 154,
									"name": "SLOAD"
								},
								{
									"begin": 136,
									"end": 154,
									"name": "DUP2"
								},
								{
									"begin": 136,
									"end": 154,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 136,
									"end": 154,
									"name": "MUL"
								},
								{
									"begin": 136,
									"end": 154,
									"name": "NOT"
								},
								{
									"begin": 136,
									"end": 154,
									"name": "AND"
								},
								{
									"begin": 136,
									"end": 154,
									"name": "SWAP1"
								},
								{
									"begin": 136,
									"end": 154,
									"name": "DUP4"
								},
								{
									"begin": 136,
									"end": 154,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 136,
									"end": 154,
									"name": "AND"
								},
								{
									"begin": 136,
									"end": 154,
									"name": "MUL"
								},
								{
									"begin": 136,
									"end": 154,
									"name": "OR"
								},
								{
									"begin": 136,
									"end": 154,
									"name": "SWAP1"
								},
								{
									"begin": 136,
									"end": 154,
									"name": "SSTORE"
								},
								{
									"begin": 136,
									"end": 154,
									"name": "POP"
								},
								{
									"begin": 176,
									"end": 178,
									"name": "PUSH",
									"value": "32"
								},
								{
									"begin": 164,
									"end": 173,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 164,
									"end": 178,
									"name": "DUP2"
								},
								{
									"begin": 164,
									"end": 178,
									"name": "SWAP1"
								},
								{
									"begin": 164,
									"end": 178,
									"name": "SSTORE"
								},
								{
									"begin": 164,
									"end": 178,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 830,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 830,
									"name": "DUP1"
								},
								{
									"begin": 25,
									"end": 830,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 830,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 830,
									"name": "CODECOPY"
								},
								{
									"begin": 25,
									"end": 830,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 830,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058203279ac11ec9a092ab2a9e0b75f80ff692d97d27d58e3483857dc46c65962142c0029",
									".code": [
										{
											"begin": 25,
											"end": 830,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "MSTORE"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "LT"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "SWAP1"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "DIV"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "AND"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "PUSH",
											"value": "52EC3399"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "PUSH",
											"value": "5DB1AD7B"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "PUSH",
											"value": "A1D274B2"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "PUSH",
											"value": "FBB57583"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 830,
											"name": "REVERT"
										},
										{
											"begin": 628,
											"end": 714,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 628,
											"end": 714,
											"name": "JUMPDEST"
										},
										{
											"begin": 628,
											"end": 714,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 628,
											"end": 714,
											"name": "POP"
										},
										{
											"begin": 628,
											"end": 714,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 628,
											"end": 714,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 628,
											"end": 714,
											"name": "DUP1"
										},
										{
											"begin": 628,
											"end": 714,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 628,
											"end": 714,
											"name": "SUB"
										},
										{
											"begin": 628,
											"end": 714,
											"name": "DUP2"
										},
										{
											"begin": 628,
											"end": 714,
											"name": "ADD"
										},
										{
											"begin": 628,
											"end": 714,
											"name": "SWAP1"
										},
										{
											"begin": 628,
											"end": 714,
											"name": "DUP1"
										},
										{
											"begin": 628,
											"end": 714,
											"name": "DUP1"
										},
										{
											"begin": 628,
											"end": 714,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 628,
											"end": 714,
											"name": "SWAP1"
										},
										{
											"begin": 628,
											"end": 714,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 628,
											"end": 714,
											"name": "ADD"
										},
										{
											"begin": 628,
											"end": 714,
											"name": "SWAP1"
										},
										{
											"begin": 628,
											"end": 714,
											"name": "SWAP3"
										},
										{
											"begin": 628,
											"end": 714,
											"name": "SWAP2"
										},
										{
											"begin": 628,
											"end": 714,
											"name": "SWAP1"
										},
										{
											"begin": 628,
											"end": 714,
											"name": "POP"
										},
										{
											"begin": 628,
											"end": 714,
											"name": "POP"
										},
										{
											"begin": 628,
											"end": 714,
											"name": "POP"
										},
										{
											"begin": 628,
											"end": 714,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 628,
											"end": 714,
											"name": "JUMP"
										},
										{
											"begin": 628,
											"end": 714,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 628,
											"end": 714,
											"name": "JUMPDEST"
										},
										{
											"begin": 628,
											"end": 714,
											"name": "STOP"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "JUMPDEST"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "POP"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "JUMP"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "JUMPDEST"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "MLOAD"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "DUP1"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "DUP3"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "DUP2"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "MSTORE"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "SWAP2"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "POP"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "POP"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "MLOAD"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "DUP1"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "SWAP2"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "SUB"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "SWAP1"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "RETURN"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "JUMPDEST"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "POP"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "JUMP"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "JUMPDEST"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "MLOAD"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "DUP1"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "DUP3"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "AND"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "AND"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "DUP2"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "MSTORE"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "ADD"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "SWAP2"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "POP"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "POP"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "MLOAD"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "DUP1"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "SWAP2"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "SUB"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "SWAP1"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "RETURN"
										},
										{
											"begin": 739,
											"end": 828,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 739,
											"end": 828,
											"name": "JUMPDEST"
										},
										{
											"begin": 739,
											"end": 828,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 739,
											"end": 828,
											"name": "POP"
										},
										{
											"begin": 739,
											"end": 828,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 739,
											"end": 828,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 739,
											"end": 828,
											"name": "DUP1"
										},
										{
											"begin": 739,
											"end": 828,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 739,
											"end": 828,
											"name": "SUB"
										},
										{
											"begin": 739,
											"end": 828,
											"name": "DUP2"
										},
										{
											"begin": 739,
											"end": 828,
											"name": "ADD"
										},
										{
											"begin": 739,
											"end": 828,
											"name": "SWAP1"
										},
										{
											"begin": 739,
											"end": 828,
											"name": "DUP1"
										},
										{
											"begin": 739,
											"end": 828,
											"name": "DUP1"
										},
										{
											"begin": 739,
											"end": 828,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 739,
											"end": 828,
											"name": "SWAP1"
										},
										{
											"begin": 739,
											"end": 828,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 739,
											"end": 828,
											"name": "ADD"
										},
										{
											"begin": 739,
											"end": 828,
											"name": "SWAP1"
										},
										{
											"begin": 739,
											"end": 828,
											"name": "SWAP3"
										},
										{
											"begin": 739,
											"end": 828,
											"name": "SWAP2"
										},
										{
											"begin": 739,
											"end": 828,
											"name": "SWAP1"
										},
										{
											"begin": 739,
											"end": 828,
											"name": "POP"
										},
										{
											"begin": 739,
											"end": 828,
											"name": "POP"
										},
										{
											"begin": 739,
											"end": 828,
											"name": "POP"
										},
										{
											"begin": 739,
											"end": 828,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 739,
											"end": 828,
											"name": "JUMP"
										},
										{
											"begin": 739,
											"end": 828,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 739,
											"end": 828,
											"name": "JUMPDEST"
										},
										{
											"begin": 739,
											"end": 828,
											"name": "STOP"
										},
										{
											"begin": 502,
											"end": 582,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 502,
											"end": 582,
											"name": "JUMPDEST"
										},
										{
											"begin": 502,
											"end": 582,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 502,
											"end": 582,
											"name": "POP"
										},
										{
											"begin": 502,
											"end": 582,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 502,
											"end": 582,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 502,
											"end": 582,
											"name": "DUP1"
										},
										{
											"begin": 502,
											"end": 582,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 502,
											"end": 582,
											"name": "SUB"
										},
										{
											"begin": 502,
											"end": 582,
											"name": "DUP2"
										},
										{
											"begin": 502,
											"end": 582,
											"name": "ADD"
										},
										{
											"begin": 502,
											"end": 582,
											"name": "SWAP1"
										},
										{
											"begin": 502,
											"end": 582,
											"name": "DUP1"
										},
										{
											"begin": 502,
											"end": 582,
											"name": "DUP1"
										},
										{
											"begin": 502,
											"end": 582,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 502,
											"end": 582,
											"name": "SWAP1"
										},
										{
											"begin": 502,
											"end": 582,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 502,
											"end": 582,
											"name": "ADD"
										},
										{
											"begin": 502,
											"end": 582,
											"name": "SWAP1"
										},
										{
											"begin": 502,
											"end": 582,
											"name": "SWAP3"
										},
										{
											"begin": 502,
											"end": 582,
											"name": "SWAP2"
										},
										{
											"begin": 502,
											"end": 582,
											"name": "SWAP1"
										},
										{
											"begin": 502,
											"end": 582,
											"name": "POP"
										},
										{
											"begin": 502,
											"end": 582,
											"name": "POP"
										},
										{
											"begin": 502,
											"end": 582,
											"name": "POP"
										},
										{
											"begin": 502,
											"end": 582,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 502,
											"end": 582,
											"name": "JUMP"
										},
										{
											"begin": 502,
											"end": 582,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 502,
											"end": 582,
											"name": "JUMPDEST"
										},
										{
											"begin": 502,
											"end": 582,
											"name": "STOP"
										},
										{
											"begin": 628,
											"end": 714,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 628,
											"end": 714,
											"name": "JUMPDEST"
										},
										{
											"begin": 328,
											"end": 333,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 328,
											"end": 333,
											"name": "DUP1"
										},
										{
											"begin": 328,
											"end": 333,
											"name": "SWAP1"
										},
										{
											"begin": 328,
											"end": 333,
											"name": "SLOAD"
										},
										{
											"begin": 328,
											"end": 333,
											"name": "SWAP1"
										},
										{
											"begin": 328,
											"end": 333,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 328,
											"end": 333,
											"name": "EXP"
										},
										{
											"begin": 328,
											"end": 333,
											"name": "SWAP1"
										},
										{
											"begin": 328,
											"end": 333,
											"name": "DIV"
										},
										{
											"begin": 328,
											"end": 333,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 328,
											"end": 333,
											"name": "AND"
										},
										{
											"begin": 314,
											"end": 333,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 314,
											"end": 333,
											"name": "AND"
										},
										{
											"begin": 314,
											"end": 324,
											"name": "CALLER"
										},
										{
											"begin": 314,
											"end": 333,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 314,
											"end": 333,
											"name": "AND"
										},
										{
											"begin": 314,
											"end": 333,
											"name": "EQ"
										},
										{
											"begin": 306,
											"end": 334,
											"name": "ISZERO"
										},
										{
											"begin": 306,
											"end": 334,
											"name": "ISZERO"
										},
										{
											"begin": 306,
											"end": 334,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 306,
											"end": 334,
											"name": "JUMPI"
										},
										{
											"begin": 306,
											"end": 334,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 306,
											"end": 334,
											"name": "DUP1"
										},
										{
											"begin": 306,
											"end": 334,
											"name": "REVERT"
										},
										{
											"begin": 306,
											"end": 334,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 306,
											"end": 334,
											"name": "JUMPDEST"
										},
										{
											"begin": 706,
											"end": 707,
											"name": "DUP1"
										},
										{
											"begin": 693,
											"end": 702,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 693,
											"end": 702,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 693,
											"end": 707,
											"name": "DUP3"
										},
										{
											"begin": 693,
											"end": 707,
											"name": "DUP3"
										},
										{
											"begin": 693,
											"end": 707,
											"name": "SLOAD"
										},
										{
											"begin": 693,
											"end": 707,
											"name": "ADD"
										},
										{
											"begin": 693,
											"end": 707,
											"name": "SWAP3"
										},
										{
											"begin": 693,
											"end": 707,
											"name": "POP"
										},
										{
											"begin": 693,
											"end": 707,
											"name": "POP"
										},
										{
											"begin": 693,
											"end": 707,
											"name": "DUP2"
										},
										{
											"begin": 693,
											"end": 707,
											"name": "SWAP1"
										},
										{
											"begin": 693,
											"end": 707,
											"name": "SSTORE"
										},
										{
											"begin": 693,
											"end": 707,
											"name": "POP"
										},
										{
											"begin": 376,
											"end": 379,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 363,
											"end": 372,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 363,
											"end": 372,
											"name": "SLOAD"
										},
										{
											"begin": 363,
											"end": 379,
											"name": "GT"
										},
										{
											"begin": 363,
											"end": 379,
											"name": "ISZERO"
										},
										{
											"begin": 355,
											"end": 380,
											"name": "ISZERO"
										},
										{
											"begin": 355,
											"end": 380,
											"name": "ISZERO"
										},
										{
											"begin": 355,
											"end": 380,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 355,
											"end": 380,
											"name": "JUMPI"
										},
										{
											"begin": 355,
											"end": 380,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 355,
											"end": 380,
											"name": "DUP1"
										},
										{
											"begin": 355,
											"end": 380,
											"name": "REVERT"
										},
										{
											"begin": 355,
											"end": 380,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 355,
											"end": 380,
											"name": "JUMPDEST"
										},
										{
											"begin": 628,
											"end": 714,
											"name": "POP"
										},
										{
											"begin": 628,
											"end": 714,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "JUMPDEST"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "SLOAD"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "DUP2"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "JUMPDEST"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "DUP1"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "SWAP1"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "SLOAD"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "SWAP1"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "EXP"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "SWAP1"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "DIV"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "AND"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "DUP2"
										},
										{
											"begin": 51,
											"end": 71,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 739,
											"end": 828,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 739,
											"end": 828,
											"name": "JUMPDEST"
										},
										{
											"begin": 795,
											"end": 796,
											"name": "DUP1"
										},
										{
											"begin": 450,
											"end": 452,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 446,
											"end": 447,
											"name": "DUP2"
										},
										{
											"begin": 446,
											"end": 452,
											"name": "GT"
										},
										{
											"begin": 438,
											"end": 453,
											"name": "ISZERO"
										},
										{
											"begin": 438,
											"end": 453,
											"name": "ISZERO"
										},
										{
											"begin": 438,
											"end": 453,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 438,
											"end": 453,
											"name": "JUMPI"
										},
										{
											"begin": 438,
											"end": 453,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 438,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 438,
											"end": 453,
											"name": "REVERT"
										},
										{
											"begin": 438,
											"end": 453,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 438,
											"end": 453,
											"name": "JUMPDEST"
										},
										{
											"begin": 820,
											"end": 821,
											"name": "DUP2"
										},
										{
											"begin": 807,
											"end": 816,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 807,
											"end": 816,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 807,
											"end": 821,
											"name": "DUP3"
										},
										{
											"begin": 807,
											"end": 821,
											"name": "DUP3"
										},
										{
											"begin": 807,
											"end": 821,
											"name": "SLOAD"
										},
										{
											"begin": 807,
											"end": 821,
											"name": "ADD"
										},
										{
											"begin": 807,
											"end": 821,
											"name": "SWAP3"
										},
										{
											"begin": 807,
											"end": 821,
											"name": "POP"
										},
										{
											"begin": 807,
											"end": 821,
											"name": "POP"
										},
										{
											"begin": 807,
											"end": 821,
											"name": "DUP2"
										},
										{
											"begin": 807,
											"end": 821,
											"name": "SWAP1"
										},
										{
											"begin": 807,
											"end": 821,
											"name": "SSTORE"
										},
										{
											"begin": 807,
											"end": 821,
											"name": "POP"
										},
										{
											"begin": 739,
											"end": 828,
											"name": "POP"
										},
										{
											"begin": 739,
											"end": 828,
											"name": "POP"
										},
										{
											"begin": 739,
											"end": 828,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 502,
											"end": 582,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 502,
											"end": 582,
											"name": "JUMPDEST"
										},
										{
											"begin": 246,
											"end": 251,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 246,
											"end": 251,
											"name": "DUP1"
										},
										{
											"begin": 246,
											"end": 251,
											"name": "SWAP1"
										},
										{
											"begin": 246,
											"end": 251,
											"name": "SLOAD"
										},
										{
											"begin": 246,
											"end": 251,
											"name": "SWAP1"
										},
										{
											"begin": 246,
											"end": 251,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 246,
											"end": 251,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 251,
											"name": "SWAP1"
										},
										{
											"begin": 246,
											"end": 251,
											"name": "DIV"
										},
										{
											"begin": 246,
											"end": 251,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 246,
											"end": 251,
											"name": "AND"
										},
										{
											"begin": 232,
											"end": 251,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 232,
											"end": 251,
											"name": "AND"
										},
										{
											"begin": 232,
											"end": 242,
											"name": "CALLER"
										},
										{
											"begin": 232,
											"end": 251,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 232,
											"end": 251,
											"name": "AND"
										},
										{
											"begin": 232,
											"end": 251,
											"name": "EQ"
										},
										{
											"begin": 224,
											"end": 252,
											"name": "ISZERO"
										},
										{
											"begin": 224,
											"end": 252,
											"name": "ISZERO"
										},
										{
											"begin": 224,
											"end": 252,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 224,
											"end": 252,
											"name": "JUMPI"
										},
										{
											"begin": 224,
											"end": 252,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 224,
											"end": 252,
											"name": "DUP1"
										},
										{
											"begin": 224,
											"end": 252,
											"name": "REVERT"
										},
										{
											"begin": 224,
											"end": 252,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 224,
											"end": 252,
											"name": "JUMPDEST"
										},
										{
											"begin": 574,
											"end": 575,
											"name": "DUP1"
										},
										{
											"begin": 561,
											"end": 570,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 561,
											"end": 570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 561,
											"end": 575,
											"name": "DUP3"
										},
										{
											"begin": 561,
											"end": 575,
											"name": "DUP3"
										},
										{
											"begin": 561,
											"end": 575,
											"name": "SLOAD"
										},
										{
											"begin": 561,
											"end": 575,
											"name": "ADD"
										},
										{
											"begin": 561,
											"end": 575,
											"name": "SWAP3"
										},
										{
											"begin": 561,
											"end": 575,
											"name": "POP"
										},
										{
											"begin": 561,
											"end": 575,
											"name": "POP"
										},
										{
											"begin": 561,
											"end": 575,
											"name": "DUP2"
										},
										{
											"begin": 561,
											"end": 575,
											"name": "SWAP1"
										},
										{
											"begin": 561,
											"end": 575,
											"name": "SSTORE"
										},
										{
											"begin": 561,
											"end": 575,
											"name": "POP"
										},
										{
											"begin": 502,
											"end": 582,
											"name": "POP"
										},
										{
											"begin": 502,
											"end": 582,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"Add_checkSender_And_Num(uint256)": "52ec3399",
							"Add_check_Num_30(uint256)": "a1d274b2",
							"Add_check_Sender(uint256)": "fbb57583",
							"integer_1()": "5db1ad7b",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"Add_checkSender_And_Num\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"integer_1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"Add_check_Num_30\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"Add_check_Sender\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"29..sol\":\"class28\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"29..sol\":{\"keccak256\":\"0x6b0489253e35523985c4ac6032a2156c3a849de59e72d3b95d2c77d188d40a60\",\"urls\":[\"bzzr://4871e175ff45765735e212c0a5f0a38d2b8d1822411176bbc9102993d5c616c8\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"29..sol": {
				"ast": {
					"absolutePath": "29..sol",
					"exportedSymbols": {
						"class28": [
							96
						]
					},
					"id": 97,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 96,
							"linearizedBaseContracts": [
								96
							],
							"name": "class28",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 96,
									"src": "51:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "51:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 5,
									"name": "integer_1",
									"nodeType": "VariableDeclaration",
									"scope": 96,
									"src": "77:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "77:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "126:59:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 11,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 8,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "136:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 9,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "144:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 10,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "144:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "136:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 12,
												"nodeType": "ExpressionStatement",
												"src": "136:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 13,
														"name": "integer_1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "164:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3530",
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "176:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_50_by_1",
															"typeString": "int_const 50"
														},
														"value": "50"
													},
													"src": "164:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "164:14:0"
											}
										]
									},
									"documentation": null,
									"id": 18,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "116:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "126:0:0"
									},
									"scope": 96,
									"src": "105:80:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "214:56:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 21,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "232:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "232:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 23,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "246:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "232:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 20,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															114,
															115
														],
														"referencedDeclaration": 114,
														"src": "224:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "224:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "224:28:0"
											},
											{
												"id": 27,
												"nodeType": "PlaceholderStatement",
												"src": "262:1:0"
											}
										]
									},
									"documentation": null,
									"id": 29,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "214:0:0"
									},
									"src": "195:75:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "296:91:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 32,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "314:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "314:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 34,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "328:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "314:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 31,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															114,
															115
														],
														"referencedDeclaration": 114,
														"src": "306:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "306:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "306:28:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "344:1:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 40,
																"name": "integer_1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "363:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "313030",
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "376:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "363:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 39,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															114,
															115
														],
														"referencedDeclaration": 114,
														"src": "355:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "355:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "355:25:0"
											}
										]
									},
									"documentation": null,
									"id": 46,
									"name": "checkInt",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "296:0:0"
									},
									"src": "278:109:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "428:43:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 51,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "446:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3330",
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "450:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															},
															"src": "446:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 50,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															114,
															115
														],
														"referencedDeclaration": 114,
														"src": "438:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "438:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "438:15:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "463:1:0"
											}
										]
									},
									"documentation": null,
									"id": 58,
									"name": "checkMoreThan30",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "420:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "420:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "419:8:0"
									},
									"src": "395:76:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "551:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 65,
														"name": "integer_1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "561:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 66,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "574:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "561:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 68,
												"nodeType": "ExpressionStatement",
												"src": "561:14:0"
											}
										]
									},
									"documentation": null,
									"id": 70,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 63,
											"modifierName": {
												"argumentTypes": null,
												"id": 62,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 29,
												"src": "542:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "542:9:0"
										}
									],
									"name": "Add_check_Sender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "528:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "528:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "527:8:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "551:0:0"
									},
									"scope": 96,
									"src": "502:80:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "683:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 77,
														"name": "integer_1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "693:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 78,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "706:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "693:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "693:14:0"
											}
										]
									},
									"documentation": null,
									"id": 82,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 75,
											"modifierName": {
												"argumentTypes": null,
												"id": 74,
												"name": "checkInt",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 46,
												"src": "675:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "675:8:0"
										}
									],
									"name": "Add_checkSender_And_Num",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "661:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "661:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "660:8:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "683:0:0"
									},
									"scope": 96,
									"src": "628:86:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "797:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 90,
														"name": "integer_1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "807:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 91,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "820:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "807:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "807:14:0"
											}
										]
									},
									"documentation": null,
									"id": 95,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 87,
													"name": "x",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 84,
													"src": "795:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 88,
											"modifierName": {
												"argumentTypes": null,
												"id": 86,
												"name": "checkMoreThan30",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "779:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "779:18:0"
										}
									],
									"name": "Add_check_Num_30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "765:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "765:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "764:8:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "797:0:0"
									},
									"scope": 96,
									"src": "739:89:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 97,
							"src": "25:805:0"
						}
					],
					"src": "0:830:0"
				},
				"id": 0
			}
		}
	}
}