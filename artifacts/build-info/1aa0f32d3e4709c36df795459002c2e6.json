{
	"id": "1aa0f32d3e4709c36df795459002c2e6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"test.sol": {
				"content": "pragma solidity ^0.4.2;\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    if (a == 0) {\n      return 0;\n    }\n    uint256 c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n  }\n\n  /**\n  * @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n}\n\ncontract paperstone {\n\nusing SafeMath for uint256;\n\nuint public money=0;\nuint constant miner=0.1 ether;\nuint public round=0;\naddress better;\nuint computer;\nconstructor()public payable{}\n\n\nmapping(uint => address)public player;\nmapping(uint => uint)public item;\nmapping(uint => string)public result;\n\nmodifier betcheck(){\n    if(money!=0){\n        require(player[round]==msg.sender);    \n    }\n    _;\n}\n\n\nfunction bet() public payable{\n    require(msg.value==miner);\n    money = money + miner;\n    player[round]=msg.sender;\n\n}\n\n\n\nfunction play(uint choose)public {\n    require(money>=0);\n    item[round]=choose;\n    computer=block.timestamp %3+1;\n    if(choose==computer)\n        {\n            result[round]=\"DRAW\";\n            msg.sender.transfer(money);\n        }\n    else if(choose<computer||(computer==1&&choose==2)){\n        result[round]=\"LOSE\";\n    }\n    else{\n        result[round]=\"WIN\";\n        msg.sender.transfer(money*2);\n    }\n    round++;\n    \n}\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"test.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"test.sol\":24:855  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0xb\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":252:259   */\n  dup1\n    /* \"--CODEGEN--\":246:260   */\n  mload\n    /* \"--CODEGEN--\":243:244   */\n  0x0\n    /* \"--CODEGEN--\":238:261   */\n  byte\n    /* \"--CODEGEN--\":232:236   */\n  0x73\n    /* \"--CODEGEN--\":229:262   */\n  eq\n    /* \"--CODEGEN--\":270:271   */\n  0x0\n    /* \"--CODEGEN--\":265:285   */\n  dup2\n  eq\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":222:285   */\n  jump(tag_1)\n    /* \"--CODEGEN--\":265:285   */\ntag_2:\n    /* \"--CODEGEN--\":274:283   */\n  invalid\n    /* \"--CODEGEN--\":222:285   */\ntag_1:\n  pop\n    /* \"--CODEGEN--\":298:307   */\n  address\n    /* \"--CODEGEN--\":295:296   */\n  0x0\n    /* \"--CODEGEN--\":288:308   */\n  mstore\n    /* \"--CODEGEN--\":328:332   */\n  0x73\n    /* \"--CODEGEN--\":319:326   */\n  dup2\n    /* \"--CODEGEN--\":311:333   */\n  mstore8\n    /* \"--CODEGEN--\":352:359   */\n  dup3\n    /* \"--CODEGEN--\":343:350   */\n  dup2\n    /* \"--CODEGEN--\":336:360   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"test.sol\":24:855  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a7230582063818d388055d210016cf593a16127fd53a817b1baa35ddf2180b088c749d6e80029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f30073000000000000000000000000000000000000000030146080604052600080fd00a165627a7a7230582063818d388055d210016cf593a16127fd53a817b1baa35ddf2180b088c749d6e80029",
							"opcodes": "PUSH1 0x4C PUSH1 0x2C PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x0 DUP2 EQ PUSH1 0x1C JUMPI PUSH1 0x1E JUMP JUMPDEST INVALID JUMPDEST POP ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN STOP PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH4 0x818D3880 SSTORE 0xd2 LT ADD PUSH13 0xF593A16127FD53A817B1BAA35D 0xdf 0x21 DUP1 0xb0 DUP9 0xc7 0x49 0xd6 0xe8 STOP 0x29 ",
							"sourceMap": "24:831:0:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fd00a165627a7a7230582063818d388055d210016cf593a16127fd53a817b1baa35ddf2180b088c749d6e80029",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH4 0x818D3880 SSTORE 0xd2 LT ADD PUSH13 0xF593A16127FD53A817B1BAA35D 0xdf 0x21 DUP1 0xb0 DUP9 0xc7 0x49 0xd6 0xe8 STOP 0x29 ",
							"sourceMap": "24:831:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "15200",
								"executionCost": "116",
								"totalCost": "15316"
							},
							"internal": {
								"div(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 24,
									"end": 855,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24,
									"end": 855,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 252,
									"end": 259,
									"name": "DUP1"
								},
								{
									"begin": 246,
									"end": 260,
									"name": "MLOAD"
								},
								{
									"begin": 243,
									"end": 244,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 238,
									"end": 261,
									"name": "BYTE"
								},
								{
									"begin": 232,
									"end": 236,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 229,
									"end": 262,
									"name": "EQ"
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "DUP2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "EQ"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPI"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMP"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 274,
									"end": 283,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "POP"
								},
								{
									"begin": 298,
									"end": 307,
									"name": "ADDRESS"
								},
								{
									"begin": 295,
									"end": 296,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 288,
									"end": 308,
									"name": "MSTORE"
								},
								{
									"begin": 328,
									"end": 332,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 319,
									"end": 326,
									"name": "DUP2"
								},
								{
									"begin": 311,
									"end": 333,
									"name": "MSTORE8"
								},
								{
									"begin": 352,
									"end": 359,
									"name": "DUP3"
								},
								{
									"begin": 343,
									"end": 350,
									"name": "DUP2"
								},
								{
									"begin": 336,
									"end": 360,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582063818d388055d210016cf593a16127fd53a817b1baa35ddf2180b088c749d6e80029",
									".code": [
										{
											"begin": 24,
											"end": 855,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 24,
											"end": 855,
											"name": "ADDRESS"
										},
										{
											"begin": 24,
											"end": 855,
											"name": "EQ"
										},
										{
											"begin": 24,
											"end": 855,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 24,
											"end": 855,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24,
											"end": 855,
											"name": "MSTORE"
										},
										{
											"begin": 24,
											"end": 855,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24,
											"end": 855,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 855,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"test.sol\":\"SafeMath\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"test.sol\":{\"keccak256\":\"0x88d9d51b1e1796a73d762d00e65d18b56e6cfe2999645c368b91860e1493c33a\",\"urls\":[\"bzzr://f9cfd246121c11781359f76c61962d62c82a2e7dac61e7e4b69089817bf34c1d\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"paperstone": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "bet",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "round",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"name": "result",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "money",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "choose",
									"type": "uint256"
								}
							],
							"name": "play",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"name": "item",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"name": "player",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"test.sol\":857:1819  contract paperstone {... */\n  mstore(0x40, 0x80)\n    /* \"test.sol\":927:928  0 */\n  0x0\n    /* \"test.sol\":909:928  uint public money=0 */\n  dup1\n  sstore\n    /* \"test.sol\":979:980  0 */\n  0x0\n    /* \"test.sol\":961:980  uint public round=0 */\n  0x1\n  sstore\n    /* \"test.sol\":857:1819  contract paperstone {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"test.sol\":857:1819  contract paperstone {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x11610c25\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x146ca531\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3c594059\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4ddd108a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x6898f82b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x898e6219\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x9e0551c6\n      eq\n      tag_8\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"test.sol\":1261:1382  function bet() public payable{... */\n    tag_2:\n      tag_9\n      jump(tag_10)\n    tag_9:\n      stop\n        /* \"test.sol\":961:980  uint public round=0 */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_11\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_11:\n        /* \"test.sol\":961:980  uint public round=0 */\n      pop\n      tag_12\n      jump(tag_13)\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"test.sol\":1118:1154  mapping(uint => string)public result */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_14\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_14:\n        /* \"test.sol\":1118:1154  mapping(uint => string)public result */\n      pop\n      tag_15\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_16)\n    tag_15:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_17:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_17)\n    tag_18:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"test.sol\":1118:1154  mapping(uint => string)public result */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_20\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_20:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"test.sol\":909:928  uint public money=0 */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_21:\n        /* \"test.sol\":909:928  uint public money=0 */\n      pop\n      tag_22\n      jump(tag_23)\n    tag_22:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"test.sol\":1386:1816  function play(uint choose)public {... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_24:\n        /* \"test.sol\":1386:1816  function play(uint choose)public {... */\n      pop\n      tag_25\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_26)\n    tag_25:\n      stop\n        /* \"test.sol\":1084:1116  mapping(uint => uint)public item */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_27:\n        /* \"test.sol\":1084:1116  mapping(uint => uint)public item */\n      pop\n      tag_28\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_29)\n    tag_28:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"test.sol\":1045:1082  mapping(uint => address)public player */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_30:\n        /* \"test.sol\":1045:1082  mapping(uint => address)public player */\n      pop\n      tag_31\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_32)\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"test.sol\":1261:1382  function bet() public payable{... */\n    tag_10:\n        /* \"test.sol\":950:959  0.1 ether */\n      0x16345785d8a0000\n        /* \"test.sol\":1304:1313  msg.value */\n      callvalue\n        /* \"test.sol\":1304:1320  msg.value==miner */\n      eq\n        /* \"test.sol\":1296:1321  require(msg.value==miner) */\n      iszero\n      iszero\n      tag_34\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_34:\n        /* \"test.sol\":950:959  0.1 ether */\n      0x16345785d8a0000\n        /* \"test.sol\":1335:1340  money */\n      sload(0x0)\n        /* \"test.sol\":1335:1348  money + miner */\n      add\n        /* \"test.sol\":1327:1332  money */\n      0x0\n        /* \"test.sol\":1327:1348  money = money + miner */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"test.sol\":1368:1378  msg.sender */\n      caller\n        /* \"test.sol\":1354:1360  player */\n      0x4\n        /* \"test.sol\":1354:1367  player[round] */\n      0x0\n        /* \"test.sol\":1361:1366  round */\n      sload(0x1)\n        /* \"test.sol\":1354:1367  player[round] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"test.sol\":1354:1378  player[round]=msg.sender */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"test.sol\":1261:1382  function bet() public payable{... */\n      jump\t// out\n        /* \"test.sol\":961:980  uint public round=0 */\n    tag_13:\n      sload(0x1)\n      dup2\n      jump\t// out\n        /* \"test.sol\":1118:1154  mapping(uint => string)public result */\n    tag_16:\n      mstore(0x20, 0x6)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      iszero\n      tag_35\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_36\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_35)\n    tag_36:\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_37:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x1\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_37\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_35:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"test.sol\":909:928  uint public money=0 */\n    tag_23:\n      sload(0x0)\n      dup2\n      jump\t// out\n        /* \"test.sol\":1386:1816  function play(uint choose)public {... */\n    tag_26:\n        /* \"test.sol\":1440:1441  0 */\n      0x0\n        /* \"test.sol\":1433:1438  money */\n      dup1\n      sload\n        /* \"test.sol\":1433:1441  money>=0 */\n      lt\n      iszero\n        /* \"test.sol\":1425:1442  require(money>=0) */\n      iszero\n      iszero\n      tag_39\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_39:\n        /* \"test.sol\":1460:1466  choose */\n      dup1\n        /* \"test.sol\":1448:1452  item */\n      0x5\n        /* \"test.sol\":1448:1459  item[round] */\n      0x0\n        /* \"test.sol\":1453:1458  round */\n      sload(0x1)\n        /* \"test.sol\":1448:1459  item[round] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"test.sol\":1448:1466  item[round]=choose */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"test.sol\":1500:1501  1 */\n      0x1\n        /* \"test.sol\":1498:1499  3 */\n      0x3\n        /* \"test.sol\":1481:1496  block.timestamp */\n      timestamp\n        /* \"test.sol\":1481:1499  block.timestamp %3 */\n      dup2\n      iszero\n      iszero\n      tag_40\n      jumpi\n      invalid\n    tag_40:\n      mod\n        /* \"test.sol\":1481:1501  block.timestamp %3+1 */\n      add\n        /* \"test.sol\":1472:1480  computer */\n      0x3\n        /* \"test.sol\":1472:1501  computer=block.timestamp %3+1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"test.sol\":1518:1526  computer */\n      sload(0x3)\n        /* \"test.sol\":1510:1516  choose */\n      dup2\n        /* \"test.sol\":1510:1526  choose==computer */\n      eq\n        /* \"test.sol\":1507:1796  if(choose==computer)... */\n      iszero\n      tag_41\n      jumpi\n        /* \"test.sol\":1550:1570  result[round]=\"DRAW\" */\n      0x40\n      dup1\n      mload\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      0x4\n      dup2\n      mstore\n      0x20\n      add\n      0x4452415700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"test.sol\":1550:1556  result */\n      0x6\n        /* \"test.sol\":1550:1563  result[round] */\n      0x0\n        /* \"test.sol\":1557:1562  round */\n      sload(0x1)\n        /* \"test.sol\":1550:1563  result[round] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"test.sol\":1550:1570  result[round]=\"DRAW\" */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_42\n      swap3\n      swap2\n      swap1\n      jump\t// in(tag_43)\n    tag_42:\n      pop\n        /* \"test.sol\":1584:1594  msg.sender */\n      caller\n        /* \"test.sol\":1584:1603  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test.sol\":1584:1610  msg.sender.transfer(money) */\n      0x8fc\n        /* \"test.sol\":1604:1609  money */\n      sload(0x0)\n        /* \"test.sol\":1584:1610  msg.sender.transfer(money) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_44:\n        /* \"test.sol\":1584:1610  msg.sender.transfer(money) */\n      pop\n        /* \"test.sol\":1507:1796  if(choose==computer)... */\n      jump(tag_45)\n    tag_41:\n        /* \"test.sol\":1641:1649  computer */\n      sload(0x3)\n        /* \"test.sol\":1634:1640  choose */\n      dup2\n        /* \"test.sol\":1634:1649  choose<computer */\n      lt\n        /* \"test.sol\":1634:1675  choose<computer||(computer==1&&choose==2) */\n      dup1\n      tag_46\n      jumpi\n      pop\n        /* \"test.sol\":1662:1663  1 */\n      0x1\n        /* \"test.sol\":1652:1660  computer */\n      sload(0x3)\n        /* \"test.sol\":1652:1663  computer==1 */\n      eq\n        /* \"test.sol\":1652:1674  computer==1&&choose==2 */\n      dup1\n      iszero\n      tag_47\n      jumpi\n      pop\n        /* \"test.sol\":1673:1674  2 */\n      0x2\n        /* \"test.sol\":1665:1671  choose */\n      dup2\n        /* \"test.sol\":1665:1674  choose==2 */\n      eq\n        /* \"test.sol\":1652:1674  computer==1&&choose==2 */\n    tag_47:\n        /* \"test.sol\":1634:1675  choose<computer||(computer==1&&choose==2) */\n    tag_46:\n        /* \"test.sol\":1631:1796  if(choose<computer||(computer==1&&choose==2)){... */\n      iszero\n      tag_48\n      jumpi\n        /* \"test.sol\":1686:1706  result[round]=\"LOSE\" */\n      0x40\n      dup1\n      mload\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      0x4\n      dup2\n      mstore\n      0x20\n      add\n      0x4c4f534500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"test.sol\":1686:1692  result */\n      0x6\n        /* \"test.sol\":1686:1699  result[round] */\n      0x0\n        /* \"test.sol\":1693:1698  round */\n      sload(0x1)\n        /* \"test.sol\":1686:1699  result[round] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"test.sol\":1686:1706  result[round]=\"LOSE\" */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_49\n      swap3\n      swap2\n      swap1\n      jump\t// in(tag_43)\n    tag_49:\n      pop\n        /* \"test.sol\":1631:1796  if(choose<computer||(computer==1&&choose==2)){... */\n      jump(tag_50)\n    tag_48:\n        /* \"test.sol\":1732:1751  result[round]=\"WIN\" */\n      0x40\n      dup1\n      mload\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      0x3\n      dup2\n      mstore\n      0x20\n      add\n      0x57494e0000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"test.sol\":1732:1738  result */\n      0x6\n        /* \"test.sol\":1732:1745  result[round] */\n      0x0\n        /* \"test.sol\":1739:1744  round */\n      sload(0x1)\n        /* \"test.sol\":1732:1745  result[round] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"test.sol\":1732:1751  result[round]=\"WIN\" */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_51\n      swap3\n      swap2\n      swap1\n      jump\t// in(tag_43)\n    tag_51:\n      pop\n        /* \"test.sol\":1761:1771  msg.sender */\n      caller\n        /* \"test.sol\":1761:1780  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test.sol\":1761:1789  msg.sender.transfer(money*2) */\n      0x8fc\n        /* \"test.sol\":1787:1788  2 */\n      0x2\n        /* \"test.sol\":1781:1786  money */\n      sload(0x0)\n        /* \"test.sol\":1781:1788  money*2 */\n      mul\n        /* \"test.sol\":1761:1789  msg.sender.transfer(money*2) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_52\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_52:\n        /* \"test.sol\":1761:1789  msg.sender.transfer(money*2) */\n      pop\n        /* \"test.sol\":1631:1796  if(choose<computer||(computer==1&&choose==2)){... */\n    tag_50:\n        /* \"test.sol\":1507:1796  if(choose==computer)... */\n    tag_45:\n        /* \"test.sol\":1801:1806  round */\n      0x1\n      0x0\n        /* \"test.sol\":1801:1808  round++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x1\n      add\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"test.sol\":1386:1816  function play(uint choose)public {... */\n      pop\n      jump\t// out\n        /* \"test.sol\":1084:1116  mapping(uint => uint)public item */\n    tag_29:\n      mstore(0x20, 0x5)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"test.sol\":1045:1082  mapping(uint => address)public player */\n    tag_32:\n      mstore(0x20, 0x4)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"test.sol\":857:1819  contract paperstone {... */\n    tag_43:\n      dup3\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      0x1f\n      lt\n      tag_54\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_53)\n    tag_54:\n      dup3\n      dup1\n      add\n      0x1\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_53\n      jumpi\n      swap2\n      dup3\n      add\n    tag_55:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_56\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x1\n      add\n      swap1\n      jump(tag_55)\n    tag_56:\n    tag_53:\n      pop\n      swap1\n      pop\n      tag_57\n      swap2\n      swap1\n      jump\t// in(tag_58)\n    tag_57:\n      pop\n      swap1\n      jump\t// out\n    tag_58:\n      tag_59\n      swap2\n      swap1\n    tag_60:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_61\n      jumpi\n      0x0\n      dup2\n      0x0\n      swap1\n      sstore\n      pop\n      0x1\n      add\n      jump(tag_60)\n    tag_61:\n      pop\n      swap1\n      jump\n    tag_59:\n      swap1\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582008cb90887390e3f9af4e41deefd67ba71d152da16a1b36a77eed0eee8490a2560029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526000805560006001556107018061001c6000396000f300608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806311610c2514610088578063146ca531146100925780633c594059146100bd5780634ddd108a146101635780636898f82b1461018e578063898e6219146101bb5780639e0551c6146101fc575b600080fd5b610090610269565b005b34801561009e57600080fd5b506100a76102e8565b6040518082815260200191505060405180910390f35b3480156100c957600080fd5b506100e8600480360381019080803590602001909291905050506102ee565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561012857808201518184015260208101905061010d565b50505050905090810190601f1680156101555780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561016f57600080fd5b5061017861039e565b6040518082815260200191505060405180910390f35b34801561019a57600080fd5b506101b9600480360381019080803590602001909291905050506103a4565b005b3480156101c757600080fd5b506101e6600480360381019080803590602001909291905050506105e5565b6040518082815260200191505060405180910390f35b34801561020857600080fd5b50610227600480360381019080803590602001909291905050506105fd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b67016345785d8a00003414151561027f57600080fd5b67016345785d8a0000600054016000819055503360046000600154815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60015481565b60066020528060005260406000206000915090508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103965780601f1061036b57610100808354040283529160200191610396565b820191906000526020600020905b81548152906001019060200180831161037957829003601f168201915b505050505081565b60005481565b60008054101515156103b557600080fd5b806005600060015481526020019081526020016000208190555060016003428115156103dd57fe5b060160038190555060035481141561049c576040805190810160405280600481526020017f4452415700000000000000000000000000000000000000000000000000000000815250600660006001548152602001908152602001600020908051906020019061044d929190610630565b503373ffffffffffffffffffffffffffffffffffffffff166108fc6000549081150290604051600060405180830381858888f19350505050158015610496573d6000803e3d6000fd5b506105d0565b6003548110806104ba575060016003541480156104b95750600281145b5b15610523576040805190810160405280600481526020017f4c4f534500000000000000000000000000000000000000000000000000000000815250600660006001548152602001908152602001600020908051906020019061051d929190610630565b506105cf565b6040805190810160405280600381526020017f57494e00000000000000000000000000000000000000000000000000000000008152506006600060015481526020019081526020016000209080519060200190610581929190610630565b503373ffffffffffffffffffffffffffffffffffffffff166108fc6002600054029081150290604051600060405180830381858888f193505050501580156105cd573d6000803e3d6000fd5b505b5b60016000815480929190600101919050555050565b60056020528060005260406000206000915090505481565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061067157805160ff191683800117855561069f565b8280016001018555821561069f579182015b8281111561069e578251825591602001919060010190610683565b5b5090506106ac91906106b0565b5090565b6106d291905b808211156106ce5760008160009055506001016106b6565b5090565b905600a165627a7a7230582008cb90887390e3f9af4e41deefd67ba71d152da16a1b36a77eed0eee8490a2560029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SSTORE PUSH1 0x0 PUSH1 0x1 SSTORE PUSH2 0x701 DUP1 PUSH2 0x1C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x83 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x11610C25 EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x146CA531 EQ PUSH2 0x92 JUMPI DUP1 PUSH4 0x3C594059 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x4DDD108A EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x6898F82B EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x898E6219 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x9E0551C6 EQ PUSH2 0x1FC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x90 PUSH2 0x269 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH2 0x2E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x128 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x10D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x155 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x178 PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3A4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH8 0x16345785D8A0000 CALLVALUE EQ ISZERO ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0x16345785D8A0000 PUSH1 0x0 SLOAD ADD PUSH1 0x0 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x396 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x396 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x379 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 TIMESTAMP DUP2 ISZERO ISZERO PUSH2 0x3DD JUMPI INVALID JUMPDEST MOD ADD PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD DUP2 EQ ISZERO PUSH2 0x49C JUMPI PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4452415700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x44D SWAP3 SWAP2 SWAP1 PUSH2 0x630 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x0 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x496 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x5D0 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT DUP1 PUSH2 0x4BA JUMPI POP PUSH1 0x1 PUSH1 0x3 SLOAD EQ DUP1 ISZERO PUSH2 0x4B9 JUMPI POP PUSH1 0x2 DUP2 EQ JUMPDEST JUMPDEST ISZERO PUSH2 0x523 JUMPI PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C4F534500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x51D SWAP3 SWAP2 SWAP1 PUSH2 0x630 JUMP JUMPDEST POP PUSH2 0x5CF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x57494E0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x581 SWAP3 SWAP2 SWAP1 PUSH2 0x630 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x2 PUSH1 0x0 SLOAD MUL SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x671 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x69F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x69F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x69E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x683 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x6AC SWAP2 SWAP1 PUSH2 0x6B0 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x6D2 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x6CE JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x6B6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 ADDMOD 0xcb SWAP1 DUP9 PUSH20 0x90E3F9AF4E41DEEFD67BA71D152DA16A1B36A77E 0xed 0xe 0xee DUP5 SWAP1 LOG2 JUMP STOP 0x29 ",
							"sourceMap": "857:962:0:-;;;927:1;909:19;;979:1;961:19;;857:962;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806311610c2514610088578063146ca531146100925780633c594059146100bd5780634ddd108a146101635780636898f82b1461018e578063898e6219146101bb5780639e0551c6146101fc575b600080fd5b610090610269565b005b34801561009e57600080fd5b506100a76102e8565b6040518082815260200191505060405180910390f35b3480156100c957600080fd5b506100e8600480360381019080803590602001909291905050506102ee565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561012857808201518184015260208101905061010d565b50505050905090810190601f1680156101555780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561016f57600080fd5b5061017861039e565b6040518082815260200191505060405180910390f35b34801561019a57600080fd5b506101b9600480360381019080803590602001909291905050506103a4565b005b3480156101c757600080fd5b506101e6600480360381019080803590602001909291905050506105e5565b6040518082815260200191505060405180910390f35b34801561020857600080fd5b50610227600480360381019080803590602001909291905050506105fd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b67016345785d8a00003414151561027f57600080fd5b67016345785d8a0000600054016000819055503360046000600154815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60015481565b60066020528060005260406000206000915090508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103965780601f1061036b57610100808354040283529160200191610396565b820191906000526020600020905b81548152906001019060200180831161037957829003601f168201915b505050505081565b60005481565b60008054101515156103b557600080fd5b806005600060015481526020019081526020016000208190555060016003428115156103dd57fe5b060160038190555060035481141561049c576040805190810160405280600481526020017f4452415700000000000000000000000000000000000000000000000000000000815250600660006001548152602001908152602001600020908051906020019061044d929190610630565b503373ffffffffffffffffffffffffffffffffffffffff166108fc6000549081150290604051600060405180830381858888f19350505050158015610496573d6000803e3d6000fd5b506105d0565b6003548110806104ba575060016003541480156104b95750600281145b5b15610523576040805190810160405280600481526020017f4c4f534500000000000000000000000000000000000000000000000000000000815250600660006001548152602001908152602001600020908051906020019061051d929190610630565b506105cf565b6040805190810160405280600381526020017f57494e00000000000000000000000000000000000000000000000000000000008152506006600060015481526020019081526020016000209080519060200190610581929190610630565b503373ffffffffffffffffffffffffffffffffffffffff166108fc6002600054029081150290604051600060405180830381858888f193505050501580156105cd573d6000803e3d6000fd5b505b5b60016000815480929190600101919050555050565b60056020528060005260406000206000915090505481565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061067157805160ff191683800117855561069f565b8280016001018555821561069f579182015b8281111561069e578251825591602001919060010190610683565b5b5090506106ac91906106b0565b5090565b6106d291905b808211156106ce5760008160009055506001016106b6565b5090565b905600a165627a7a7230582008cb90887390e3f9af4e41deefd67ba71d152da16a1b36a77eed0eee8490a2560029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x83 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x11610C25 EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x146CA531 EQ PUSH2 0x92 JUMPI DUP1 PUSH4 0x3C594059 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x4DDD108A EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x6898F82B EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x898E6219 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x9E0551C6 EQ PUSH2 0x1FC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x90 PUSH2 0x269 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH2 0x2E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x128 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x10D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x155 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x178 PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3A4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH8 0x16345785D8A0000 CALLVALUE EQ ISZERO ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0x16345785D8A0000 PUSH1 0x0 SLOAD ADD PUSH1 0x0 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x396 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x396 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x379 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 TIMESTAMP DUP2 ISZERO ISZERO PUSH2 0x3DD JUMPI INVALID JUMPDEST MOD ADD PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD DUP2 EQ ISZERO PUSH2 0x49C JUMPI PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4452415700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x44D SWAP3 SWAP2 SWAP1 PUSH2 0x630 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x0 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x496 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x5D0 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT DUP1 PUSH2 0x4BA JUMPI POP PUSH1 0x1 PUSH1 0x3 SLOAD EQ DUP1 ISZERO PUSH2 0x4B9 JUMPI POP PUSH1 0x2 DUP2 EQ JUMPDEST JUMPDEST ISZERO PUSH2 0x523 JUMPI PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C4F534500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x51D SWAP3 SWAP2 SWAP1 PUSH2 0x630 JUMP JUMPDEST POP PUSH2 0x5CF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x57494E0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x581 SWAP3 SWAP2 SWAP1 PUSH2 0x630 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x2 PUSH1 0x0 SLOAD MUL SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x671 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x69F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x69F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x69E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x683 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x6AC SWAP2 SWAP1 PUSH2 0x6B0 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x6D2 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x6CE JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x6B6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 ADDMOD 0xcb SWAP1 DUP9 PUSH20 0x90E3F9AF4E41DEEFD67BA71D152DA16A1B36A77E 0xed 0xe 0xee DUP5 SWAP1 LOG2 JUMP STOP 0x29 ",
							"sourceMap": "857:962:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1261:121;;;;;;961:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;961:19:0;;;;;;;;;;;;;;;;;;;;;;;1118:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1118:36:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1118:36:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;909:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;909:19:0;;;;;;;;;;;;;;;;;;;;;;;1386:430;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1386:430:0;;;;;;;;;;;;;;;;;;;;;;;;;;1084:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1084:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1045:37;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1045:37:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1261:121;950:9;1304;:16;1296:25;;;;;;;;950:9;1335:5;;:13;1327:5;:21;;;;1368:10;1354:6;:13;1361:5;;1354:13;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;1261:121::o;961:19::-;;;;:::o;1118:36::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;909:19::-;;;;:::o;1386:430::-;1440:1;1433:5;;:8;;1425:17;;;;;;;;1460:6;1448:4;:11;1453:5;;1448:11;;;;;;;;;;;:18;;;;1500:1;1498;1481:15;:18;;;;;;;;:20;1472:8;:29;;;;1518:8;;1510:6;:16;1507:289;;;1550:20;;;;;;;;;;;;;;;;;;:6;:13;1557:5;;1550:13;;;;;;;;;;;:20;;;;;;;;;;;;:::i;:::-;;1584:10;:19;;:26;1604:5;;1584:26;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1584:26:0;1507:289;;;1641:8;;1634:6;:15;:41;;;;1662:1;1652:8;;:11;:22;;;;;1673:1;1665:6;:9;1652:22;1634:41;1631:165;;;1686:20;;;;;;;;;;;;;;;;;;:6;:13;1693:5;;1686:13;;;;;;;;;;;:20;;;;;;;;;;;;:::i;:::-;;1631:165;;;1732:19;;;;;;;;;;;;;;;;;;:6;:13;1739:5;;1732:13;;;;;;;;;;;:19;;;;;;;;;;;;:::i;:::-;;1761:10;:19;;:28;1787:1;1781:5;;:7;1761:28;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1761:28:0;1631:165;1507:289;1801:5;;:7;;;;;;;;;;;;;1386:430;:::o;1084:32::-;;;;;;;;;;;;;;;;;:::o;1045:37::-;;;;;;;;;;;;;;;;;;;;;;:::o;857:962::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "358600",
								"executionCost": "10387",
								"totalCost": "368987"
							},
							"external": {
								"bet()": "40901",
								"item(uint256)": "636",
								"money()": "460",
								"play(uint256)": "infinite",
								"player(uint256)": "695",
								"result(uint256)": "infinite",
								"round()": "416"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 857,
									"end": 1819,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 857,
									"end": 1819,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 857,
									"end": 1819,
									"name": "MSTORE"
								},
								{
									"begin": 927,
									"end": 928,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 909,
									"end": 928,
									"name": "DUP1"
								},
								{
									"begin": 909,
									"end": 928,
									"name": "SSTORE"
								},
								{
									"begin": 979,
									"end": 980,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 961,
									"end": 980,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 961,
									"end": 980,
									"name": "SSTORE"
								},
								{
									"begin": 857,
									"end": 1819,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 857,
									"end": 1819,
									"name": "DUP1"
								},
								{
									"begin": 857,
									"end": 1819,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 857,
									"end": 1819,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 857,
									"end": 1819,
									"name": "CODECOPY"
								},
								{
									"begin": 857,
									"end": 1819,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 857,
									"end": 1819,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582008cb90887390e3f9af4e41deefd67ba71d152da16a1b36a77eed0eee8490a2560029",
									".code": [
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "MSTORE"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "LT"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "JUMPI"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "SWAP1"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "DIV"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "AND"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "DUP1"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH",
											"value": "11610C25"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "EQ"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "JUMPI"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "DUP1"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH",
											"value": "146CA531"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "EQ"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "JUMPI"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "DUP1"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH",
											"value": "3C594059"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "EQ"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "JUMPI"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "DUP1"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH",
											"value": "4DDD108A"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "EQ"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "JUMPI"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "DUP1"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH",
											"value": "6898F82B"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "EQ"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "JUMPI"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "DUP1"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH",
											"value": "898E6219"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "EQ"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "JUMPI"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "DUP1"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH",
											"value": "9E0551C6"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "EQ"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "JUMPI"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "JUMPDEST"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "DUP1"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "REVERT"
										},
										{
											"begin": 1261,
											"end": 1382,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1261,
											"end": 1382,
											"name": "JUMPDEST"
										},
										{
											"begin": 1261,
											"end": 1382,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1261,
											"end": 1382,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1261,
											"end": 1382,
											"name": "JUMP"
										},
										{
											"begin": 1261,
											"end": 1382,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1261,
											"end": 1382,
											"name": "JUMPDEST"
										},
										{
											"begin": 1261,
											"end": 1382,
											"name": "STOP"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "JUMPDEST"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "POP"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "JUMP"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "JUMPDEST"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "MLOAD"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "DUP1"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "DUP3"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "DUP2"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "MSTORE"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "ADD"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "SWAP2"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "POP"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "POP"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "MLOAD"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "DUP1"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "SWAP2"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "SUB"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "SWAP1"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "RETURN"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "JUMPDEST"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "POP"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SUB"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP2"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "ADD"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SWAP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SWAP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "ADD"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SWAP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SWAP3"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SWAP2"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SWAP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "POP"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "POP"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "POP"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "JUMP"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "JUMPDEST"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "MLOAD"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "ADD"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP3"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP2"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SUB"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP3"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "MSTORE"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP4"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP2"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP2"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "MLOAD"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP2"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "MSTORE"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "ADD"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SWAP2"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "POP"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "MLOAD"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SWAP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "ADD"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SWAP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP4"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "POP"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "POP"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "POP"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SWAP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "POP"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SWAP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP2"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "ADD"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SWAP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "AND"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "ISZERO"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "JUMPI"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP3"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SUB"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "MLOAD"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP4"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SUB"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "EXP"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SUB"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "NOT"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "AND"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP2"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "MSTORE"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "ADD"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SWAP2"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "POP"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "JUMPDEST"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "POP"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SWAP3"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "POP"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "POP"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "POP"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "MLOAD"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SWAP2"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SUB"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SWAP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "RETURN"
										},
										{
											"begin": 909,
											"end": 928,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 909,
											"end": 928,
											"name": "JUMPDEST"
										},
										{
											"begin": 909,
											"end": 928,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 909,
											"end": 928,
											"name": "POP"
										},
										{
											"begin": 909,
											"end": 928,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 909,
											"end": 928,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 909,
											"end": 928,
											"name": "JUMP"
										},
										{
											"begin": 909,
											"end": 928,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 909,
											"end": 928,
											"name": "JUMPDEST"
										},
										{
											"begin": 909,
											"end": 928,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 909,
											"end": 928,
											"name": "MLOAD"
										},
										{
											"begin": 909,
											"end": 928,
											"name": "DUP1"
										},
										{
											"begin": 909,
											"end": 928,
											"name": "DUP3"
										},
										{
											"begin": 909,
											"end": 928,
											"name": "DUP2"
										},
										{
											"begin": 909,
											"end": 928,
											"name": "MSTORE"
										},
										{
											"begin": 909,
											"end": 928,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 909,
											"end": 928,
											"name": "ADD"
										},
										{
											"begin": 909,
											"end": 928,
											"name": "SWAP2"
										},
										{
											"begin": 909,
											"end": 928,
											"name": "POP"
										},
										{
											"begin": 909,
											"end": 928,
											"name": "POP"
										},
										{
											"begin": 909,
											"end": 928,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 909,
											"end": 928,
											"name": "MLOAD"
										},
										{
											"begin": 909,
											"end": 928,
											"name": "DUP1"
										},
										{
											"begin": 909,
											"end": 928,
											"name": "SWAP2"
										},
										{
											"begin": 909,
											"end": 928,
											"name": "SUB"
										},
										{
											"begin": 909,
											"end": 928,
											"name": "SWAP1"
										},
										{
											"begin": 909,
											"end": 928,
											"name": "RETURN"
										},
										{
											"begin": 1386,
											"end": 1816,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1386,
											"end": 1816,
											"name": "JUMPDEST"
										},
										{
											"begin": 1386,
											"end": 1816,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1386,
											"end": 1816,
											"name": "POP"
										},
										{
											"begin": 1386,
											"end": 1816,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 1386,
											"end": 1816,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1386,
											"end": 1816,
											"name": "DUP1"
										},
										{
											"begin": 1386,
											"end": 1816,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1386,
											"end": 1816,
											"name": "SUB"
										},
										{
											"begin": 1386,
											"end": 1816,
											"name": "DUP2"
										},
										{
											"begin": 1386,
											"end": 1816,
											"name": "ADD"
										},
										{
											"begin": 1386,
											"end": 1816,
											"name": "SWAP1"
										},
										{
											"begin": 1386,
											"end": 1816,
											"name": "DUP1"
										},
										{
											"begin": 1386,
											"end": 1816,
											"name": "DUP1"
										},
										{
											"begin": 1386,
											"end": 1816,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1386,
											"end": 1816,
											"name": "SWAP1"
										},
										{
											"begin": 1386,
											"end": 1816,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1386,
											"end": 1816,
											"name": "ADD"
										},
										{
											"begin": 1386,
											"end": 1816,
											"name": "SWAP1"
										},
										{
											"begin": 1386,
											"end": 1816,
											"name": "SWAP3"
										},
										{
											"begin": 1386,
											"end": 1816,
											"name": "SWAP2"
										},
										{
											"begin": 1386,
											"end": 1816,
											"name": "SWAP1"
										},
										{
											"begin": 1386,
											"end": 1816,
											"name": "POP"
										},
										{
											"begin": 1386,
											"end": 1816,
											"name": "POP"
										},
										{
											"begin": 1386,
											"end": 1816,
											"name": "POP"
										},
										{
											"begin": 1386,
											"end": 1816,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 1386,
											"end": 1816,
											"name": "JUMP"
										},
										{
											"begin": 1386,
											"end": 1816,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 1386,
											"end": 1816,
											"name": "JUMPDEST"
										},
										{
											"begin": 1386,
											"end": 1816,
											"name": "STOP"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "JUMPDEST"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "POP"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "DUP1"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "SUB"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "DUP2"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "ADD"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "SWAP1"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "DUP1"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "DUP1"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "SWAP1"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "ADD"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "SWAP1"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "SWAP3"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "SWAP2"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "SWAP1"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "POP"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "POP"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "POP"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "JUMP"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "JUMPDEST"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "MLOAD"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "DUP1"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "DUP3"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "DUP2"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "MSTORE"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "ADD"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "SWAP2"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "POP"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "POP"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "MLOAD"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "DUP1"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "SWAP2"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "SUB"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "SWAP1"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "RETURN"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "JUMPDEST"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "POP"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "DUP1"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "SUB"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "DUP2"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "ADD"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "SWAP1"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "DUP1"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "DUP1"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "SWAP1"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "ADD"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "SWAP1"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "SWAP3"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "SWAP2"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "SWAP1"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "POP"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "POP"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "POP"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "JUMP"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "JUMPDEST"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "MLOAD"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "DUP1"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "DUP3"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "AND"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "AND"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "DUP2"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "MSTORE"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "ADD"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "SWAP2"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "POP"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "POP"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "MLOAD"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "DUP1"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "SWAP2"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "SUB"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "SWAP1"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "RETURN"
										},
										{
											"begin": 1261,
											"end": 1382,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1261,
											"end": 1382,
											"name": "JUMPDEST"
										},
										{
											"begin": 950,
											"end": 959,
											"name": "PUSH",
											"value": "16345785D8A0000"
										},
										{
											"begin": 1304,
											"end": 1313,
											"name": "CALLVALUE"
										},
										{
											"begin": 1304,
											"end": 1320,
											"name": "EQ"
										},
										{
											"begin": 1296,
											"end": 1321,
											"name": "ISZERO"
										},
										{
											"begin": 1296,
											"end": 1321,
											"name": "ISZERO"
										},
										{
											"begin": 1296,
											"end": 1321,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 1296,
											"end": 1321,
											"name": "JUMPI"
										},
										{
											"begin": 1296,
											"end": 1321,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 1321,
											"name": "DUP1"
										},
										{
											"begin": 1296,
											"end": 1321,
											"name": "REVERT"
										},
										{
											"begin": 1296,
											"end": 1321,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 1296,
											"end": 1321,
											"name": "JUMPDEST"
										},
										{
											"begin": 950,
											"end": 959,
											"name": "PUSH",
											"value": "16345785D8A0000"
										},
										{
											"begin": 1335,
											"end": 1340,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1335,
											"end": 1340,
											"name": "SLOAD"
										},
										{
											"begin": 1335,
											"end": 1348,
											"name": "ADD"
										},
										{
											"begin": 1327,
											"end": 1332,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "DUP2"
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "SWAP1"
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "SSTORE"
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "POP"
										},
										{
											"begin": 1368,
											"end": 1378,
											"name": "CALLER"
										},
										{
											"begin": 1354,
											"end": 1360,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1354,
											"end": 1367,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1361,
											"end": 1366,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1361,
											"end": 1366,
											"name": "SLOAD"
										},
										{
											"begin": 1354,
											"end": 1367,
											"name": "DUP2"
										},
										{
											"begin": 1354,
											"end": 1367,
											"name": "MSTORE"
										},
										{
											"begin": 1354,
											"end": 1367,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1354,
											"end": 1367,
											"name": "ADD"
										},
										{
											"begin": 1354,
											"end": 1367,
											"name": "SWAP1"
										},
										{
											"begin": 1354,
											"end": 1367,
											"name": "DUP2"
										},
										{
											"begin": 1354,
											"end": 1367,
											"name": "MSTORE"
										},
										{
											"begin": 1354,
											"end": 1367,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1354,
											"end": 1367,
											"name": "ADD"
										},
										{
											"begin": 1354,
											"end": 1367,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1354,
											"end": 1367,
											"name": "KECCAK256"
										},
										{
											"begin": 1354,
											"end": 1367,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1354,
											"end": 1378,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1354,
											"end": 1378,
											"name": "EXP"
										},
										{
											"begin": 1354,
											"end": 1378,
											"name": "DUP2"
										},
										{
											"begin": 1354,
											"end": 1378,
											"name": "SLOAD"
										},
										{
											"begin": 1354,
											"end": 1378,
											"name": "DUP2"
										},
										{
											"begin": 1354,
											"end": 1378,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1354,
											"end": 1378,
											"name": "MUL"
										},
										{
											"begin": 1354,
											"end": 1378,
											"name": "NOT"
										},
										{
											"begin": 1354,
											"end": 1378,
											"name": "AND"
										},
										{
											"begin": 1354,
											"end": 1378,
											"name": "SWAP1"
										},
										{
											"begin": 1354,
											"end": 1378,
											"name": "DUP4"
										},
										{
											"begin": 1354,
											"end": 1378,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1354,
											"end": 1378,
											"name": "AND"
										},
										{
											"begin": 1354,
											"end": 1378,
											"name": "MUL"
										},
										{
											"begin": 1354,
											"end": 1378,
											"name": "OR"
										},
										{
											"begin": 1354,
											"end": 1378,
											"name": "SWAP1"
										},
										{
											"begin": 1354,
											"end": 1378,
											"name": "SSTORE"
										},
										{
											"begin": 1354,
											"end": 1378,
											"name": "POP"
										},
										{
											"begin": 1261,
											"end": 1382,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "JUMPDEST"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "SLOAD"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "DUP2"
										},
										{
											"begin": 961,
											"end": 980,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "JUMPDEST"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "MSTORE"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "MSTORE"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "KECCAK256"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SWAP2"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "POP"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SWAP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "POP"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SLOAD"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP2"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "AND"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "ISZERO"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "MUL"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SUB"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "AND"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SWAP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DIV"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "ADD"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SWAP2"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DIV"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "MUL"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "ADD"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "MLOAD"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SWAP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP2"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "ADD"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "MSTORE"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SWAP3"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SWAP2"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SWAP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP2"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP2"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "MSTORE"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "ADD"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP3"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SLOAD"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP2"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "AND"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "ISZERO"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "MUL"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SUB"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "AND"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SWAP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DIV"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "ISZERO"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "JUMPI"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "LT"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "JUMPI"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP4"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SLOAD"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DIV"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "MUL"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP4"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "MSTORE"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SWAP2"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "ADD"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SWAP2"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "JUMP"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "JUMPDEST"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP3"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "ADD"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SWAP2"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SWAP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "MSTORE"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "KECCAK256"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SWAP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "JUMPDEST"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP2"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SLOAD"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP2"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "MSTORE"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SWAP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "ADD"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SWAP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "ADD"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP4"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "GT"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "JUMPI"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP3"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SWAP1"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SUB"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "AND"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP3"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "ADD"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "SWAP2"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "JUMPDEST"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "POP"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "POP"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "POP"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "POP"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "POP"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "DUP2"
										},
										{
											"begin": 1118,
											"end": 1154,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 909,
											"end": 928,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 909,
											"end": 928,
											"name": "JUMPDEST"
										},
										{
											"begin": 909,
											"end": 928,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 909,
											"end": 928,
											"name": "SLOAD"
										},
										{
											"begin": 909,
											"end": 928,
											"name": "DUP2"
										},
										{
											"begin": 909,
											"end": 928,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1386,
											"end": 1816,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 1386,
											"end": 1816,
											"name": "JUMPDEST"
										},
										{
											"begin": 1440,
											"end": 1441,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1433,
											"end": 1438,
											"name": "DUP1"
										},
										{
											"begin": 1433,
											"end": 1438,
											"name": "SLOAD"
										},
										{
											"begin": 1433,
											"end": 1441,
											"name": "LT"
										},
										{
											"begin": 1433,
											"end": 1441,
											"name": "ISZERO"
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "ISZERO"
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "ISZERO"
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "JUMPI"
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "DUP1"
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "REVERT"
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "JUMPDEST"
										},
										{
											"begin": 1460,
											"end": 1466,
											"name": "DUP1"
										},
										{
											"begin": 1448,
											"end": 1452,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1448,
											"end": 1459,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1458,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1453,
											"end": 1458,
											"name": "SLOAD"
										},
										{
											"begin": 1448,
											"end": 1459,
											"name": "DUP2"
										},
										{
											"begin": 1448,
											"end": 1459,
											"name": "MSTORE"
										},
										{
											"begin": 1448,
											"end": 1459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1459,
											"name": "ADD"
										},
										{
											"begin": 1448,
											"end": 1459,
											"name": "SWAP1"
										},
										{
											"begin": 1448,
											"end": 1459,
											"name": "DUP2"
										},
										{
											"begin": 1448,
											"end": 1459,
											"name": "MSTORE"
										},
										{
											"begin": 1448,
											"end": 1459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1459,
											"name": "ADD"
										},
										{
											"begin": 1448,
											"end": 1459,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1448,
											"end": 1459,
											"name": "KECCAK256"
										},
										{
											"begin": 1448,
											"end": 1466,
											"name": "DUP2"
										},
										{
											"begin": 1448,
											"end": 1466,
											"name": "SWAP1"
										},
										{
											"begin": 1448,
											"end": 1466,
											"name": "SSTORE"
										},
										{
											"begin": 1448,
											"end": 1466,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1501,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1498,
											"end": 1499,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1481,
											"end": 1496,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1481,
											"end": 1499,
											"name": "DUP2"
										},
										{
											"begin": 1481,
											"end": 1499,
											"name": "ISZERO"
										},
										{
											"begin": 1481,
											"end": 1499,
											"name": "ISZERO"
										},
										{
											"begin": 1481,
											"end": 1499,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 1481,
											"end": 1499,
											"name": "JUMPI"
										},
										{
											"begin": 1481,
											"end": 1499,
											"name": "INVALID"
										},
										{
											"begin": 1481,
											"end": 1499,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 1481,
											"end": 1499,
											"name": "JUMPDEST"
										},
										{
											"begin": 1481,
											"end": 1499,
											"name": "MOD"
										},
										{
											"begin": 1481,
											"end": 1501,
											"name": "ADD"
										},
										{
											"begin": 1472,
											"end": 1480,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1472,
											"end": 1501,
											"name": "DUP2"
										},
										{
											"begin": 1472,
											"end": 1501,
											"name": "SWAP1"
										},
										{
											"begin": 1472,
											"end": 1501,
											"name": "SSTORE"
										},
										{
											"begin": 1472,
											"end": 1501,
											"name": "POP"
										},
										{
											"begin": 1518,
											"end": 1526,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1518,
											"end": 1526,
											"name": "SLOAD"
										},
										{
											"begin": 1510,
											"end": 1516,
											"name": "DUP2"
										},
										{
											"begin": 1510,
											"end": 1526,
											"name": "EQ"
										},
										{
											"begin": 1507,
											"end": 1796,
											"name": "ISZERO"
										},
										{
											"begin": 1507,
											"end": 1796,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 1507,
											"end": 1796,
											"name": "JUMPI"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "DUP1"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "MLOAD"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "SWAP1"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "DUP2"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "ADD"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "MSTORE"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "DUP1"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "DUP2"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "MSTORE"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "ADD"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "PUSH",
											"value": "4452415700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "DUP2"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "MSTORE"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "POP"
										},
										{
											"begin": 1550,
											"end": 1556,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1557,
											"end": 1562,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1557,
											"end": 1562,
											"name": "SLOAD"
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "DUP2"
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "MSTORE"
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "ADD"
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "SWAP1"
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "DUP2"
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "MSTORE"
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "ADD"
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "KECCAK256"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "SWAP1"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "DUP1"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "MLOAD"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "SWAP1"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "ADD"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "SWAP1"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "SWAP3"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "SWAP2"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "SWAP1"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "JUMPDEST"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "POP"
										},
										{
											"begin": 1584,
											"end": 1594,
											"name": "CALLER"
										},
										{
											"begin": 1584,
											"end": 1603,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1584,
											"end": 1603,
											"name": "AND"
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "SLOAD"
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "SWAP1"
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "DUP2"
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "ISZERO"
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "MUL"
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "SWAP1"
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "MLOAD"
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "MLOAD"
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "DUP1"
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "DUP4"
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "SUB"
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "DUP2"
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "DUP6"
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "DUP9"
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "DUP9"
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "CALL"
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "SWAP4"
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "POP"
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "POP"
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "POP"
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "POP"
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "POP"
										},
										{
											"begin": 1507,
											"end": 1796,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 1507,
											"end": 1796,
											"name": "JUMP"
										},
										{
											"begin": 1507,
											"end": 1796,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 1507,
											"end": 1796,
											"name": "JUMPDEST"
										},
										{
											"begin": 1641,
											"end": 1649,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1641,
											"end": 1649,
											"name": "SLOAD"
										},
										{
											"begin": 1634,
											"end": 1640,
											"name": "DUP2"
										},
										{
											"begin": 1634,
											"end": 1649,
											"name": "LT"
										},
										{
											"begin": 1634,
											"end": 1675,
											"name": "DUP1"
										},
										{
											"begin": 1634,
											"end": 1675,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 1634,
											"end": 1675,
											"name": "JUMPI"
										},
										{
											"begin": 1634,
											"end": 1675,
											"name": "POP"
										},
										{
											"begin": 1662,
											"end": 1663,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1652,
											"end": 1660,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1652,
											"end": 1660,
											"name": "SLOAD"
										},
										{
											"begin": 1652,
											"end": 1663,
											"name": "EQ"
										},
										{
											"begin": 1652,
											"end": 1674,
											"name": "DUP1"
										},
										{
											"begin": 1652,
											"end": 1674,
											"name": "ISZERO"
										},
										{
											"begin": 1652,
											"end": 1674,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 1652,
											"end": 1674,
											"name": "JUMPI"
										},
										{
											"begin": 1652,
											"end": 1674,
											"name": "POP"
										},
										{
											"begin": 1673,
											"end": 1674,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1665,
											"end": 1671,
											"name": "DUP2"
										},
										{
											"begin": 1665,
											"end": 1674,
											"name": "EQ"
										},
										{
											"begin": 1652,
											"end": 1674,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 1652,
											"end": 1674,
											"name": "JUMPDEST"
										},
										{
											"begin": 1634,
											"end": 1675,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 1634,
											"end": 1675,
											"name": "JUMPDEST"
										},
										{
											"begin": 1631,
											"end": 1796,
											"name": "ISZERO"
										},
										{
											"begin": 1631,
											"end": 1796,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 1631,
											"end": 1796,
											"name": "JUMPI"
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "DUP1"
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "MLOAD"
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "SWAP1"
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "DUP2"
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "ADD"
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "MSTORE"
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "DUP1"
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "DUP2"
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "MSTORE"
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "ADD"
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "PUSH",
											"value": "4C4F534500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "DUP2"
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "MSTORE"
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "POP"
										},
										{
											"begin": 1686,
											"end": 1692,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1686,
											"end": 1699,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1693,
											"end": 1698,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1693,
											"end": 1698,
											"name": "SLOAD"
										},
										{
											"begin": 1686,
											"end": 1699,
											"name": "DUP2"
										},
										{
											"begin": 1686,
											"end": 1699,
											"name": "MSTORE"
										},
										{
											"begin": 1686,
											"end": 1699,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1686,
											"end": 1699,
											"name": "ADD"
										},
										{
											"begin": 1686,
											"end": 1699,
											"name": "SWAP1"
										},
										{
											"begin": 1686,
											"end": 1699,
											"name": "DUP2"
										},
										{
											"begin": 1686,
											"end": 1699,
											"name": "MSTORE"
										},
										{
											"begin": 1686,
											"end": 1699,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1686,
											"end": 1699,
											"name": "ADD"
										},
										{
											"begin": 1686,
											"end": 1699,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1686,
											"end": 1699,
											"name": "KECCAK256"
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "SWAP1"
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "DUP1"
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "MLOAD"
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "SWAP1"
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "ADD"
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "SWAP1"
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "SWAP3"
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "SWAP2"
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "SWAP1"
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "JUMPDEST"
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "POP"
										},
										{
											"begin": 1631,
											"end": 1796,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 1631,
											"end": 1796,
											"name": "JUMP"
										},
										{
											"begin": 1631,
											"end": 1796,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 1631,
											"end": 1796,
											"name": "JUMPDEST"
										},
										{
											"begin": 1732,
											"end": 1751,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1732,
											"end": 1751,
											"name": "DUP1"
										},
										{
											"begin": 1732,
											"end": 1751,
											"name": "MLOAD"
										},
										{
											"begin": 1732,
											"end": 1751,
											"name": "SWAP1"
										},
										{
											"begin": 1732,
											"end": 1751,
											"name": "DUP2"
										},
										{
											"begin": 1732,
											"end": 1751,
											"name": "ADD"
										},
										{
											"begin": 1732,
											"end": 1751,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1732,
											"end": 1751,
											"name": "MSTORE"
										},
										{
											"begin": 1732,
											"end": 1751,
											"name": "DUP1"
										},
										{
											"begin": 1732,
											"end": 1751,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1732,
											"end": 1751,
											"name": "DUP2"
										},
										{
											"begin": 1732,
											"end": 1751,
											"name": "MSTORE"
										},
										{
											"begin": 1732,
											"end": 1751,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1732,
											"end": 1751,
											"name": "ADD"
										},
										{
											"begin": 1732,
											"end": 1751,
											"name": "PUSH",
											"value": "57494E0000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1732,
											"end": 1751,
											"name": "DUP2"
										},
										{
											"begin": 1732,
											"end": 1751,
											"name": "MSTORE"
										},
										{
											"begin": 1732,
											"end": 1751,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1738,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1732,
											"end": 1745,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1739,
											"end": 1744,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1739,
											"end": 1744,
											"name": "SLOAD"
										},
										{
											"begin": 1732,
											"end": 1745,
											"name": "DUP2"
										},
										{
											"begin": 1732,
											"end": 1745,
											"name": "MSTORE"
										},
										{
											"begin": 1732,
											"end": 1745,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1732,
											"end": 1745,
											"name": "ADD"
										},
										{
											"begin": 1732,
											"end": 1745,
											"name": "SWAP1"
										},
										{
											"begin": 1732,
											"end": 1745,
											"name": "DUP2"
										},
										{
											"begin": 1732,
											"end": 1745,
											"name": "MSTORE"
										},
										{
											"begin": 1732,
											"end": 1745,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1732,
											"end": 1745,
											"name": "ADD"
										},
										{
											"begin": 1732,
											"end": 1745,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1745,
											"name": "KECCAK256"
										},
										{
											"begin": 1732,
											"end": 1751,
											"name": "SWAP1"
										},
										{
											"begin": 1732,
											"end": 1751,
											"name": "DUP1"
										},
										{
											"begin": 1732,
											"end": 1751,
											"name": "MLOAD"
										},
										{
											"begin": 1732,
											"end": 1751,
											"name": "SWAP1"
										},
										{
											"begin": 1732,
											"end": 1751,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1732,
											"end": 1751,
											"name": "ADD"
										},
										{
											"begin": 1732,
											"end": 1751,
											"name": "SWAP1"
										},
										{
											"begin": 1732,
											"end": 1751,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 1732,
											"end": 1751,
											"name": "SWAP3"
										},
										{
											"begin": 1732,
											"end": 1751,
											"name": "SWAP2"
										},
										{
											"begin": 1732,
											"end": 1751,
											"name": "SWAP1"
										},
										{
											"begin": 1732,
											"end": 1751,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 1732,
											"end": 1751,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1751,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 1732,
											"end": 1751,
											"name": "JUMPDEST"
										},
										{
											"begin": 1732,
											"end": 1751,
											"name": "POP"
										},
										{
											"begin": 1761,
											"end": 1771,
											"name": "CALLER"
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1761,
											"end": 1780,
											"name": "AND"
										},
										{
											"begin": 1761,
											"end": 1789,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 1787,
											"end": 1788,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1781,
											"end": 1786,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1781,
											"end": 1786,
											"name": "SLOAD"
										},
										{
											"begin": 1781,
											"end": 1788,
											"name": "MUL"
										},
										{
											"begin": 1761,
											"end": 1789,
											"name": "SWAP1"
										},
										{
											"begin": 1761,
											"end": 1789,
											"name": "DUP2"
										},
										{
											"begin": 1761,
											"end": 1789,
											"name": "ISZERO"
										},
										{
											"begin": 1761,
											"end": 1789,
											"name": "MUL"
										},
										{
											"begin": 1761,
											"end": 1789,
											"name": "SWAP1"
										},
										{
											"begin": 1761,
											"end": 1789,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1761,
											"end": 1789,
											"name": "MLOAD"
										},
										{
											"begin": 1761,
											"end": 1789,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1789,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1761,
											"end": 1789,
											"name": "MLOAD"
										},
										{
											"begin": 1761,
											"end": 1789,
											"name": "DUP1"
										},
										{
											"begin": 1761,
											"end": 1789,
											"name": "DUP4"
										},
										{
											"begin": 1761,
											"end": 1789,
											"name": "SUB"
										},
										{
											"begin": 1761,
											"end": 1789,
											"name": "DUP2"
										},
										{
											"begin": 1761,
											"end": 1789,
											"name": "DUP6"
										},
										{
											"begin": 1761,
											"end": 1789,
											"name": "DUP9"
										},
										{
											"begin": 1761,
											"end": 1789,
											"name": "DUP9"
										},
										{
											"begin": 1761,
											"end": 1789,
											"name": "CALL"
										},
										{
											"begin": 1761,
											"end": 1789,
											"name": "SWAP4"
										},
										{
											"begin": 1761,
											"end": 1789,
											"name": "POP"
										},
										{
											"begin": 1761,
											"end": 1789,
											"name": "POP"
										},
										{
											"begin": 1761,
											"end": 1789,
											"name": "POP"
										},
										{
											"begin": 1761,
											"end": 1789,
											"name": "POP"
										},
										{
											"begin": 1761,
											"end": 1789,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1761,
											"end": 1789,
											"name": "POP"
										},
										{
											"begin": 1631,
											"end": 1796,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 1631,
											"end": 1796,
											"name": "JUMPDEST"
										},
										{
											"begin": 1507,
											"end": 1796,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 1507,
											"end": 1796,
											"name": "JUMPDEST"
										},
										{
											"begin": 1801,
											"end": 1806,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1801,
											"end": 1806,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1808,
											"name": "DUP2"
										},
										{
											"begin": 1801,
											"end": 1808,
											"name": "SLOAD"
										},
										{
											"begin": 1801,
											"end": 1808,
											"name": "DUP1"
										},
										{
											"begin": 1801,
											"end": 1808,
											"name": "SWAP3"
										},
										{
											"begin": 1801,
											"end": 1808,
											"name": "SWAP2"
										},
										{
											"begin": 1801,
											"end": 1808,
											"name": "SWAP1"
										},
										{
											"begin": 1801,
											"end": 1808,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1801,
											"end": 1808,
											"name": "ADD"
										},
										{
											"begin": 1801,
											"end": 1808,
											"name": "SWAP2"
										},
										{
											"begin": 1801,
											"end": 1808,
											"name": "SWAP1"
										},
										{
											"begin": 1801,
											"end": 1808,
											"name": "POP"
										},
										{
											"begin": 1801,
											"end": 1808,
											"name": "SSTORE"
										},
										{
											"begin": 1801,
											"end": 1808,
											"name": "POP"
										},
										{
											"begin": 1386,
											"end": 1816,
											"name": "POP"
										},
										{
											"begin": 1386,
											"end": 1816,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "JUMPDEST"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "MSTORE"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "DUP1"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "MSTORE"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "KECCAK256"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "SWAP2"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "POP"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "SWAP1"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "POP"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "SLOAD"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "DUP2"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "JUMPDEST"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "MSTORE"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "DUP1"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "MSTORE"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "KECCAK256"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "SWAP2"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "POP"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "SLOAD"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "SWAP1"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "EXP"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "SWAP1"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "DIV"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "AND"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "DUP2"
										},
										{
											"begin": 1045,
											"end": 1082,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "JUMPDEST"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "DUP3"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "DUP1"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "SLOAD"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "DUP2"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "AND"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "ISZERO"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "MUL"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "SUB"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "AND"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "SWAP1"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "DIV"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "SWAP1"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "MSTORE"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "KECCAK256"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "SWAP1"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "ADD"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "SWAP1"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "DIV"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "DUP2"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "ADD"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "SWAP3"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "DUP3"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "LT"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "JUMPI"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "DUP1"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "MLOAD"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "NOT"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "AND"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "DUP4"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "DUP1"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "ADD"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "OR"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "DUP6"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "SSTORE"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "JUMP"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "JUMPDEST"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "DUP3"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "DUP1"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "ADD"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "ADD"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "DUP6"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "SSTORE"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "DUP3"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "ISZERO"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "JUMPI"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "SWAP2"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "DUP3"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "ADD"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "JUMPDEST"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "DUP3"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "DUP2"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "GT"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "ISZERO"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "JUMPI"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "DUP3"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "MLOAD"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "DUP3"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "SSTORE"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "SWAP2"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "ADD"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "SWAP2"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "SWAP1"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "ADD"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "SWAP1"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "JUMP"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "JUMPDEST"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "JUMPDEST"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "POP"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "SWAP1"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "POP"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "SWAP2"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "SWAP1"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "JUMPDEST"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "POP"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "SWAP1"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "JUMPDEST"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "SWAP2"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "SWAP1"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "JUMPDEST"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "DUP1"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "DUP3"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "GT"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "ISZERO"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "JUMPI"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "DUP2"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "SWAP1"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "SSTORE"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "POP"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "ADD"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "JUMP"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "JUMPDEST"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "POP"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "SWAP1"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "JUMP"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "JUMPDEST"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "SWAP1"
										},
										{
											"begin": 857,
											"end": 1819,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"bet()": "11610c25",
							"item(uint256)": "898e6219",
							"money()": "4ddd108a",
							"play(uint256)": "6898f82b",
							"player(uint256)": "9e0551c6",
							"result(uint256)": "3c594059",
							"round()": "146ca531"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"bet\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"round\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"result\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"money\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"choose\",\"type\":\"uint256\"}],\"name\":\"play\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"item\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"player\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"test.sol\":\"paperstone\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"test.sol\":{\"keccak256\":\"0x88d9d51b1e1796a73d762d00e65d18b56e6cfe2999645c368b91860e1493c33a\",\"urls\":[\"bzzr://f9cfd246121c11781359f76c61962d62c82a2e7dac61e7e4b69089817bf34c1d\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"test.sol": {
				"ast": {
					"absolutePath": "test.sol",
					"exportedSymbols": {
						"SafeMath": [
							73
						],
						"paperstone": [
							234
						]
					},
					"id": 235,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 73,
							"linearizedBaseContracts": [
								73
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "177:106:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 10,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "187:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "192:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "187:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 16,
												"nodeType": "IfStatement",
												"src": "183:35:0",
												"trueBody": {
													"id": 15,
													"nodeType": "Block",
													"src": "195:23:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 13,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "210:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 9,
															"id": 14,
															"nodeType": "Return",
															"src": "203:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 34,
														"src": "223:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 17,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "223:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 22,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 19,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "235:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 20,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "239:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "235:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "223:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 24,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "253:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 25,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "257:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "253:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 27,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "262:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "253:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 23,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 238,
														"src": "246:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "246:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "246:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 31,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "277:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 9,
												"id": 32,
												"nodeType": "Return",
												"src": "270:8:0"
											}
										]
									},
									"documentation": "@dev Multiplies two numbers, throws on overflow.",
									"id": 34,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "123:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "123:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "134:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "134:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "122:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "168:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "167:9:0"
									},
									"scope": 73,
									"src": "110:173:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "432:198:0",
										"statements": [
											{
												"assignments": [
													44
												],
												"declarations": [
													{
														"constant": false,
														"id": 44,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 52,
														"src": "512:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 43,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "512:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 48,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 45,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "524:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 46,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "528:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "524:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "512:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 49,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 44,
													"src": "624:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 42,
												"id": 50,
												"nodeType": "Return",
												"src": "617:8:0"
											}
										]
									},
									"documentation": "@dev Integer division of two numbers, truncating the quotient.",
									"id": 52,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "378:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "389:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "389:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "377:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "423:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "422:9:0"
									},
									"scope": 73,
									"src": "365:265:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "810:43:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 62,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "823:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 63,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 54,
																"src": "828:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "823:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 61,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 238,
														"src": "816:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "816:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "816:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 67,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "843:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 68,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "847:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "843:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 60,
												"id": 70,
												"nodeType": "Return",
												"src": "836:12:0"
											}
										]
									},
									"documentation": "@dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).",
									"id": 72,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "756:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "756:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "767:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "767:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "755:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "801:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "801:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "800:9:0"
									},
									"scope": 73,
									"src": "743:110:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 235,
							"src": "24:831:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 234,
							"linearizedBaseContracts": [
								234
							],
							"name": "paperstone",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 76,
									"libraryName": {
										"contractScope": null,
										"id": 74,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 73,
										"src": "886:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$73",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "880:27:0",
									"typeName": {
										"id": 75,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "899:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 79,
									"name": "money",
									"nodeType": "VariableDeclaration",
									"scope": 234,
									"src": "909:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 77,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "909:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 78,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "927:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 82,
									"name": "miner",
									"nodeType": "VariableDeclaration",
									"scope": 234,
									"src": "930:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 80,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "930:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "302e31",
										"id": 81,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "950:9:0",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000_by_1",
											"typeString": "int_const 100000000000000000"
										},
										"value": "0.1"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 85,
									"name": "round",
									"nodeType": "VariableDeclaration",
									"scope": 234,
									"src": "961:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 83,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "961:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 84,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "979:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 87,
									"name": "better",
									"nodeType": "VariableDeclaration",
									"scope": 234,
									"src": "982:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 86,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "982:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 89,
									"name": "computer",
									"nodeType": "VariableDeclaration",
									"scope": 234,
									"src": "998:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 88,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "998:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "1040:2:0",
										"statements": []
									},
									"documentation": null,
									"id": 93,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1024:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:0:0"
									},
									"scope": 234,
									"src": "1013:29:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 97,
									"name": "player",
									"nodeType": "VariableDeclaration",
									"scope": 234,
									"src": "1045:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 96,
										"keyType": {
											"id": 94,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1053:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1045:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 95,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1061:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 101,
									"name": "item",
									"nodeType": "VariableDeclaration",
									"scope": 234,
									"src": "1084:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 100,
										"keyType": {
											"id": 98,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1092:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1084:21:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 99,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1100:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 105,
									"name": "result",
									"nodeType": "VariableDeclaration",
									"scope": 234,
									"src": "1118:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 104,
										"keyType": {
											"id": 102,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1126:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1118:23:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueType": {
											"id": 103,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "1134:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "1176:82:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 107,
														"name": "money",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "1185:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 108,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1192:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1185:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 120,
												"nodeType": "IfStatement",
												"src": "1182:67:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "1194:55:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 111,
																				"name": "player",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 97,
																				"src": "1212:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																					"typeString": "mapping(uint256 => address)"
																				}
																			},
																			"id": 113,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 112,
																				"name": "round",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 85,
																				"src": "1219:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1212:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 114,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 249,
																				"src": "1227:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "1227:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "1212:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 110,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		252,
																		253
																	],
																	"referencedDeclaration": 252,
																	"src": "1204:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1204:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "ExpressionStatement",
															"src": "1204:34:0"
														}
													]
												}
											},
											{
												"id": 121,
												"nodeType": "PlaceholderStatement",
												"src": "1254:1:0"
											}
										]
									},
									"documentation": null,
									"id": 123,
									"name": "betcheck",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1174:2:0"
									},
									"src": "1157:101:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "1290:92:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 127,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 249,
																	"src": "1304:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1304:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 129,
																"name": "miner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 82,
																"src": "1315:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1304:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 126,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															252,
															253
														],
														"referencedDeclaration": 252,
														"src": "1296:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1296:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "1296:25:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 133,
														"name": "money",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "1327:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 134,
															"name": "money",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "1335:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"id": 135,
															"name": "miner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "1343:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1335:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1327:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "1327:21:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 139,
															"name": "player",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "1354:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 141,
														"indexExpression": {
															"argumentTypes": null,
															"id": 140,
															"name": "round",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "1361:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1354:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 142,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "1368:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1368:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1354:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "1354:24:0"
											}
										]
									},
									"documentation": null,
									"id": 147,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "bet",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1273:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1290:0:0"
									},
									"scope": 234,
									"src": "1261:121:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "1419:397:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 153,
																"name": "money",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "1433:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 154,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1440:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1433:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 152,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															252,
															253
														],
														"referencedDeclaration": 252,
														"src": "1425:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1425:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 157,
												"nodeType": "ExpressionStatement",
												"src": "1425:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 158,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "1448:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 160,
														"indexExpression": {
															"argumentTypes": null,
															"id": 159,
															"name": "round",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "1453:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1448:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 161,
														"name": "choose",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "1460:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1448:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "1448:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 164,
														"name": "computer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "1472:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 165,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "1481:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1481:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "33",
																"id": 167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1498:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "1481:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1500:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1481:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1472:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "1472:29:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 173,
														"name": "choose",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "1510:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 174,
														"name": "computer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "1518:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1510:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 191,
																"name": "choose",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "1634:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 192,
																"name": "computer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 89,
																"src": "1641:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1634:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 194,
																			"name": "computer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 89,
																			"src": "1652:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1662:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1652:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 197,
																			"name": "choose",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 149,
																			"src": "1665:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "32",
																			"id": 198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1673:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "1665:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "1652:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 201,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1651:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1634:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 226,
														"nodeType": "Block",
														"src": "1722:74:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 210,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 105,
																			"src": "1732:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																				"typeString": "mapping(uint256 => string storage ref)"
																			}
																		},
																		"id": 212,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 211,
																			"name": "round",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 85,
																			"src": "1739:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "1732:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "57494e",
																		"id": 213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1746:5:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_bc9cc0dcd13d7dcc2f3a6540f43bd56de29365e6ca0d2c052fd686409207ba25",
																			"typeString": "literal_string \"WIN\""
																		},
																		"value": "WIN"
																	},
																	"src": "1732:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"id": 215,
																"nodeType": "ExpressionStatement",
																"src": "1732:19:0"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 223,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 221,
																				"name": "money",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 79,
																				"src": "1781:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "32",
																				"id": 222,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1787:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "1781:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 216,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 249,
																				"src": "1761:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 219,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "1761:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1761:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																			"typeString": "function (uint256)"
																		}
																	},
																	"id": 224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1761:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 225,
																"nodeType": "ExpressionStatement",
																"src": "1761:28:0"
															}
														]
													},
													"id": 227,
													"nodeType": "IfStatement",
													"src": "1631:165:0",
													"trueBody": {
														"id": 209,
														"nodeType": "Block",
														"src": "1676:37:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 203,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 105,
																			"src": "1686:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																				"typeString": "mapping(uint256 => string storage ref)"
																			}
																		},
																		"id": 205,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 204,
																			"name": "round",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 85,
																			"src": "1693:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "1686:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "4c4f5345",
																		"id": 206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1700:6:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_293325b8f110b3b1e176413d3bdf290dc9ad039a8b197c601138ee58483e1afa",
																			"typeString": "literal_string \"LOSE\""
																		},
																		"value": "LOSE"
																	},
																	"src": "1686:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"id": 208,
																"nodeType": "ExpressionStatement",
																"src": "1686:20:0"
															}
														]
													}
												},
												"id": 228,
												"nodeType": "IfStatement",
												"src": "1507:289:0",
												"trueBody": {
													"id": 190,
													"nodeType": "Block",
													"src": "1536:85:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 176,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 105,
																		"src": "1550:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																			"typeString": "mapping(uint256 => string storage ref)"
																		}
																	},
																	"id": 178,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 177,
																		"name": "round",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 85,
																		"src": "1557:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1550:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "44524157",
																	"id": 179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1564:6:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_1cf54708aaa392dbeba88d1a07e69feaba67586acd469366b89b52bf44132258",
																		"typeString": "literal_string \"DRAW\""
																	},
																	"value": "DRAW"
																},
																"src": "1550:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															},
															"id": 181,
															"nodeType": "ExpressionStatement",
															"src": "1550:20:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 187,
																		"name": "money",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 79,
																		"src": "1604:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 182,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 249,
																			"src": "1584:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1584:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1584:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1584:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 189,
															"nodeType": "ExpressionStatement",
															"src": "1584:26:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1801:7:0",
													"subExpression": {
														"argumentTypes": null,
														"id": 229,
														"name": "round",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "1801:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 231,
												"nodeType": "ExpressionStatement",
												"src": "1801:7:0"
											}
										]
									},
									"documentation": null,
									"id": 233,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "play",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"name": "choose",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "1400:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1399:13:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1419:0:0"
									},
									"scope": 234,
									"src": "1386:430:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 235,
							"src": "857:962:0"
						}
					],
					"src": "0:1819:0"
				},
				"id": 0
			}
		}
	}
}